import (PROP         /peano_new/prop.ghi () "")
import (PREDICATE    /peano_new/predicate/all.ghi (PROP) "")
import (NATURALS     /peano_new/arithmetic/naturals/common.ghi (PROP PREDICATE) "")
import (NEGATIVE     /peano_new/arithmetic/common/negative.ghi (PROP PREDICATE NATURALS) "")
import (DIVISION     /peano_new/arithmetic/common/division.ghi (PROP PREDICATE NATURALS NEGATIVE) "")
import (CALCULATIONS /peano_new/arithmetic/common/calculations/naturals.ghi (PROP PREDICATE NATURALS) "")

## <context>
##   This theorem is part of a series of theorems demonstrating conversion
##   of fractions to decimals.
## </context>

tvar (wff ph ps ch th ta)
tvar (nat A B C D A' B' C' D' A0 A1 A2 A3)
var (nat v w x y z v' w' x' y' z')

## <title> Definition of One-Tenth </title>
defthm (df-.1 nat (.1) () () (= (.1) (/ (1) (10)))
  (/ (1) (10)) eqid
)



## <title> Substitution </title>
## <table>
##   (= A (* B  [ C ]   ]   ] ))
##   (=         [ C ]   [ D ] )
##   (= A (* B  [   [   [ D ] ))
## </table>
thm (EqReplaceEq1Mul1 () (
     replacee (= A (* B C))
     substitution (= C D)) 
     (= A (* B D))
  replacee substitution
  B muleq2i
  EqReplaceEq1
)

## <title> Convert Fraction to Decimal </title>
thm (fracToDecimal () () (= (/ A (10)) (* A (.1)))
  10notEqual0
  A expandFraci
  df-.1 eqcomi  
  EqReplaceEq1Mul1
)

## <title> Substitution </title>
## <table>
##   (= A (/  [ B ]   ]   ]  D))
##   (=       [ B ]   [ C ] )
##   (= A (/  [   [   [ C ]  D))
## </table>
thm (EqReplaceEq1Div0 () (
     replacee (= A (/ B D))
     substitution (= B C)) 
     (= A (/ C D))
  replacee substitution
  D diveq1i
  EqReplaceEq1
)

## <title> Substitution </title>
## <table>
##   (= A (/ B  [ C ]   ]   ] ))
##   (=         [ C ]   [ D ] )
##   (= A (/ B  [   [   [ D ] ))
## </table>
thm (EqReplaceEq1Div1 () (
     replacee (= A (/ B C))
     substitution (= C D)) 
     (= A (/ B D))
  replacee substitution
  B diveq2i
  EqReplaceEq1
)

## <title> One-Half in Decimal Form </title>
thm (halfDecimal () () (= (/ (1) (2)) (* (5) (.1)))
  ## <d 'Multiply top and bottom by 5'>
    2notEqual0
    5notEqual0
    (1) fracFactorsi eqcomi  
  ## </d>
  ## <d 'Multiply Integers'>
    ## <d 'Multiplicative Identity '>
      (5) mulidr
      EqReplaceEq1Div0
    ## </d 'Multiplicative Identity '> 
    ## <d 'Evaluate'>
      2times5
      EqReplaceEq1Div1
    ## </d 'Evaluate'>
  ## </d>
  ## <d>
    (5) fracToDecimal  
    EqReplaceEq1
  ## </d>
)

## <title> One-Fifth in Decimal Form </title>
thm (oneFifthDecimal () () (= (/ (1) (5)) (* (2) (.1)))
  ## <d 'Multiply top and bottom by 2'>
    5notEqual0
    2notEqual0
    (1) fracFactorsi eqcomi  
  ## </d>
  ## <d 'Multiply Integers'>
    ## <d 'Multiplicative Identity '>
      (2) mulidr
      EqReplaceEq1Div0
    ## </d 'Multiplicative Identity '> 
    ## <d 'Evaluate'>
      5times2
      EqReplaceEq1Div1
    ## </d 'Evaluate'>
  ## </d>
  ## <d>
    (2) fracToDecimal  
    EqReplaceEq1
  ## </d>
)

## <summary> An example of simplifying a fraction </summary>
thm (fractionExample1 () () (= (/ (4) (8)) (/ (1) (2)))   
  ## <d 'Evaluate'>
    ## <d 'Separate Common Factor'>
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          (4) mulidr
        ## </d 'Evaluate'>
        ## <d 'Commutative Property'>
          (* (1) (4)) (4) eqcom
          mpbi
        ## </d 'Commutative Property'>
        (8) diveq1i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          2times4
        ## </d 'Evaluate'>
        ## <d 'Commutative Property'>
          (* (2) (4)) (8) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Div1
      ## </d 'Evaluate'>
    ## </d 'Separate Common Factor'>
    ## <d 'Cancel Common Factor'>
      2notEqual0
      4notEqual0
      (1) fracFactorsi
      EqReplaceEq1
    ## </d 'Cancel Common Factor'>
  ## </d 'Evaluate'>
)

## <summary> An example of simplifying a fraction </summary>
thm (fractionExample2 () () (= (/ (+ (* (2) (10)) (1)) (3)) (7))
  ## <d 'Evaluate'>
    ## <d 'Separate Common Factor'>
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          7times3
        ## </d 'Evaluate'>
        ## <d 'Commutative Property'>
          (* (7) (3)) (+ (* (2) (10)) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        (3) diveq1i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          (3) mulidr
        ## </d 'Evaluate'>
        ## <d 'Commutative Property'>
          (* (1) (3)) (3) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Div1
      ## </d 'Evaluate'>
    ## </d 'Separate Common Factor'>
    ## <d 'Cancel Common Factor'>
      1notEqual0
      3notEqual0
      (7) fracFactorsi
      EqReplaceEq1
    ## </d 'Cancel Common Factor'>
    ## <d 'Evaluate'>
      (7) divid
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
)

## <title> Substitution </title>
## <table>
##   (= A (+ B  [ C ]   ]   ] ))
##   (=         [ C ]   [ D ] )
##   (= A (+ B  [   [   [ D ] ))
## </table>
thm (EqReplaceEq1Add1 () (
     replacee (= A (+ B C))
     substitution (= C D)) 
     (= A (+ B D))
  replacee substitution
  B addeq2i
  EqReplaceEq1
)

## <title> Substitution </title>
## <table>
##   (= A (*  [ B ]   ]   ]  D))
##   (=       [ B ]   [ C ] )
##   (= A (*  [   [   [ C ]  D))
## </table>
thm (EqReplaceEq1Mul0 () (
     replacee (= A (* B D))
     substitution (= B C)) 
     (= A (* C D))
  replacee substitution
  D muleq1i
  EqReplaceEq1
)

## <title> Substitution </title>
## <table>
##   (= A (+  [ B ]   ]   ]  D))
##   (=       [ B ]   [ C ] )
##   (= A (+  [   [   [ C ]  D))
## </table>
thm (EqReplaceEq1Add0 () (
     replacee (= A (+ B D))
     substitution (= B C)) 
     (= A (+ C D))
  replacee substitution
  D addeq1i
  EqReplaceEq1
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ B  [ C ]   ]   ] ) A'))
##   (=            [ C ]   [ D ] )
##   (= A (+ (+ B  [   [   [ D ] ) A'))
## </table>
thm (EqReplaceEq1Add0Add1 () (
     replacee (= A (+ (+ B C) A'))
     substitution (= C D)) 
     (= A (+ (+ B D) A'))
  replacee substitution
  B addeq2i
  EqReplaceEq1Add0
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ B (*  [ C ]   ]   ]  A')) B'))
##   (=               [ C ]   [ D ] )
##   (= A (+ (+ B (*  [   [   [ D ]  A')) B'))
## </table>
thm (EqReplaceEq1Add0Add1Mul0 () (
     replacee (= A (+ (+ B (* C A')) B'))
     substitution (= C D)) 
     (= A (+ (+ B (* D A')) B'))
  replacee substitution
  A' muleq1i
  EqReplaceEq1Add0Add1
)

## <title> Substitution </title>
## <table>
##   (= A (+ (*  [ B ]   ]   ]  D) A'))
##   (=          [ B ]   [ C ] )
##   (= A (+ (*  [   [   [ C ]  D) A'))
## </table>
thm (EqReplaceEq1Add0Mul0 () (
     replacee (= A (+ (* B D) A'))
     substitution (= B C)) 
     (= A (+ (* C D) A'))
  replacee substitution
  D muleq1i
  EqReplaceEq1Add0
)







## <summary> An example of simplifying a fraction </summary>
thm (fractionExample3 () () (= (/ (+ (* (4) (* (10) (10))) (2)) (+ (* (5) (10)) (4))) (/ (+ (* (6) (10)) (7)) (9)))
   
  
  ## <d 'Evaluate'>
    ## <d 'Separate Common Factor'>
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          ## <d 'One-Digit times Multiple-Digits'>
            ## <d 'Rearrange Digits'>
              ## <d 'Distributive Property'>
                (* (6) (10)) (7) (6) distl
              ## </d 'Distributive Property'>
            ## </d 'Rearrange Digits'>
            ## <d 'Multiply Two Digits'>
              ## <d 'Evaluate'>
                7times6
              ## </d 'Evaluate'>
              EqReplaceEq1Add1
            ## </d 'Multiply Two Digits'>
            ## <d 'Multiply Two Digits'>
              ## <d 'Rearrange Terms'>
                ## <d 'Reorder Terms'>
                  ## <d 'Associative Property'>
                    (6) (10) (6) mulass
                  ## </d 'Associative Property'>
                  ## <d 'Commutative Property'>
                    (10) (6) mulcom
                    EqReplaceEq1Mul1
                  ## </d 'Commutative Property'>
                  ## <d 'Associative Property'>
                    (6) (6) (10) mulass
                    ## <d 'Commutative Property'>
                      (* (* (6) (6)) (10)) (* (6) (* (6) (10))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1
                  ## </d 'Associative Property'>
                ## </d 'Reorder Terms'>
              ## </d 'Rearrange Terms'>
              ## <d 'Evaluate'>
                6times6
                EqReplaceEq1Mul0
              ## </d 'Evaluate'>
              ## <d 'Evaluate'>
                ## <d 'Distributive Property'>
                  (* (3) (10)) (6) (10) distl
                ## </d 'Distributive Property'>
                ## <d 'Evaluate'>
                  ## <d 'Associative Property'>
                    (3) (10) (10) mulass
                  ## </d 'Associative Property'>
                  EqReplaceEq1Add0
                ## </d 'Evaluate'>
                EqReplaceEq1
              ## </d 'Evaluate'>
              EqReplaceEq1Add0
            ## </d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Addition'>
                ## <d 'Group Common Digits'>
                  ## <d 'Rearrange Terms'>
                    ## <d 'Associate All Left'>
                      ## <d 'Associative Property'>
                        (+ (* (3) (* (10) (10))) (* (6) (10))) (* (4) (10)) (2) addass
                        ## <d 'Commutative Property'>
                          (+ (+ (+ (* (3) (* (10) (10))) (* (6) (10))) (* (4) (10))) (2)) (+ (+ (* (3) (* (10) (10))) (* (6) (10))) (+ (* (4) (10)) (2))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                      ## </d 'Associative Property'>
                    ## </d 'Associate All Left'>
                    ## <d 'Change Associations'>
                      ## <d 'Associative Property'>
                        (* (3) (* (10) (10))) (* (6) (10)) (* (4) (10)) addass
                        (2) addeq1i
                      ## </d 'Associative Property'>
                      EqReplaceEq1
                    ## </d 'Change Associations'>
                  ## </d 'Rearrange Terms'>
                  ## <d 'Distributive Property'>
                    (6) (4) (10) distl
                    ## <d 'Commutative Property'>
                      (* (+ (6) (4)) (10)) (+ (* (6) (10)) (* (4) (10))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1Add0Add1
                  ## </d 'Distributive Property'>
                ## </d 'Group Common Digits'>
                ## <d 'Single-digit Addition'>
                  6plus4
                  EqReplaceEq1Add0Add1Mul0
                ## </d 'Single-digit Addition'>
                ## <d 'Carry the One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (* (10) (10)) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (* (10) (10))) (* (10) (10)) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    (* (3) (* (10) (10))) addeq2i
                  ## </d 'Multiply By One'>
                  ## <d 'Distributive Property'>
                    (3) (1) (* (10) (10)) distl
                    ## <d 'Commutative Property'>
                      (* (+ (3) (1)) (* (10) (10))) (+ (* (3) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1
                  ## </d 'Distributive Property'>
                  EqReplaceEq1Add0
                ## </d 'Carry the One'>
                ## <d 'Single-digit Addition'>
                  3plus1
                  EqReplaceEq1Add0Mul0
                ## </d 'Single-digit Addition'>
              ## </d 'Addition'>
              EqReplaceEq1
            ## </d 'Evaluate'>
          ## </d 'One-Digit times Multiple-Digits'>
        ## </d 'Evaluate'>
        ## <d 'Commutative Property'>
          (* (+ (* (6) (10)) (7)) (6)) (+ (* (4) (* (10) (10))) (2)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        (+ (* (5) (10)) (4)) diveq1i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          9times6
        ## </d 'Evaluate'>
        ## <d 'Commutative Property'>
          (* (9) (6)) (+ (* (5) (10)) (4)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Div1
      ## </d 'Evaluate'>
    ## </d 'Separate Common Factor'>
    ## <d 'Cancel Common Factor'>
      9notEqual0
      6notEqual0
      (+ (* (6) (10)) (7)) fracFactorsi
      EqReplaceEq1
    ## </d 'Cancel Common Factor'>
  ## </d 'Evaluate'>
)

## <summary> An example of multiplying two fractions. </summary>
thm (multiplyFractions1 () () (= (* (/ (1) (2)) (/ (4) (5))) (/ (2) (5)))
  ## <d 'Evaluate'>
    ## <d 'Combine Fractions'>
      2notEqual0
      5notEqual0
      (1) (4) fracmuli
    ## </d 'Combine Fractions'>
    ## <d 'Multiply Numerator'>
      (4) mulidr
      EqReplaceEq1Div0
    ## </d 'Multiply Numerator'>
    ## <d 'Multiply Denominator'>
      2times5
      EqReplaceEq1Div1
    ## </d 'Multiply Denominator'>
    ## <d 'Reduce Fraction'>
      ## <d 'Separate Common Factor'>
        ## <d 'Evaluate'>
          ## <d 'Evaluate'>
            2times2
          ## </d 'Evaluate'>
          ## <d 'Commutative Property'>
            (* (2) (2)) (4) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (10) diveq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          ## <d 'Evaluate'>
            5times2
          ## </d 'Evaluate'>
          ## <d 'Commutative Property'>
            (* (5) (2)) (10) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Div1
        ## </d 'Evaluate'>
      ## </d 'Separate Common Factor'>
      ## <d 'Cancel Common Factor'>
        5notEqual0
        2notEqual0
        (2) fracFactorsi
        EqReplaceEq1
      ## </d 'Cancel Common Factor'>
      EqReplaceEq1
    ## </d 'Reduce Fraction'>
  ## </d 'Evaluate'>
)



## <title> Substitution </title>
## <table>
##   (= A (+ (+  [ B ]   ]   ]  D) A'))
##   (=          [ B ]   [ C ] )
##   (= A (+ (+  [   [   [ C ]  D) A'))
## </table>
thm (EqReplaceEq1Add0Add0 () (
     replacee (= A (+ (+ B D) A'))
     substitution (= B C)) 
     (= A (+ (+ C D) A'))
  replacee substitution
  D addeq1i
  EqReplaceEq1Add0
)


## <title> Substitution </title>
## <table>
##   (= A (+ (+ (*  [ B ]   ]   ]  D) A') B'))
##   (=             [ B ]   [ C ] )
##   (= A (+ (+ (*  [   [   [ C ]  D) A') B'))
## </table>
thm (EqReplaceEq1Add0Add0Mul0 () (
     replacee (= A (+ (+ (* B D) A') B'))
     substitution (= B C)) 
     (= A (+ (+ (* C D) A') B'))
  replacee substitution
  D muleq1i
  EqReplaceEq1Add0Add0
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ (+  [ B ]   ]   ]  D) A') B'))
##   (=             [ B ]   [ C ] )
##   (= A (+ (+ (+  [   [   [ C ]  D) A') B'))
## </table>
thm (EqReplaceEq1Add0Add0Add0 () (
     replacee (= A (+ (+ (+ B D) A') B'))
     substitution (= B C)) 
     (= A (+ (+ (+ C D) A') B'))
  replacee substitution
  D addeq1i
  EqReplaceEq1Add0Add0
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ (+ B  [ C ]   ]   ] ) A') B'))
##   (=               [ C ]   [ D ] )
##   (= A (+ (+ (+ B  [   [   [ D ] ) A') B'))
## </table>
thm (EqReplaceEq1Add0Add0Add1 () (
     replacee (= A (+ (+ (+ B C) A') B'))
     substitution (= C D)) 
     (= A (+ (+ (+ B D) A') B'))
  replacee substitution
  B addeq2i
  EqReplaceEq1Add0Add0
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ (+ B (*  [ C ]   ]   ]  A')) B') C'))
##   (=                  [ C ]   [ D ] )
##   (= A (+ (+ (+ B (*  [   [   [ D ]  A')) B') C'))
## </table>
thm (EqReplaceEq1Add0Add0Add1Mul0 () (
     replacee (= A (+ (+ (+ B (* C A')) B') C'))
     substitution (= C D)) 
     (= A (+ (+ (+ B (* D A')) B') C'))
  replacee substitution
  A' muleq1i
  EqReplaceEq1Add0Add0Add1
)

## <summary> An example of multiplying two fractions. </summary>
thm (multiplyFractions2 () () (= (* (/ (+ (* (3) (10)) (6)) (5)) (/ (+ (* (6) (10)) (7)) (3))) (/ (+ (* (8) (* (10) (10))) (4)) (5)))
  ## <d 'Evaluate'>
    ## <d 'Combine Fractions'>
      5notEqual0
      3notEqual0
      (+ (* (3) (10)) (6)) (+ (* (6) (10)) (7)) fracmuli
    ## </d 'Combine Fractions'>
    ## <d 'Multiply Numerator'>
      ## <d 'Multiplication'>
        ## <d 'Distribute Digits'>
          ## <d 'Distributive Property'>
            (+ (* (3) (10)) (6)) (* (6) (10)) (7) distr
          ## </d 'Distributive Property'>
        ## </d 'Distribute Digits'>
        ## <d 'Pull Out Base 10'>
          ## <d 'Associative Property'>
            (+ (* (3) (10)) (6)) (6) (10) mulass
            ## <d 'Commutative Property'>
              (* (* (+ (* (3) (10)) (6)) (6)) (10)) (* (+ (* (3) (10)) (6)) (* (6) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            (* (+ (* (3) (10)) (6)) (7)) addeq1i
          ## </d 'Associative Property'>
          EqReplaceEq1
        ## </d 'Pull Out Base 10'>
        ## <d 'Multiply Each Digit'>
          ## <d 'Multiply Two Individual Digits'>
            ## <d 'Multiply Base'>
              ## <d 'One-Digit times Multiple-Digits'>
                ## <d 'Rearrange Digits'>
                  ## <d 'Distributive Property'>
                    (* (3) (10)) (6) (7) distl
                  ## </d 'Distributive Property'>
                ## </d 'Rearrange Digits'>
                ## <d 'Multiply Two Digits'>
                  ## <d 'Evaluate'>
                    6times7
                  ## </d 'Evaluate'>
                  EqReplaceEq1Add1
                ## </d 'Multiply Two Digits'>
                ## <d 'Multiply Two Digits'>
                  ## <d 'Rearrange Terms'>
                    ## <d 'Reorder Terms'>
                      ## <d 'Associative Property'>
                        (3) (10) (7) mulass
                      ## </d 'Associative Property'>
                      ## <d 'Commutative Property'>
                        (10) (7) mulcom
                        EqReplaceEq1Mul1
                      ## </d 'Commutative Property'>
                      ## <d 'Associative Property'>
                        (3) (7) (10) mulass
                        ## <d 'Commutative Property'>
                          (* (* (3) (7)) (10)) (* (3) (* (7) (10))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1
                      ## </d 'Associative Property'>
                    ## </d 'Reorder Terms'>
                  ## </d 'Rearrange Terms'>
                  ## <d 'Evaluate'>
                    3times7
                    EqReplaceEq1Mul0
                  ## </d 'Evaluate'>
                  ## <d 'Evaluate'>
                    ## <d 'Distributive Property'>
                      (* (2) (10)) (1) (10) distl
                    ## </d 'Distributive Property'>
                    ## <d 'Evaluate'>
                      (10) mulidr
                      EqReplaceEq1Add1
                    ## </d 'Evaluate'>
                    ## <d 'Evaluate'>
                      ## <d 'Associative Property'>
                        (2) (10) (10) mulass
                      ## </d 'Associative Property'>
                      EqReplaceEq1Add0
                    ## </d 'Evaluate'>
                    EqReplaceEq1
                  ## </d 'Evaluate'>
                  EqReplaceEq1Add0
                ## </d 'Multiply Two Digits'>
                ## <d 'Evaluate'>
                  ## <d 'Addition'>
                    ## <d 'Group Common Digits'>
                      ## <d 'Rearrange Terms'>
                        ## <d 'Associate All Left'>
                          ## <d 'Associative Property'>
                            (+ (* (2) (* (10) (10))) (10)) (* (4) (10)) (2) addass
                            ## <d 'Commutative Property'>
                              (+ (+ (+ (* (2) (* (10) (10))) (10)) (* (4) (10))) (2)) (+ (+ (* (2) (* (10) (10))) (10)) (+ (* (4) (10)) (2))) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                          ## </d 'Associative Property'>
                        ## </d 'Associate All Left'>
                        ## <d 'Change Associations'>
                          ## <d 'Associative Property'>
                            (* (2) (* (10) (10))) (10) (* (4) (10)) addass
                            (2) addeq1i
                          ## </d 'Associative Property'>
                          EqReplaceEq1
                        ## </d 'Change Associations'>
                      ## </d 'Rearrange Terms'>
                      ## <d 'Multiply By One'>
                        ## <d 'Multiply By One'>
                          ## <d 'Multiply By One'>
                            ## <d 'Multiply By One'>
                              ## <d 'Evaluate'>
                                ## <d 'Evaluate'>
                                  (10) mulidr
                                ## </d 'Evaluate'>
                                ## <d 'Commutative Property'>
                                  (* (1) (10)) (10) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                              ## </d 'Evaluate'>
                              (* (4) (10)) addeq1i
                            ## </d 'Multiply By One'>
                            (* (2) (* (10) (10))) addeq2i
                          ## </d 'Multiply By One'>
                          (2) addeq1i
                        ## </d 'Multiply By One'>
                        EqReplaceEq1
                      ## </d 'Multiply By One'>
                      ## <d 'Distributive Property'>
                        (1) (4) (10) distl
                        ## <d 'Commutative Property'>
                          (* (+ (1) (4)) (10)) (+ (* (1) (10)) (* (4) (10))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0Add1
                      ## </d 'Distributive Property'>
                    ## </d 'Group Common Digits'>
                    ## <d 'Single-digit Addition'>
                      1plus4
                      EqReplaceEq1Add0Add1Mul0
                    ## </d 'Single-digit Addition'>
                    ## <d 'Simplify'>
                      ## <d 'Associative Property'>
                        (* (2) (* (10) (10))) (* (5) (10)) (2) addass
                      ## </d 'Associative Property'>
                      EqReplaceEq1
                    ## </d 'Simplify'>
                  ## </d 'Addition'>
                  EqReplaceEq1
                ## </d 'Evaluate'>
              ## </d 'One-Digit times Multiple-Digits'>
            ## </d 'Multiply Base'>
            (* (* (+ (* (3) (10)) (6)) (6)) (10)) addeq2i
          ## </d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Two Individual Digits'>
            ## <d 'Multiply Significant Digits'>
              ## <d 'One-Digit times Multiple-Digits'>
                ## <d 'Rearrange Digits'>
                  ## <d 'Distributive Property'>
                    (* (3) (10)) (6) (6) distl
                  ## </d 'Distributive Property'>
                ## </d 'Rearrange Digits'>
                ## <d 'Multiply Two Digits'>
                  ## <d 'Evaluate'>
                    6times6
                  ## </d 'Evaluate'>
                  EqReplaceEq1Add1
                ## </d 'Multiply Two Digits'>
                ## <d 'Multiply Two Digits'>
                  ## <d 'Rearrange Terms'>
                    ## <d 'Reorder Terms'>
                      ## <d 'Associative Property'>
                        (3) (10) (6) mulass
                      ## </d 'Associative Property'>
                      ## <d 'Commutative Property'>
                        (10) (6) mulcom
                        EqReplaceEq1Mul1
                      ## </d 'Commutative Property'>
                      ## <d 'Associative Property'>
                        (3) (6) (10) mulass
                        ## <d 'Commutative Property'>
                          (* (* (3) (6)) (10)) (* (3) (* (6) (10))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1
                      ## </d 'Associative Property'>
                    ## </d 'Reorder Terms'>
                  ## </d 'Rearrange Terms'>
                  ## <d 'Evaluate'>
                    3times6
                    EqReplaceEq1Mul0
                  ## </d 'Evaluate'>
                  ## <d 'Evaluate'>
                    ## <d 'Distributive Property'>
                      (10) (8) (10) distl
                    ## </d 'Distributive Property'>
                    EqReplaceEq1
                  ## </d 'Evaluate'>
                  EqReplaceEq1Add0
                ## </d 'Multiply Two Digits'>
                ## <d 'Evaluate'>
                  ## <d 'Addition'>
                    ## <d 'Group Common Digits'>
                      ## <d 'Rearrange Terms'>
                        ## <d 'Associate All Left'>
                          ## <d 'Associative Property'>
                            (+ (* (10) (10)) (* (8) (10))) (* (3) (10)) (6) addass
                            ## <d 'Commutative Property'>
                              (+ (+ (+ (* (10) (10)) (* (8) (10))) (* (3) (10))) (6)) (+ (+ (* (10) (10)) (* (8) (10))) (+ (* (3) (10)) (6))) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                          ## </d 'Associative Property'>
                        ## </d 'Associate All Left'>
                        ## <d 'Change Associations'>
                          ## <d 'Associative Property'>
                            (* (10) (10)) (* (8) (10)) (* (3) (10)) addass
                            (6) addeq1i
                          ## </d 'Associative Property'>
                          EqReplaceEq1
                        ## </d 'Change Associations'>
                      ## </d 'Rearrange Terms'>
                      ## <d 'Multiply By One'>
                        ## <d 'Multiply By One'>
                          ## <d 'Multiply By One'>
                            ## <d 'Evaluate'>
                              ## <d 'Evaluate'>
                                (* (10) (10)) mulidr
                              ## </d 'Evaluate'>
                              ## <d 'Commutative Property'>
                                (* (1) (* (10) (10))) (* (10) (10)) eqcom
                                mpbi
                              ## </d 'Commutative Property'>
                            ## </d 'Evaluate'>
                            (+ (* (8) (10)) (* (3) (10))) addeq1i
                          ## </d 'Multiply By One'>
                          (6) addeq1i
                        ## </d 'Multiply By One'>
                        EqReplaceEq1
                      ## </d 'Multiply By One'>
                      ## <d 'Distributive Property'>
                        (8) (3) (10) distl
                        ## <d 'Commutative Property'>
                          (* (+ (8) (3)) (10)) (+ (* (8) (10)) (* (3) (10))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0Add1
                      ## </d 'Distributive Property'>
                    ## </d 'Group Common Digits'>
                    ## <d 'Single-digit Addition'>
                      8plus3
                      EqReplaceEq1Add0Add1Mul0
                    ## </d 'Single-digit Addition'>
                    ## <d 'Carry the One'>
                      ## <d 'Distributive Property'>
                        (10) (1) (10) distl
                        (* (1) (* (10) (10))) addeq2i
                      ## </d 'Distributive Property'>
                      ## <d 'Associative Property'>
                        (* (1) (* (10) (10))) (* (10) (10)) (* (1) (10)) addass
                        ## <d 'Commutative Property'>
                          (+ (+ (* (1) (* (10) (10))) (* (10) (10))) (* (1) (10))) (+ (* (1) (* (10) (10))) (+ (* (10) (10)) (* (1) (10)))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1
                      ## </d 'Associative Property'>
                      ## <d 'Multiply By One'>
                        ## <d 'Evaluate'>
                          ## <d 'Evaluate'>
                            (* (10) (10)) mulidr
                          ## </d 'Evaluate'>
                          ## <d 'Commutative Property'>
                            (* (1) (* (10) (10))) (* (10) (10)) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Evaluate'>
                        EqReplaceEq1Add0Add1
                      ## </d 'Multiply By One'>
                      ## <d 'Distributive Property'>
                        (1) (1) (* (10) (10)) distl
                        ## <d 'Commutative Property'>
                          (* (+ (1) (1)) (* (10) (10))) (+ (* (1) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0
                      ## </d 'Distributive Property'>
                      EqReplaceEq1Add0
                    ## </d 'Carry the One'>
                    ## <d 'Single-digit Addition'>
                      1plus1
                      EqReplaceEq1Add0Add0Mul0
                    ## </d 'Single-digit Addition'>
                    ## <d 'Simplify'>
                      ## <d 'Associative Property'>
                        (* (2) (* (10) (10))) (* (1) (10)) (6) addass
                      ## </d 'Associative Property'>
                      ## <d 'Simplify'>
                        ## <d 'Simplify'>
                          ## <d 'Multiplicative Identity'>
                            (10) mulidr
                          ## </d 'Multiplicative Identity'>
                          (6) addeq1i
                        ## </d 'Simplify'>
                        EqReplaceEq1Add1
                      ## </d 'Simplify'>
                      EqReplaceEq1
                    ## </d 'Simplify'>
                  ## </d 'Addition'>
                  EqReplaceEq1
                ## </d 'Evaluate'>
              ## </d 'One-Digit times Multiple-Digits'>
              (10) muleq1i
            ## </d 'Multiply Significant Digits'>
            ## <d 'Multiply Base'>
              ## <d 'Distributive Property'>
                (* (2) (* (10) (10))) (+ (10) (6)) (10) distl
              ## </d 'Distributive Property'>
              ## <d 'Evaluate'>
                ## <d 'Distributive Property'>
                  (10) (6) (10) distl
                ## </d 'Distributive Property'>
                EqReplaceEq1Add1
              ## </d 'Evaluate'>
              ## <d 'Evaluate'>
                ## <d 'Associative Property'>
                  (2) (* (10) (10)) (10) mulass
                ## </d 'Associative Property'>
                ## <d 'Evaluate'>
                  ## <d 'Associative Property'>
                    (10) (10) (10) mulass
                  ## </d 'Associative Property'>
                  EqReplaceEq1Mul1
                ## </d 'Evaluate'>
                EqReplaceEq1Add0
              ## </d 'Evaluate'>
              EqReplaceEq1
            ## </d 'Multiply Base'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Individual Digits'>
          EqReplaceEq1
        ## </d 'Multiply Each Digit'>
        ## <d 'Sum the Total'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Rearrange Terms'>
                ## <d 'Associate All Left'>
                  ## <d 'Associative Property'>
                    (+ (* (2) (* (10) (* (10) (10)))) (+ (* (10) (10)) (* (6) (10)))) (* (2) (* (10) (10))) (+ (* (5) (10)) (2)) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (+ (* (2) (* (10) (* (10) (10)))) (+ (* (10) (10)) (* (6) (10)))) (* (2) (* (10) (10)))) (+ (* (5) (10)) (2))) (+ (+ (* (2) (* (10) (* (10) (10)))) (+ (* (10) (10)) (* (6) (10)))) (+ (* (2) (* (10) (10))) (+ (* (5) (10)) (2)))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Associative Property'>
                  ## <d 'Associative Property'>
                    (+ (+ (* (2) (* (10) (* (10) (10)))) (+ (* (10) (10)) (* (6) (10)))) (* (2) (* (10) (10)))) (* (5) (10)) (2) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (+ (+ (* (2) (* (10) (* (10) (10)))) (+ (* (10) (10)) (* (6) (10)))) (* (2) (* (10) (10)))) (* (5) (10))) (2)) (+ (+ (+ (* (2) (* (10) (* (10) (10)))) (+ (* (10) (10)) (* (6) (10)))) (* (2) (* (10) (10)))) (+ (* (5) (10)) (2))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1
                  ## </d 'Associative Property'>
                  ## <d 'Associative Property'>
                    (* (2) (* (10) (* (10) (10)))) (* (10) (10)) (* (6) (10)) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (* (2) (* (10) (* (10) (10)))) (* (10) (10))) (* (6) (10))) (+ (* (2) (* (10) (* (10) (10)))) (+ (* (10) (10)) (* (6) (10)))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1Add0Add0Add0
                  ## </d 'Associative Property'>
                ## </d 'Associate All Left'>
                ## <d 'Reorder Terms'>
                  ## <d 'Associative Property'>
                    (+ (* (2) (* (10) (* (10) (10)))) (* (10) (10))) (* (6) (10)) (* (2) (* (10) (10))) addass
                    (* (5) (10)) addeq1i
                    (2) addeq1i
                  ## </d 'Associative Property'>
                  ## <d 'Commutative Property'>
                    (* (6) (10)) (* (2) (* (10) (10))) addcom
                    EqReplaceEq1Add0Add0Add1
                  ## </d 'Commutative Property'>
                  ## <d 'Associative Property'>
                    (+ (* (2) (* (10) (* (10) (10)))) (* (10) (10))) (* (2) (* (10) (10))) (* (6) (10)) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (+ (* (2) (* (10) (* (10) (10)))) (* (10) (10))) (* (2) (* (10) (10)))) (* (6) (10))) (+ (+ (* (2) (* (10) (* (10) (10)))) (* (10) (10))) (+ (* (2) (* (10) (10))) (* (6) (10)))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1Add0Add0
                  ## </d 'Associative Property'>
                  EqReplaceEq1
                ## </d 'Reorder Terms'>
                ## <d 'Change Associations'>
                  ## <d 'Associative Property'>
                    (+ (+ (* (2) (* (10) (* (10) (10)))) (* (10) (10))) (* (2) (* (10) (10)))) (* (6) (10)) (* (5) (10)) addass
                    (2) addeq1i
                  ## </d 'Associative Property'>
                  ## <d 'Associative Property'>
                    (* (2) (* (10) (* (10) (10)))) (* (10) (10)) (* (2) (* (10) (10))) addass
                    EqReplaceEq1Add0Add0
                  ## </d 'Associative Property'>
                  EqReplaceEq1
                ## </d 'Change Associations'>
              ## </d 'Rearrange Terms'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Multiply By One'>
                      ## <d 'Multiply By One'>
                        ## <d 'Evaluate'>
                          ## <d 'Evaluate'>
                            (* (10) (10)) mulidr
                          ## </d 'Evaluate'>
                          ## <d 'Commutative Property'>
                            (* (1) (* (10) (10))) (* (10) (10)) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Evaluate'>
                        (* (2) (* (10) (10))) addeq1i
                      ## </d 'Multiply By One'>
                      (* (2) (* (10) (* (10) (10)))) addeq2i
                    ## </d 'Multiply By One'>
                    (+ (* (6) (10)) (* (5) (10))) addeq1i
                  ## </d 'Multiply By One'>
                  (2) addeq1i
                ## </d 'Multiply By One'>
                EqReplaceEq1
              ## </d 'Multiply By One'>
              ## <d 'Distributive Property'>
                (1) (2) (* (10) (10)) distl
                ## <d 'Commutative Property'>
                  (* (+ (1) (2)) (* (10) (10))) (+ (* (1) (* (10) (10))) (* (2) (* (10) (10)))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0Add0Add1
              ## </d 'Distributive Property'>
              ## <d 'Distributive Property'>
                (6) (5) (10) distl
                ## <d 'Commutative Property'>
                  (* (+ (6) (5)) (10)) (+ (* (6) (10)) (* (5) (10))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0Add1
              ## </d 'Distributive Property'>
            ## </d 'Group Common Digits'>
            ## <d 'Single-digit Addition'>
              6plus5
              EqReplaceEq1Add0Add1Mul0
            ## </d 'Single-digit Addition'>
            ## <d 'Carry the One'>
              ## <d 'Distributive Property'>
                (10) (1) (10) distl
                (+ (* (2) (* (10) (* (10) (10)))) (* (+ (1) (2)) (* (10) (10)))) addeq2i
              ## </d 'Distributive Property'>
              ## <d 'Associative Property'>
                (+ (* (2) (* (10) (* (10) (10)))) (* (+ (1) (2)) (* (10) (10)))) (* (10) (10)) (* (1) (10)) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (2) (* (10) (* (10) (10)))) (* (+ (1) (2)) (* (10) (10)))) (* (10) (10))) (* (1) (10))) (+ (+ (* (2) (* (10) (* (10) (10)))) (* (+ (1) (2)) (* (10) (10)))) (+ (* (10) (10)) (* (1) (10)))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Associative Property'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (* (10) (10)) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (* (10) (10))) (* (10) (10)) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                EqReplaceEq1Add0Add1
              ## </d 'Multiply By One'>
              ## <d 'Associative Property'>
                (* (2) (* (10) (* (10) (10)))) (* (+ (1) (2)) (* (10) (10))) (* (1) (* (10) (10))) addass
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              ## <d 'Distributive Property'>
                (+ (1) (2)) (1) (* (10) (10)) distl
                ## <d 'Commutative Property'>
                  (* (+ (+ (1) (2)) (1)) (* (10) (10))) (+ (* (+ (1) (2)) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0Add1
              ## </d 'Distributive Property'>
              EqReplaceEq1Add0
            ## </d 'Carry the One'>
            ## <d 'Single-digit Addition'>
              ## <d 'Evaluate'>
                1plus2
                (1) addeq1i
              ## </d 'Evaluate'>
              ## <d 'Evaluate'>
                3plus1
                EqReplaceEq1
              ## </d 'Evaluate'>
              EqReplaceEq1Add0Add0Add1Mul0
            ## </d 'Single-digit Addition'>
            ## <d 'Simplify'>
              ## <d 'Associative Property'>
                (+ (* (2) (* (10) (* (10) (10)))) (* (4) (* (10) (10)))) (* (1) (10)) (2) addass
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (* (2) (* (10) (* (10) (10)))) (* (4) (* (10) (10))) (+ (* (1) (10)) (2)) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
              ## <d 'Simplify'>
                ## <d 'Simplify'>
                  ## <d 'Simplify'>
                    ## <d 'Multiplicative Identity'>
                      (10) mulidr
                    ## </d 'Multiplicative Identity'>
                    (2) addeq1i
                  ## </d 'Simplify'>
                  (* (4) (* (10) (10))) addeq2i
                ## </d 'Simplify'>
                EqReplaceEq1Add1
              ## </d 'Simplify'>
              EqReplaceEq1
            ## </d 'Simplify'>
          ## </d 'Addition'>
          EqReplaceEq1
        ## </d 'Sum the Total'>
      ## </d 'Multiplication'>
      EqReplaceEq1Div0
    ## </d 'Multiply Numerator'>
    ## <d 'Multiply Denominator'>
      5times3
      EqReplaceEq1Div1
    ## </d 'Multiply Denominator'>
    ## <d 'Reduce Fraction'>
      ## <d 'Separate Common Factor'>
        ## <d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'One-Digit times Multiple-Digits'>
              ## <d 'Rearrange Digits'>
                ## <d 'Distributive Property'>
                  (* (8) (* (10) (10))) (4) (3) distl
                ## </d 'Distributive Property'>
              ## </d 'Rearrange Digits'>
              ## <d 'Multiply Two Digits'>
                ## <d 'Evaluate'>
                  4times3
                ## </d 'Evaluate'>
                EqReplaceEq1Add1
              ## </d 'Multiply Two Digits'>
              ## <d 'Multiply Two Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Reorder Terms'>
                    ## <d 'Associative Property'>
                      (8) (* (10) (10)) (3) mulass
                    ## </d 'Associative Property'>
                    ## <d 'Commutative Property'>
                      (* (10) (10)) (3) mulcom
                      EqReplaceEq1Mul1
                    ## </d 'Commutative Property'>
                    ## <d 'Associative Property'>
                      (8) (3) (* (10) (10)) mulass
                      ## <d 'Commutative Property'>
                        (* (* (8) (3)) (* (10) (10))) (* (8) (* (3) (* (10) (10)))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                      EqReplaceEq1
                    ## </d 'Associative Property'>
                  ## </d 'Reorder Terms'>
                ## </d 'Rearrange Terms'>
                ## <d 'Evaluate'>
                  8times3
                  EqReplaceEq1Mul0
                ## </d 'Evaluate'>
                ## <d 'Evaluate'>
                  ## <d 'Distributive Property'>
                    (* (2) (10)) (4) (* (10) (10)) distl
                  ## </d 'Distributive Property'>
                  ## <d 'Evaluate'>
                    ## <d 'Associative Property'>
                      (2) (10) (* (10) (10)) mulass
                    ## </d 'Associative Property'>
                    EqReplaceEq1Add0
                  ## </d 'Evaluate'>
                  EqReplaceEq1
                ## </d 'Evaluate'>
                EqReplaceEq1Add0
              ## </d 'Multiply Two Digits'>
              ## <d 'Evaluate'>
                ## <d 'Addition'>
                  ## <d 'Group Common Digits'>
                    ## <d 'Rearrange Terms'>
                      ## <d 'Associate All Left'>
                        ## <d 'Associative Property'>
                          (+ (* (2) (* (10) (* (10) (10)))) (* (4) (* (10) (10)))) (10) (2) addass
                          ## <d 'Commutative Property'>
                            (+ (+ (+ (* (2) (* (10) (* (10) (10)))) (* (4) (* (10) (10)))) (10)) (2)) (+ (+ (* (2) (* (10) (* (10) (10)))) (* (4) (* (10) (10)))) (+ (10) (2))) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Associative Property'>
                      ## </d 'Associate All Left'>
                    ## </d 'Rearrange Terms'>
                    ## <d 'Multiply By One'>
                      ## <d 'Multiply By One'>
                        ## <d 'Multiply By One'>
                          ## <d 'Evaluate'>
                            ## <d 'Evaluate'>
                              (10) mulidr
                            ## </d 'Evaluate'>
                            ## <d 'Commutative Property'>
                              (* (1) (10)) (10) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                          ## </d 'Evaluate'>
                          (+ (* (2) (* (10) (* (10) (10)))) (* (4) (* (10) (10)))) addeq2i
                        ## </d 'Multiply By One'>
                        (2) addeq1i
                      ## </d 'Multiply By One'>
                      EqReplaceEq1
                    ## </d 'Multiply By One'>
                  ## </d 'Group Common Digits'>
                  ## <d 'Simplify'>
                    ## <d 'Associative Property'>
                      (+ (* (2) (* (10) (* (10) (10)))) (* (4) (* (10) (10)))) (* (1) (10)) (2) addass
                    ## </d 'Associative Property'>
                    ## <d 'Associative Property'>
                      (* (2) (* (10) (* (10) (10)))) (* (4) (* (10) (10))) (+ (* (1) (10)) (2)) addass
                      EqReplaceEq1
                    ## </d 'Associative Property'>
                    ## <d 'Simplify'>
                      ## <d 'Simplify'>
                        ## <d 'Simplify'>
                          ## <d 'Multiplicative Identity'>
                            (10) mulidr
                          ## </d 'Multiplicative Identity'>
                          (2) addeq1i
                        ## </d 'Simplify'>
                        (* (4) (* (10) (10))) addeq2i
                      ## </d 'Simplify'>
                      EqReplaceEq1Add1
                    ## </d 'Simplify'>
                    EqReplaceEq1
                  ## </d 'Simplify'>
                ## </d 'Addition'>
                EqReplaceEq1
              ## </d 'Evaluate'>
            ## </d 'One-Digit times Multiple-Digits'>
          ## </d 'Evaluate'>
          ## <d 'Commutative Property'>
            (* (+ (* (8) (* (10) (10))) (4)) (3)) (+ (* (2) (* (10) (* (10) (10)))) (+ (* (4) (* (10) (10))) (+ (10) (2)))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (+ (10) (5)) diveq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          ## <d 'Evaluate'>
            5times3
          ## </d 'Evaluate'>
          ## <d 'Commutative Property'>
            (* (5) (3)) (+ (10) (5)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Div1
        ## </d 'Evaluate'>
      ## </d 'Separate Common Factor'>
      ## <d 'Cancel Common Factor'>
        5notEqual0
        3notEqual0
        (+ (* (8) (* (10) (10))) (4)) fracFactorsi
        EqReplaceEq1
      ## </d 'Cancel Common Factor'>
      EqReplaceEq1
    ## </d 'Reduce Fraction'>
  ## </d 'Evaluate'>
)

## <summary> This is an example of adding two fractions. </summary>
thm (addFractions1 () () (= (+ (/ (1) (2)) (/ (1) (4))) (/ (3) (4))) 
  ## <d 'Evaluate'>
    ## <d 'Multiply to Reach Common Denominator'>
      ## <d 'Evaluate'>
        ## <d 'Separate Common Factor'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              (2) mulidr
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (1) (2)) (2) eqcom
              mpbi
            ## </d 'Commutative Property'>
            (4) diveq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              2times2
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (2) (2)) (4) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Div1
          ## </d 'Evaluate'>
        ## </d 'Separate Common Factor'>
        ## <d 'Cancel Common Factor'>
          2notEqual0
          2notEqual0
          (1) fracFactorsi
          EqReplaceEq1
        ## </d 'Cancel Common Factor'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (/ (2) (4)) (/ (1) (2)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (/ (1) (4)) addeq1i
    ## </d 'Multiply to Reach Common Denominator'>
    4notEqual0
    (2) (1) divdistri
    EqReplaceEq1
    ## <d 'Simplify Numerator'>
      2plus1
      EqReplaceEq1Div0
    ## </d 'Simplify Numerator'>
  ## </d 'Evaluate'>
)

## <summary> This is an example of adding two fractions. </summary>
thm (addFractions2 () () (= (+ (/ (5) (6)) (/ (7) (6))) (2))
  ## <d 'Evaluate'>
    6notEqual0
    (5) (7) divdistri
    ## <d 'Simplify Numerator'>
      5plus7
      EqReplaceEq1Div0
    ## </d 'Simplify Numerator'>
    ## <d 'Reduce Fraction'>
      ## <d 'Separate Common Factor'>
        ## <d 'Evaluate'>
          ## <d 'Evaluate'>
            2times6
          ## </d 'Evaluate'>
          ## <d 'Commutative Property'>
            (* (2) (6)) (+ (10) (2)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (6) diveq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          ## <d 'Evaluate'>
            (6) mulidr
          ## </d 'Evaluate'>
          ## <d 'Commutative Property'>
            (* (1) (6)) (6) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Div1
        ## </d 'Evaluate'>
      ## </d 'Separate Common Factor'>
      ## <d 'Cancel Common Factor'>
        1notEqual0
        6notEqual0
        (2) fracFactorsi
        EqReplaceEq1
      ## </d 'Cancel Common Factor'>
      ## <d 'Evaluate'>
        (2) divid
        EqReplaceEq1
      ## </d 'Evaluate'>
      EqReplaceEq1
    ## </d 'Reduce Fraction'>
  ## </d 'Evaluate'>
)



## <title> Substitution </title>
## <table>
##   (>  [ A ]   ]   ]  C)
##   (=  [ A ]   [ B ] )
##   (>  [   [   [ B ]  C)
## </table>
thm (EqReplaceGt0 () (
     replacee (> A C)
     substitution (= A B)) 
     (> B C)
  replacee substitution
  C gteq1i
  mpbi
)

## <title> Substitution </title>
## <table>
##   (> A  [ B ]   ]   ] )
##   (=    [ B ]   [ C ] )
##   (> A  [   [   [ C ] )
## </table>
thm (EqReplaceGt1 () (
     replacee (> A B)
     substitution (= B C)) 
     (> A C)
  replacee substitution
  A gteq2i
  mpbi
)



## <title> One-Digit Inequality </title>
thm (2greater1 () () (> (2) (1))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      1plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (1) addid
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> Substitution </title>
## <table>
##   (> A  [ B ]   ]   ] )
##   (>    [ B ]   [ C ] )
##   (> A  [   [   [ C ] )
## </table>
thm (GtReplaceGt1 () (
     replacee (> A B)
     substitution (> B C)) 
     (> A C)
  replacee substitution
  A gtTrgt
  ax-mp
)



## <title> One-Digit Inequality </title>
thm (2greater0 () () (> (2) (0))
  ## <d 'Separate into smaller inequalities'>
    2greater1
    1greater0
    GtReplaceGt1
  ## </d 'Separate into smaller inequalities'>
)

## <title> One-Digit Inequality </title>
thm (9greater8 () () (> (9) (8))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (8) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      8plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (8) addid
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (8greater7 () () (> (8) (7))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (7) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      7plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (7) addid
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (7greater6 () () (> (7) (6))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (6) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      6plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (6) addid
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (6greater5 () () (> (6) (5))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (5) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      5plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (5) addid
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (5greater4 () () (> (5) (4))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (4) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      4plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (4) addid
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (4greater3 () () (> (4) (3))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (3) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      3plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (3) addid
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (3greater2 () () (> (3) (2))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (2) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      2plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (2) addid
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)


## <title> One-Digit Inequality </title>
thm (3greater0 () () (> (3) (0))
  ## <d 'Separate into smaller inequalities'>
    3greater2
    2greater0
    GtReplaceGt1
  ## </d 'Separate into smaller inequalities'>
)



## <title> One-Digit Inequality </title>
thm (4greater0 () () (> (4) (0))
  ## <d 'Separate into smaller inequalities'>
    4greater3
    3greater0
    GtReplaceGt1
  ## </d 'Separate into smaller inequalities'>
)



## <title> One-Digit Inequality </title>
thm (5greater0 () () (> (5) (0))
  ## <d 'Separate into smaller inequalities'>
    5greater4
    4greater0
    GtReplaceGt1
  ## </d 'Separate into smaller inequalities'>
)



## <title> One-Digit Inequality </title>
thm (6greater0 () () (> (6) (0))
  ## <d 'Separate into smaller inequalities'>
    6greater5
    5greater0
    GtReplaceGt1
  ## </d 'Separate into smaller inequalities'>
)



## <title> One-Digit Inequality </title>
thm (7greater0 () () (> (7) (0))
  ## <d 'Separate into smaller inequalities'>
    7greater6
    6greater0
    GtReplaceGt1
  ## </d 'Separate into smaller inequalities'>
)



## <title> One-Digit Inequality </title>
thm (8greater0 () () (> (8) (0))
  ## <d 'Separate into smaller inequalities'>
    8greater7
    7greater0
    GtReplaceGt1
  ## </d 'Separate into smaller inequalities'>
)



## <title> One-Digit Inequality </title>
thm (9greater0 () () (> (9) (0))
  ## <d 'Separate into smaller inequalities'>
    9greater8
    8greater0
    GtReplaceGt1
  ## </d 'Separate into smaller inequalities'>
)


## <title> One-Digit Inequality </title>
thm (10greater1 () () (> (10) (1))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      9greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      1plus9
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (1) addid
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <summary> This is an example of adding two fractions. </summary>
thm (addFractions3 () () (= (+ (/ (5) (+ (10) (2))) (/ (1) (4))) (/ (2) (3))) 
  ## <d 'Evaluate'>
    ## <d 'Multiply to Reach Common Denominator'>
      ## <d 'Evaluate'>
        ## <d 'Separate Common Factor'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              (3) mulidr
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (1) (3)) (3) eqcom
              mpbi
            ## </d 'Commutative Property'>
            (+ (10) (2)) diveq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              4times3
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (4) (3)) (+ (10) (2)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Div1
          ## </d 'Evaluate'>
        ## </d 'Separate Common Factor'>
        ## <d 'Cancel Common Factor'>
          4notEqual0
          3notEqual0
          (1) fracFactorsi
          EqReplaceEq1
        ## </d 'Cancel Common Factor'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (/ (3) (+ (10) (2))) (/ (1) (4)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (/ (5) (+ (10) (2))) addeq2i
    ## </d 'Multiply to Reach Common Denominator'>
    ## <d 'Add To Both Sides'>
      ## <d 'Derive Smaller Inequality'>
        2greater0
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) gtadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Right Side'>
        (10) addid
        EqReplaceGt1
      ## </d 'Simplify Right Side'>
    ## </d 'Add To Both Sides'>
    ## <d 'Fewer Digits'>
      10greater1
      GtReplaceGt1
    ## </d 'Fewer Digits'>
    ## <d 'Lower Remaining Digits'>
      ## <d 'Add To Both Sides'>
        ## <d 'Derive Smaller Inequality'>
          1greater0
        ## </d 'Derive Smaller Inequality'>
        ## <d 'Add To Both Sides'>
          (0) gtadd2i
        ## </d 'Add To Both Sides'>
        ## <d 'Simplify Left Side'>
          (1) addidr
          EqReplaceGt0
        ## </d 'Simplify Left Side'>
        ## <d 'Simplify Right Side'>
          (0) addidr
          EqReplaceGt1
        ## </d 'Simplify Right Side'>
      ## </d 'Add To Both Sides'>
      GtReplaceGt1
    ## </d 'Lower Remaining Digits'>
    ## <d 'Convert to ≠'>
      (+ (10) (2)) (0) gtneq
      ax-mp
    ## </d 'Convert to ≠'>
    (5) (3) divdistri
    EqReplaceEq1
    ## <d 'Simplify Numerator'>
      5plus3
      EqReplaceEq1Div0
    ## </d 'Simplify Numerator'>
    ## <d 'Reduce Fraction'>
      ## <d 'Separate Common Factor'>
        ## <d 'Evaluate'>
          ## <d 'Evaluate'>
            2times4
          ## </d 'Evaluate'>
          ## <d 'Commutative Property'>
            (* (2) (4)) (8) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (+ (10) (2)) diveq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          ## <d 'Evaluate'>
            3times4
          ## </d 'Evaluate'>
          ## <d 'Commutative Property'>
            (* (3) (4)) (+ (10) (2)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Div1
        ## </d 'Evaluate'>
      ## </d 'Separate Common Factor'>
      ## <d 'Cancel Common Factor'>
        3notEqual0
        4notEqual0
        (2) fracFactorsi
        EqReplaceEq1
      ## </d 'Cancel Common Factor'>
      EqReplaceEq1
    ## </d 'Reduce Fraction'>
  ## </d 'Evaluate'>
)



## <title> One-Digit Inequality </title>
thm (4greater1 () () (> (4) (1))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      3greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      1plus3
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (1) addid
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (10greater9 () () (> (10) (9))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (9) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      9plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (9) addid
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)


## <title> One-Digit Inequality </title>
thm (10greater0 () () (> (10) (0))
  ## <d 'Separate into smaller inequalities'>
    10greater9
    9greater0
    GtReplaceGt1
  ## </d 'Separate into smaller inequalities'>
)

## <title> One-Digit Inequality </title>
thm (5greater1 () () (> (5) (1))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      4greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      1plus4
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (1) addid
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (7greater1 () () (> (7) (1))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      6greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      1plus6
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (1) addid
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <summary> This is an example of adding two fractions. </summary>
thm (addFractions4 () () (= (+ (/ (+ (10) (3)) (+ (10) (6))) (/ (5) (+ (* (4) (10)) (7)))) (/ (+ (* (6) (* (10) (10))) (+ (* (9) (10)) (1))) (+ (* (7) (* (10) (10))) (+ (* (5) (10)) (2)))))
  ## <d 'Evaluate'>
    ## <d 'Multiply to Reach Common Denominator'>
      ## <d 'Evaluate'>
        ## <d 'Separate Common Factor'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              ## <d 'Multiplication'>
                ## <d 'Distribute Digits'>
                  ## <d 'Distributive Property'>
                    (+ (10) (3)) (* (4) (10)) (7) distr
                  ## </d 'Distributive Property'>
                ## </d 'Distribute Digits'>
                ## <d 'Pull Out Base 10'>
                  ## <d 'Associative Property'>
                    (+ (10) (3)) (4) (10) mulass
                    ## <d 'Commutative Property'>
                      (* (* (+ (10) (3)) (4)) (10)) (* (+ (10) (3)) (* (4) (10))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    (* (+ (10) (3)) (7)) addeq1i
                  ## </d 'Associative Property'>
                  EqReplaceEq1
                ## </d 'Pull Out Base 10'>
                ## <d 'Multiply Each Digit'>
                  ## <d 'Multiply Two Individual Digits'>
                    ## <d 'Multiply Base'>
                      ## <d 'One-Digit times Multiple-Digits'>
                        ## <d 'Rearrange Digits'>
                          ## <d 'Distributive Property'>
                            (10) (3) (7) distl
                          ## </d 'Distributive Property'>
                        ## </d 'Rearrange Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Evaluate'>
                            3times7
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add1
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Evaluate'>
                            ## <d 'Commutative Property'>
                              (10) (7) mulcom
                            ## </d 'Commutative Property'>
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add0
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Evaluate'>
                          ## <d 'Addition'>
                            ## <d 'Group Common Digits'>
                              ## <d 'Rearrange Terms'>
                                ## <d 'Associate All Left'>
                                  ## <d 'Associative Property'>
                                    (* (7) (10)) (* (2) (10)) (1) addass
                                    ## <d 'Commutative Property'>
                                      (+ (+ (* (7) (10)) (* (2) (10))) (1)) (+ (* (7) (10)) (+ (* (2) (10)) (1))) eqcom
                                      mpbi
                                    ## </d 'Commutative Property'>
                                  ## </d 'Associative Property'>
                                ## </d 'Associate All Left'>
                              ## </d 'Rearrange Terms'>
                              ## <d 'Distributive Property'>
                                (7) (2) (10) distl
                                ## <d 'Commutative Property'>
                                  (* (+ (7) (2)) (10)) (+ (* (7) (10)) (* (2) (10))) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                                EqReplaceEq1Add0
                              ## </d 'Distributive Property'>
                            ## </d 'Group Common Digits'>
                            ## <d 'Single-digit Addition'>
                              7plus2
                              EqReplaceEq1Add0Mul0
                            ## </d 'Single-digit Addition'>
                          ## </d 'Addition'>
                          EqReplaceEq1
                        ## </d 'Evaluate'>
                      ## </d 'One-Digit times Multiple-Digits'>
                    ## </d 'Multiply Base'>
                    (* (* (+ (10) (3)) (4)) (10)) addeq2i
                  ## </d 'Multiply Two Individual Digits'>
                  ## <d 'Multiply Two Individual Digits'>
                    ## <d 'Multiply Significant Digits'>
                      ## <d 'One-Digit times Multiple-Digits'>
                        ## <d 'Rearrange Digits'>
                          ## <d 'Distributive Property'>
                            (10) (3) (4) distl
                          ## </d 'Distributive Property'>
                        ## </d 'Rearrange Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Evaluate'>
                            3times4
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add1
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Evaluate'>
                            ## <d 'Commutative Property'>
                              (10) (4) mulcom
                            ## </d 'Commutative Property'>
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add0
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Evaluate'>
                          ## <d 'Addition'>
                            ## <d 'Group Common Digits'>
                              ## <d 'Rearrange Terms'>
                                ## <d 'Associate All Left'>
                                  ## <d 'Associative Property'>
                                    (* (4) (10)) (10) (2) addass
                                    ## <d 'Commutative Property'>
                                      (+ (+ (* (4) (10)) (10)) (2)) (+ (* (4) (10)) (+ (10) (2))) eqcom
                                      mpbi
                                    ## </d 'Commutative Property'>
                                  ## </d 'Associative Property'>
                                ## </d 'Associate All Left'>
                              ## </d 'Rearrange Terms'>
                              ## <d 'Multiply By One'>
                                ## <d 'Multiply By One'>
                                  ## <d 'Multiply By One'>
                                    ## <d 'Evaluate'>
                                      ## <d 'Evaluate'>
                                        (10) mulidr
                                      ## </d 'Evaluate'>
                                      ## <d 'Commutative Property'>
                                        (* (1) (10)) (10) eqcom
                                        mpbi
                                      ## </d 'Commutative Property'>
                                    ## </d 'Evaluate'>
                                    (* (4) (10)) addeq2i
                                  ## </d 'Multiply By One'>
                                  (2) addeq1i
                                ## </d 'Multiply By One'>
                                EqReplaceEq1
                              ## </d 'Multiply By One'>
                              ## <d 'Distributive Property'>
                                (4) (1) (10) distl
                                ## <d 'Commutative Property'>
                                  (* (+ (4) (1)) (10)) (+ (* (4) (10)) (* (1) (10))) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                                EqReplaceEq1Add0
                              ## </d 'Distributive Property'>
                            ## </d 'Group Common Digits'>
                            ## <d 'Single-digit Addition'>
                              4plus1
                              EqReplaceEq1Add0Mul0
                            ## </d 'Single-digit Addition'>
                          ## </d 'Addition'>
                          EqReplaceEq1
                        ## </d 'Evaluate'>
                      ## </d 'One-Digit times Multiple-Digits'>
                      (10) muleq1i
                    ## </d 'Multiply Significant Digits'>
                    ## <d 'Multiply Base'>
                      ## <d 'Distributive Property'>
                        (* (5) (10)) (2) (10) distl
                      ## </d 'Distributive Property'>
                      ## <d 'Evaluate'>
                        ## <d 'Associative Property'>
                          (5) (10) (10) mulass
                        ## </d 'Associative Property'>
                        EqReplaceEq1Add0
                      ## </d 'Evaluate'>
                      EqReplaceEq1
                    ## </d 'Multiply Base'>
                    EqReplaceEq1Add0
                  ## </d 'Multiply Two Individual Digits'>
                  EqReplaceEq1
                ## </d 'Multiply Each Digit'>
                ## <d 'Sum the Total'>
                  ## <d 'Addition'>
                    ## <d 'Group Common Digits'>
                      ## <d 'Rearrange Terms'>
                        ## <d 'Associate All Left'>
                          ## <d 'Associative Property'>
                            (+ (* (5) (* (10) (10))) (* (2) (10))) (* (9) (10)) (1) addass
                            ## <d 'Commutative Property'>
                              (+ (+ (+ (* (5) (* (10) (10))) (* (2) (10))) (* (9) (10))) (1)) (+ (+ (* (5) (* (10) (10))) (* (2) (10))) (+ (* (9) (10)) (1))) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                          ## </d 'Associative Property'>
                        ## </d 'Associate All Left'>
                        ## <d 'Change Associations'>
                          ## <d 'Associative Property'>
                            (* (5) (* (10) (10))) (* (2) (10)) (* (9) (10)) addass
                            (1) addeq1i
                          ## </d 'Associative Property'>
                          EqReplaceEq1
                        ## </d 'Change Associations'>
                      ## </d 'Rearrange Terms'>
                      ## <d 'Distributive Property'>
                        (2) (9) (10) distl
                        ## <d 'Commutative Property'>
                          (* (+ (2) (9)) (10)) (+ (* (2) (10)) (* (9) (10))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0Add1
                      ## </d 'Distributive Property'>
                    ## </d 'Group Common Digits'>
                    ## <d 'Single-digit Addition'>
                      2plus9
                      EqReplaceEq1Add0Add1Mul0
                    ## </d 'Single-digit Addition'>
                    ## <d 'Carry the One'>
                      ## <d 'Distributive Property'>
                        (10) (1) (10) distl
                        (* (5) (* (10) (10))) addeq2i
                      ## </d 'Distributive Property'>
                      ## <d 'Associative Property'>
                        (* (5) (* (10) (10))) (* (10) (10)) (* (1) (10)) addass
                        ## <d 'Commutative Property'>
                          (+ (+ (* (5) (* (10) (10))) (* (10) (10))) (* (1) (10))) (+ (* (5) (* (10) (10))) (+ (* (10) (10)) (* (1) (10)))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1
                      ## </d 'Associative Property'>
                      ## <d 'Multiply By One'>
                        ## <d 'Evaluate'>
                          ## <d 'Evaluate'>
                            (* (10) (10)) mulidr
                          ## </d 'Evaluate'>
                          ## <d 'Commutative Property'>
                            (* (1) (* (10) (10))) (* (10) (10)) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Evaluate'>
                        EqReplaceEq1Add0Add1
                      ## </d 'Multiply By One'>
                      ## <d 'Distributive Property'>
                        (5) (1) (* (10) (10)) distl
                        ## <d 'Commutative Property'>
                          (* (+ (5) (1)) (* (10) (10))) (+ (* (5) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0
                      ## </d 'Distributive Property'>
                      EqReplaceEq1Add0
                    ## </d 'Carry the One'>
                    ## <d 'Single-digit Addition'>
                      5plus1
                      EqReplaceEq1Add0Add0Mul0
                    ## </d 'Single-digit Addition'>
                    ## <d 'Simplify'>
                      ## <d 'Associative Property'>
                        (* (6) (* (10) (10))) (* (1) (10)) (1) addass
                      ## </d 'Associative Property'>
                      ## <d 'Simplify'>
                        ## <d 'Simplify'>
                          ## <d 'Multiplicative Identity'>
                            (10) mulidr
                          ## </d 'Multiplicative Identity'>
                          (1) addeq1i
                        ## </d 'Simplify'>
                        EqReplaceEq1Add1
                      ## </d 'Simplify'>
                      EqReplaceEq1
                    ## </d 'Simplify'>
                  ## </d 'Addition'>
                  EqReplaceEq1
                ## </d 'Sum the Total'>
              ## </d 'Multiplication'>
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (+ (10) (3)) (+ (* (4) (10)) (7))) (+ (* (6) (* (10) (10))) (+ (10) (1))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            (+ (* (7) (* (10) (10))) (+ (* (5) (10)) (2))) diveq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              ## <d 'Multiplication'>
                ## <d 'Distribute Digits'>
                  ## <d 'Distributive Property'>
                    (+ (10) (6)) (* (4) (10)) (7) distr
                  ## </d 'Distributive Property'>
                ## </d 'Distribute Digits'>
                ## <d 'Pull Out Base 10'>
                  ## <d 'Associative Property'>
                    (+ (10) (6)) (4) (10) mulass
                    ## <d 'Commutative Property'>
                      (* (* (+ (10) (6)) (4)) (10)) (* (+ (10) (6)) (* (4) (10))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    (* (+ (10) (6)) (7)) addeq1i
                  ## </d 'Associative Property'>
                  EqReplaceEq1
                ## </d 'Pull Out Base 10'>
                ## <d 'Multiply Each Digit'>
                  ## <d 'Multiply Two Individual Digits'>
                    ## <d 'Multiply Base'>
                      ## <d 'One-Digit times Multiple-Digits'>
                        ## <d 'Rearrange Digits'>
                          ## <d 'Distributive Property'>
                            (10) (6) (7) distl
                          ## </d 'Distributive Property'>
                        ## </d 'Rearrange Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Evaluate'>
                            6times7
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add1
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Evaluate'>
                            ## <d 'Commutative Property'>
                              (10) (7) mulcom
                            ## </d 'Commutative Property'>
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add0
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Evaluate'>
                          ## <d 'Addition'>
                            ## <d 'Group Common Digits'>
                              ## <d 'Rearrange Terms'>
                                ## <d 'Associate All Left'>
                                  ## <d 'Associative Property'>
                                    (* (7) (10)) (* (4) (10)) (2) addass
                                    ## <d 'Commutative Property'>
                                      (+ (+ (* (7) (10)) (* (4) (10))) (2)) (+ (* (7) (10)) (+ (* (4) (10)) (2))) eqcom
                                      mpbi
                                    ## </d 'Commutative Property'>
                                  ## </d 'Associative Property'>
                                ## </d 'Associate All Left'>
                              ## </d 'Rearrange Terms'>
                              ## <d 'Distributive Property'>
                                (7) (4) (10) distl
                                ## <d 'Commutative Property'>
                                  (* (+ (7) (4)) (10)) (+ (* (7) (10)) (* (4) (10))) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                                EqReplaceEq1Add0
                              ## </d 'Distributive Property'>
                            ## </d 'Group Common Digits'>
                            ## <d 'Single-digit Addition'>
                              7plus4
                              EqReplaceEq1Add0Mul0
                            ## </d 'Single-digit Addition'>
                            ## <d 'Carry the One'>
                              ## <d 'Distributive Property'>
                                (10) (1) (10) distl
                                (2) addeq1i
                              ## </d 'Distributive Property'>
                              ## <d 'Multiply By One'>
                                ## <d 'Multiply By One'>
                                  ## <d 'Evaluate'>
                                    ## <d 'Evaluate'>
                                      (* (10) (10)) mulidr
                                    ## </d 'Evaluate'>
                                    ## <d 'Commutative Property'>
                                      (* (1) (* (10) (10))) (* (10) (10)) eqcom
                                      mpbi
                                    ## </d 'Commutative Property'>
                                  ## </d 'Evaluate'>
                                  (* (1) (10)) addeq1i
                                ## </d 'Multiply By One'>
                                EqReplaceEq1Add0
                              ## </d 'Multiply By One'>
                              ## <d 'Associative Property'>
                                (* (1) (* (10) (10))) (* (1) (10)) (2) addass
                                EqReplaceEq1
                              ## </d 'Associative Property'>
                              EqReplaceEq1
                            ## </d 'Carry the One'>
                            ## <d 'Simplify'>
                              ## <d 'Simplify'>
                                ## <d 'Multiplicative Identity'>
                                  (* (10) (10)) mulidr
                                ## </d 'Multiplicative Identity'>
                                (+ (* (1) (10)) (2)) addeq1i
                              ## </d 'Simplify'>
                              ## <d 'Simplify'>
                                ## <d 'Simplify'>
                                  ## <d 'Multiplicative Identity'>
                                    (10) mulidr
                                  ## </d 'Multiplicative Identity'>
                                  (2) addeq1i
                                ## </d 'Simplify'>
                                EqReplaceEq1Add1
                              ## </d 'Simplify'>
                              EqReplaceEq1
                            ## </d 'Simplify'>
                          ## </d 'Addition'>
                          EqReplaceEq1
                        ## </d 'Evaluate'>
                      ## </d 'One-Digit times Multiple-Digits'>
                    ## </d 'Multiply Base'>
                    (* (* (+ (10) (6)) (4)) (10)) addeq2i
                  ## </d 'Multiply Two Individual Digits'>
                  ## <d 'Multiply Two Individual Digits'>
                    ## <d 'Multiply Significant Digits'>
                      ## <d 'One-Digit times Multiple-Digits'>
                        ## <d 'Rearrange Digits'>
                          ## <d 'Distributive Property'>
                            (10) (6) (4) distl
                          ## </d 'Distributive Property'>
                        ## </d 'Rearrange Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Evaluate'>
                            6times4
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add1
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Evaluate'>
                            ## <d 'Commutative Property'>
                              (10) (4) mulcom
                            ## </d 'Commutative Property'>
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add0
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Evaluate'>
                          ## <d 'Addition'>
                            ## <d 'Group Common Digits'>
                              ## <d 'Rearrange Terms'>
                                ## <d 'Associate All Left'>
                                  ## <d 'Associative Property'>
                                    (* (4) (10)) (* (2) (10)) (4) addass
                                    ## <d 'Commutative Property'>
                                      (+ (+ (* (4) (10)) (* (2) (10))) (4)) (+ (* (4) (10)) (+ (* (2) (10)) (4))) eqcom
                                      mpbi
                                    ## </d 'Commutative Property'>
                                  ## </d 'Associative Property'>
                                ## </d 'Associate All Left'>
                              ## </d 'Rearrange Terms'>
                              ## <d 'Distributive Property'>
                                (4) (2) (10) distl
                                ## <d 'Commutative Property'>
                                  (* (+ (4) (2)) (10)) (+ (* (4) (10)) (* (2) (10))) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                                EqReplaceEq1Add0
                              ## </d 'Distributive Property'>
                            ## </d 'Group Common Digits'>
                            ## <d 'Single-digit Addition'>
                              4plus2
                              EqReplaceEq1Add0Mul0
                            ## </d 'Single-digit Addition'>
                          ## </d 'Addition'>
                          EqReplaceEq1
                        ## </d 'Evaluate'>
                      ## </d 'One-Digit times Multiple-Digits'>
                      (10) muleq1i
                    ## </d 'Multiply Significant Digits'>
                    ## <d 'Multiply Base'>
                      ## <d 'Distributive Property'>
                        (* (6) (10)) (4) (10) distl
                      ## </d 'Distributive Property'>
                      ## <d 'Evaluate'>
                        ## <d 'Associative Property'>
                          (6) (10) (10) mulass
                        ## </d 'Associative Property'>
                        EqReplaceEq1Add0
                      ## </d 'Evaluate'>
                      EqReplaceEq1
                    ## </d 'Multiply Base'>
                    EqReplaceEq1Add0
                  ## </d 'Multiply Two Individual Digits'>
                  EqReplaceEq1
                ## </d 'Multiply Each Digit'>
                ## <d 'Sum the Total'>
                  ## <d 'Addition'>
                    ## <d 'Group Common Digits'>
                      ## <d 'Rearrange Terms'>
                        ## <d 'Associate All Left'>
                          ## <d 'Associative Property'>
                            (+ (* (6) (* (10) (10))) (* (4) (10))) (* (10) (10)) (+ (10) (2)) addass
                            ## <d 'Commutative Property'>
                              (+ (+ (+ (* (6) (* (10) (10))) (* (4) (10))) (* (10) (10))) (+ (10) (2))) (+ (+ (* (6) (* (10) (10))) (* (4) (10))) (+ (* (10) (10)) (+ (10) (2)))) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                          ## </d 'Associative Property'>
                          ## <d 'Associative Property'>
                            (+ (+ (* (6) (* (10) (10))) (* (4) (10))) (* (10) (10))) (10) (2) addass
                            ## <d 'Commutative Property'>
                              (+ (+ (+ (+ (* (6) (* (10) (10))) (* (4) (10))) (* (10) (10))) (10)) (2)) (+ (+ (+ (* (6) (* (10) (10))) (* (4) (10))) (* (10) (10))) (+ (10) (2))) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                            EqReplaceEq1
                          ## </d 'Associative Property'>
                        ## </d 'Associate All Left'>
                        ## <d 'Reorder Terms'>
                          ## <d 'Associative Property'>
                            (* (6) (* (10) (10))) (* (4) (10)) (* (10) (10)) addass
                            (10) addeq1i
                            (2) addeq1i
                          ## </d 'Associative Property'>
                          ## <d 'Commutative Property'>
                            (* (4) (10)) (* (10) (10)) addcom
                            EqReplaceEq1Add0Add0Add1
                          ## </d 'Commutative Property'>
                          ## <d 'Associative Property'>
                            (* (6) (* (10) (10))) (* (10) (10)) (* (4) (10)) addass
                            ## <d 'Commutative Property'>
                              (+ (+ (* (6) (* (10) (10))) (* (10) (10))) (* (4) (10))) (+ (* (6) (* (10) (10))) (+ (* (10) (10)) (* (4) (10)))) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                            EqReplaceEq1Add0Add0
                          ## </d 'Associative Property'>
                          EqReplaceEq1
                        ## </d 'Reorder Terms'>
                        ## <d 'Change Associations'>
                          ## <d 'Associative Property'>
                            (+ (* (6) (* (10) (10))) (* (10) (10))) (* (4) (10)) (10) addass
                            (2) addeq1i
                          ## </d 'Associative Property'>
                          EqReplaceEq1
                        ## </d 'Change Associations'>
                      ## </d 'Rearrange Terms'>
                      ## <d 'Multiply By One'>
                        ## <d 'Multiply By One'>
                          ## <d 'Multiply By One'>
                            ## <d 'Multiply By One'>
                              ## <d 'Evaluate'>
                                ## <d 'Evaluate'>
                                  (* (10) (10)) mulidr
                                ## </d 'Evaluate'>
                                ## <d 'Commutative Property'>
                                  (* (1) (* (10) (10))) (* (10) (10)) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                              ## </d 'Evaluate'>
                              (* (6) (* (10) (10))) addeq2i
                            ## </d 'Multiply By One'>
                            (+ (* (4) (10)) (10)) addeq1i
                          ## </d 'Multiply By One'>
                          ## <d 'Multiply By One'>
                            ## <d 'Multiply By One'>
                              ## <d 'Evaluate'>
                                ## <d 'Evaluate'>
                                  (10) mulidr
                                ## </d 'Evaluate'>
                                ## <d 'Commutative Property'>
                                  (* (1) (10)) (10) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                              ## </d 'Evaluate'>
                              (* (4) (10)) addeq2i
                            ## </d 'Multiply By One'>
                            EqReplaceEq1Add1
                          ## </d 'Multiply By One'>
                          (2) addeq1i
                        ## </d 'Multiply By One'>
                        EqReplaceEq1
                      ## </d 'Multiply By One'>
                      ## <d 'Distributive Property'>
                        (6) (1) (* (10) (10)) distl
                        ## <d 'Commutative Property'>
                          (* (+ (6) (1)) (* (10) (10))) (+ (* (6) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0Add0
                      ## </d 'Distributive Property'>
                      ## <d 'Distributive Property'>
                        (4) (1) (10) distl
                        ## <d 'Commutative Property'>
                          (* (+ (4) (1)) (10)) (+ (* (4) (10)) (* (1) (10))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0Add1
                      ## </d 'Distributive Property'>
                    ## </d 'Group Common Digits'>
                    ## <d 'Single-digit Addition'>
                      4plus1
                      EqReplaceEq1Add0Add1Mul0
                    ## </d 'Single-digit Addition'>
                    ## <d 'Single-digit Addition'>
                      6plus1
                      EqReplaceEq1Add0Add0Mul0
                    ## </d 'Single-digit Addition'>
                    ## <d 'Simplify'>
                      ## <d 'Associative Property'>
                        (* (7) (* (10) (10))) (* (5) (10)) (2) addass
                      ## </d 'Associative Property'>
                      EqReplaceEq1
                    ## </d 'Simplify'>
                  ## </d 'Addition'>
                  EqReplaceEq1
                ## </d 'Sum the Total'>
              ## </d 'Multiplication'>
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (+ (10) (6)) (+ (* (4) (10)) (7))) (+ (* (7) (* (10) (10))) (+ (* (5) (10)) (2))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Div1
          ## </d 'Evaluate'>
        ## </d 'Separate Common Factor'>
        ## <d 'Cancel Common Factor'>
          ## <d 'Add To Both Sides'>
            ## <d 'Derive Smaller Inequality'>
              6greater0
            ## </d 'Derive Smaller Inequality'>
            ## <d 'Add To Both Sides'>
              (10) gtadd2i
            ## </d 'Add To Both Sides'>
            ## <d 'Simplify Right Side'>
              (10) addid
              EqReplaceGt1
            ## </d 'Simplify Right Side'>
          ## </d 'Add To Both Sides'>
          ## <d 'Fewer Digits'>
            10greater1
            GtReplaceGt1
          ## </d 'Fewer Digits'>
          ## <d 'Lower Remaining Digits'>
            ## <d 'Add To Both Sides'>
              ## <d 'Derive Smaller Inequality'>
                1greater0
              ## </d 'Derive Smaller Inequality'>
              ## <d 'Add To Both Sides'>
                (0) gtadd2i
              ## </d 'Add To Both Sides'>
              ## <d 'Simplify Left Side'>
                (1) addidr
                EqReplaceGt0
              ## </d 'Simplify Left Side'>
              ## <d 'Simplify Right Side'>
                (0) addidr
                EqReplaceGt1
              ## </d 'Simplify Right Side'>
            ## </d 'Add To Both Sides'>
            GtReplaceGt1
          ## </d 'Lower Remaining Digits'>
          ## <d 'Convert to ≠'>
            (+ (10) (6)) (0) gtneq
            ax-mp
          ## </d 'Convert to ≠'>
          ## <d 'Add To Both Sides'>
            ## <d 'Derive Smaller Inequality'>
              7greater0
            ## </d 'Derive Smaller Inequality'>
            ## <d 'Add To Both Sides'>
              (* (4) (10)) gtadd2i
            ## </d 'Add To Both Sides'>
            ## <d 'Simplify Right Side'>
              (* (4) (10)) addid
              EqReplaceGt1
            ## </d 'Simplify Right Side'>
          ## </d 'Add To Both Sides'>
          ## <d 'First Digit is Lower'>
            ## <d 'Highest Digit Inequality'>
              4greater1
            ## </d 'Highest Digit Inequality'>
            10greater0
            gtmul2i
            ## <d 'Evaluate'>
              (10) mulidr
              EqReplaceGt1
            ## </d 'Evaluate'>
            GtReplaceGt1
          ## </d 'First Digit is Lower'>
          ## <d 'Fewer Digits'>
            10greater1
            GtReplaceGt1
          ## </d 'Fewer Digits'>
          ## <d 'Lower Remaining Digits'>
            ## <d 'Add To Both Sides'>
              ## <d 'Derive Smaller Inequality'>
                1greater0
              ## </d 'Derive Smaller Inequality'>
              ## <d 'Add To Both Sides'>
                (0) gtadd2i
              ## </d 'Add To Both Sides'>
              ## <d 'Simplify Left Side'>
                (1) addidr
                EqReplaceGt0
              ## </d 'Simplify Left Side'>
              ## <d 'Simplify Right Side'>
                (0) addidr
                EqReplaceGt1
              ## </d 'Simplify Right Side'>
            ## </d 'Add To Both Sides'>
            GtReplaceGt1
          ## </d 'Lower Remaining Digits'>
          ## <d 'Convert to ≠'>
            (+ (* (4) (10)) (7)) (0) gtneq
            ax-mp
          ## </d 'Convert to ≠'>
          (+ (10) (3)) fracFactorsi
          EqReplaceEq1
        ## </d 'Cancel Common Factor'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (/ (+ (* (6) (* (10) (10))) (+ (10) (1))) (+ (* (7) (* (10) (10))) (+ (* (5) (10)) (2)))) (/ (+ (10) (3)) (+ (10) (6))) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (/ (5) (+ (* (4) (10)) (7))) addeq1i
    ## </d 'Multiply to Reach Common Denominator'>
    ## <d 'Multiply to Reach Common Denominator'>
      ## <d 'Evaluate'>
        ## <d 'Separate Common Factor'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              ## <d 'Multiplication'>
                ## <d 'Distribute Digits'>
                  ## <d 'Distributive Property'>
                    (5) (10) (6) distr
                  ## </d 'Distributive Property'>
                ## </d 'Distribute Digits'>
                ## <d 'Multiply Each Digit'>
                  ## <d 'Multiply Two Individual Digits'>
                    ## <d 'Multiply Base'>
                      5times6
                    ## </d 'Multiply Base'>
                    (* (5) (10)) addeq2i
                  ## </d 'Multiply Two Individual Digits'>
                  EqReplaceEq1
                ## </d 'Multiply Each Digit'>
                ## <d 'Sum the Total'>
                  ## <d 'Addition'>
                    ## <d 'Group Common Digits'>
                      ## <d 'Distributive Property'>
                        (5) (3) (10) distl
                        ## <d 'Commutative Property'>
                          (* (+ (5) (3)) (10)) (+ (* (5) (10)) (* (3) (10))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                      ## </d 'Distributive Property'>
                    ## </d 'Group Common Digits'>
                    ## <d 'Single-digit Addition'>
                      5plus3
                      EqReplaceEq1Mul0
                    ## </d 'Single-digit Addition'>
                  ## </d 'Addition'>
                  EqReplaceEq1
                ## </d 'Sum the Total'>
              ## </d 'Multiplication'>
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (5) (+ (10) (6))) (* (8) (10)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            (+ (* (7) (* (10) (10))) (+ (* (5) (10)) (2))) diveq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              ## <d 'Multiplication'>
                ## <d 'Distribute Digits'>
                  ## <d 'Distributive Property'>
                    (+ (* (4) (10)) (7)) (10) (6) distr
                  ## </d 'Distributive Property'>
                ## </d 'Distribute Digits'>
                ## <d 'Multiply Each Digit'>
                  ## <d 'Multiply Two Individual Digits'>
                    ## <d 'Multiply Base'>
                      ## <d 'One-Digit times Multiple-Digits'>
                        ## <d 'Rearrange Digits'>
                          ## <d 'Distributive Property'>
                            (* (4) (10)) (7) (6) distl
                          ## </d 'Distributive Property'>
                        ## </d 'Rearrange Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Evaluate'>
                            7times6
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add1
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Rearrange Terms'>
                            ## <d 'Reorder Terms'>
                              ## <d 'Associative Property'>
                                (4) (10) (6) mulass
                              ## </d 'Associative Property'>
                              ## <d 'Commutative Property'>
                                (10) (6) mulcom
                                EqReplaceEq1Mul1
                              ## </d 'Commutative Property'>
                              ## <d 'Associative Property'>
                                (4) (6) (10) mulass
                                ## <d 'Commutative Property'>
                                  (* (* (4) (6)) (10)) (* (4) (* (6) (10))) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                                EqReplaceEq1
                              ## </d 'Associative Property'>
                            ## </d 'Reorder Terms'>
                          ## </d 'Rearrange Terms'>
                          ## <d 'Evaluate'>
                            4times6
                            EqReplaceEq1Mul0
                          ## </d 'Evaluate'>
                          ## <d 'Evaluate'>
                            ## <d 'Distributive Property'>
                              (* (2) (10)) (4) (10) distl
                            ## </d 'Distributive Property'>
                            ## <d 'Evaluate'>
                              ## <d 'Associative Property'>
                                (2) (10) (10) mulass
                              ## </d 'Associative Property'>
                              EqReplaceEq1Add0
                            ## </d 'Evaluate'>
                            EqReplaceEq1
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add0
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Evaluate'>
                          ## <d 'Addition'>
                            ## <d 'Group Common Digits'>
                              ## <d 'Rearrange Terms'>
                                ## <d 'Associate All Left'>
                                  ## <d 'Associative Property'>
                                    (+ (* (2) (* (10) (10))) (* (4) (10))) (* (4) (10)) (2) addass
                                    ## <d 'Commutative Property'>
                                      (+ (+ (+ (* (2) (* (10) (10))) (* (4) (10))) (* (4) (10))) (2)) (+ (+ (* (2) (* (10) (10))) (* (4) (10))) (+ (* (4) (10)) (2))) eqcom
                                      mpbi
                                    ## </d 'Commutative Property'>
                                  ## </d 'Associative Property'>
                                ## </d 'Associate All Left'>
                                ## <d 'Change Associations'>
                                  ## <d 'Associative Property'>
                                    (* (2) (* (10) (10))) (* (4) (10)) (* (4) (10)) addass
                                    (2) addeq1i
                                  ## </d 'Associative Property'>
                                  EqReplaceEq1
                                ## </d 'Change Associations'>
                              ## </d 'Rearrange Terms'>
                              ## <d 'Distributive Property'>
                                (4) (4) (10) distl
                                ## <d 'Commutative Property'>
                                  (* (+ (4) (4)) (10)) (+ (* (4) (10)) (* (4) (10))) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                                EqReplaceEq1Add0Add1
                              ## </d 'Distributive Property'>
                            ## </d 'Group Common Digits'>
                            ## <d 'Single-digit Addition'>
                              4plus4
                              EqReplaceEq1Add0Add1Mul0
                            ## </d 'Single-digit Addition'>
                            ## <d 'Simplify'>
                              ## <d 'Associative Property'>
                                (* (2) (* (10) (10))) (* (8) (10)) (2) addass
                              ## </d 'Associative Property'>
                              EqReplaceEq1
                            ## </d 'Simplify'>
                          ## </d 'Addition'>
                          EqReplaceEq1
                        ## </d 'Evaluate'>
                      ## </d 'One-Digit times Multiple-Digits'>
                    ## </d 'Multiply Base'>
                    (* (+ (* (4) (10)) (7)) (10)) addeq2i
                  ## </d 'Multiply Two Individual Digits'>
                  ## <d 'Multiply Two Individual Digits'>
                    ## <d 'Multiply Base'>
                      ## <d 'Distributive Property'>
                        (* (4) (10)) (7) (10) distl
                      ## </d 'Distributive Property'>
                      ## <d 'Evaluate'>
                        ## <d 'Associative Property'>
                          (4) (10) (10) mulass
                        ## </d 'Associative Property'>
                        EqReplaceEq1Add0
                      ## </d 'Evaluate'>
                    ## </d 'Multiply Base'>
                    EqReplaceEq1Add0
                  ## </d 'Multiply Two Individual Digits'>
                  EqReplaceEq1
                ## </d 'Multiply Each Digit'>
                ## <d 'Sum the Total'>
                  ## <d 'Addition'>
                    ## <d 'Group Common Digits'>
                      ## <d 'Rearrange Terms'>
                        ## <d 'Associate All Left'>
                          ## <d 'Associative Property'>
                            (+ (* (4) (* (10) (10))) (* (7) (10))) (* (2) (* (10) (10))) (+ (* (8) (10)) (2)) addass
                            ## <d 'Commutative Property'>
                              (+ (+ (+ (* (4) (* (10) (10))) (* (7) (10))) (* (2) (* (10) (10)))) (+ (* (8) (10)) (2))) (+ (+ (* (4) (* (10) (10))) (* (7) (10))) (+ (* (2) (* (10) (10))) (+ (* (8) (10)) (2)))) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                          ## </d 'Associative Property'>
                          ## <d 'Associative Property'>
                            (+ (+ (* (4) (* (10) (10))) (* (7) (10))) (* (2) (* (10) (10)))) (* (8) (10)) (2) addass
                            ## <d 'Commutative Property'>
                              (+ (+ (+ (+ (* (4) (* (10) (10))) (* (7) (10))) (* (2) (* (10) (10)))) (* (8) (10))) (2)) (+ (+ (+ (* (4) (* (10) (10))) (* (7) (10))) (* (2) (* (10) (10)))) (+ (* (8) (10)) (2))) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                            EqReplaceEq1
                          ## </d 'Associative Property'>
                        ## </d 'Associate All Left'>
                        ## <d 'Reorder Terms'>
                          ## <d 'Associative Property'>
                            (* (4) (* (10) (10))) (* (7) (10)) (* (2) (* (10) (10))) addass
                            (* (8) (10)) addeq1i
                            (2) addeq1i
                          ## </d 'Associative Property'>
                          ## <d 'Commutative Property'>
                            (* (7) (10)) (* (2) (* (10) (10))) addcom
                            EqReplaceEq1Add0Add0Add1
                          ## </d 'Commutative Property'>
                          ## <d 'Associative Property'>
                            (* (4) (* (10) (10))) (* (2) (* (10) (10))) (* (7) (10)) addass
                            ## <d 'Commutative Property'>
                              (+ (+ (* (4) (* (10) (10))) (* (2) (* (10) (10)))) (* (7) (10))) (+ (* (4) (* (10) (10))) (+ (* (2) (* (10) (10))) (* (7) (10)))) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                            EqReplaceEq1Add0Add0
                          ## </d 'Associative Property'>
                          EqReplaceEq1
                        ## </d 'Reorder Terms'>
                        ## <d 'Change Associations'>
                          ## <d 'Associative Property'>
                            (+ (* (4) (* (10) (10))) (* (2) (* (10) (10)))) (* (7) (10)) (* (8) (10)) addass
                            (2) addeq1i
                          ## </d 'Associative Property'>
                          EqReplaceEq1
                        ## </d 'Change Associations'>
                      ## </d 'Rearrange Terms'>
                      ## <d 'Distributive Property'>
                        (4) (2) (* (10) (10)) distl
                        ## <d 'Commutative Property'>
                          (* (+ (4) (2)) (* (10) (10))) (+ (* (4) (* (10) (10))) (* (2) (* (10) (10)))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0Add0
                      ## </d 'Distributive Property'>
                      ## <d 'Distributive Property'>
                        (7) (8) (10) distl
                        ## <d 'Commutative Property'>
                          (* (+ (7) (8)) (10)) (+ (* (7) (10)) (* (8) (10))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0Add1
                      ## </d 'Distributive Property'>
                    ## </d 'Group Common Digits'>
                    ## <d 'Single-digit Addition'>
                      7plus8
                      EqReplaceEq1Add0Add1Mul0
                    ## </d 'Single-digit Addition'>
                    ## <d 'Carry the One'>
                      ## <d 'Distributive Property'>
                        (10) (5) (10) distl
                        (* (+ (4) (2)) (* (10) (10))) addeq2i
                      ## </d 'Distributive Property'>
                      ## <d 'Associative Property'>
                        (* (+ (4) (2)) (* (10) (10))) (* (10) (10)) (* (5) (10)) addass
                        ## <d 'Commutative Property'>
                          (+ (+ (* (+ (4) (2)) (* (10) (10))) (* (10) (10))) (* (5) (10))) (+ (* (+ (4) (2)) (* (10) (10))) (+ (* (10) (10)) (* (5) (10)))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1
                      ## </d 'Associative Property'>
                      ## <d 'Multiply By One'>
                        ## <d 'Evaluate'>
                          ## <d 'Evaluate'>
                            (* (10) (10)) mulidr
                          ## </d 'Evaluate'>
                          ## <d 'Commutative Property'>
                            (* (1) (* (10) (10))) (* (10) (10)) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Evaluate'>
                        EqReplaceEq1Add0Add1
                      ## </d 'Multiply By One'>
                      ## <d 'Distributive Property'>
                        (+ (4) (2)) (1) (* (10) (10)) distl
                        ## <d 'Commutative Property'>
                          (* (+ (+ (4) (2)) (1)) (* (10) (10))) (+ (* (+ (4) (2)) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0
                      ## </d 'Distributive Property'>
                      EqReplaceEq1Add0
                    ## </d 'Carry the One'>
                    ## <d 'Single-digit Addition'>
                      ## <d 'Evaluate'>
                        4plus2
                        (1) addeq1i
                      ## </d 'Evaluate'>
                      ## <d 'Evaluate'>
                        6plus1
                        EqReplaceEq1
                      ## </d 'Evaluate'>
                      EqReplaceEq1Add0Add0Mul0
                    ## </d 'Single-digit Addition'>
                    ## <d 'Simplify'>
                      ## <d 'Associative Property'>
                        (* (7) (* (10) (10))) (* (5) (10)) (2) addass
                      ## </d 'Associative Property'>
                      EqReplaceEq1
                    ## </d 'Simplify'>
                  ## </d 'Addition'>
                  EqReplaceEq1
                ## </d 'Sum the Total'>
              ## </d 'Multiplication'>
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (+ (* (4) (10)) (7)) (+ (10) (6))) (+ (* (7) (* (10) (10))) (+ (* (5) (10)) (2))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Div1
          ## </d 'Evaluate'>
        ## </d 'Separate Common Factor'>
        ## <d 'Cancel Common Factor'>
          ## <d 'Add To Both Sides'>
            ## <d 'Derive Smaller Inequality'>
              7greater0
            ## </d 'Derive Smaller Inequality'>
            ## <d 'Add To Both Sides'>
              (* (4) (10)) gtadd2i
            ## </d 'Add To Both Sides'>
            ## <d 'Simplify Right Side'>
              (* (4) (10)) addid
              EqReplaceGt1
            ## </d 'Simplify Right Side'>
          ## </d 'Add To Both Sides'>
          ## <d 'First Digit is Lower'>
            ## <d 'Highest Digit Inequality'>
              4greater1
            ## </d 'Highest Digit Inequality'>
            10greater0
            gtmul2i
            ## <d 'Evaluate'>
              (10) mulidr
              EqReplaceGt1
            ## </d 'Evaluate'>
            GtReplaceGt1
          ## </d 'First Digit is Lower'>
          ## <d 'Fewer Digits'>
            10greater1
            GtReplaceGt1
          ## </d 'Fewer Digits'>
          ## <d 'Lower Remaining Digits'>
            ## <d 'Add To Both Sides'>
              ## <d 'Derive Smaller Inequality'>
                1greater0
              ## </d 'Derive Smaller Inequality'>
              ## <d 'Add To Both Sides'>
                (0) gtadd2i
              ## </d 'Add To Both Sides'>
              ## <d 'Simplify Left Side'>
                (1) addidr
                EqReplaceGt0
              ## </d 'Simplify Left Side'>
              ## <d 'Simplify Right Side'>
                (0) addidr
                EqReplaceGt1
              ## </d 'Simplify Right Side'>
            ## </d 'Add To Both Sides'>
            GtReplaceGt1
          ## </d 'Lower Remaining Digits'>
          ## <d 'Convert to ≠'>
            (+ (* (4) (10)) (7)) (0) gtneq
            ax-mp
          ## </d 'Convert to ≠'>
          ## <d 'Add To Both Sides'>
            ## <d 'Derive Smaller Inequality'>
              6greater0
            ## </d 'Derive Smaller Inequality'>
            ## <d 'Add To Both Sides'>
              (10) gtadd2i
            ## </d 'Add To Both Sides'>
            ## <d 'Simplify Right Side'>
              (10) addid
              EqReplaceGt1
            ## </d 'Simplify Right Side'>
          ## </d 'Add To Both Sides'>
          ## <d 'Fewer Digits'>
            10greater1
            GtReplaceGt1
          ## </d 'Fewer Digits'>
          ## <d 'Lower Remaining Digits'>
            ## <d 'Add To Both Sides'>
              ## <d 'Derive Smaller Inequality'>
                1greater0
              ## </d 'Derive Smaller Inequality'>
              ## <d 'Add To Both Sides'>
                (0) gtadd2i
              ## </d 'Add To Both Sides'>
              ## <d 'Simplify Left Side'>
                (1) addidr
                EqReplaceGt0
              ## </d 'Simplify Left Side'>
              ## <d 'Simplify Right Side'>
                (0) addidr
                EqReplaceGt1
              ## </d 'Simplify Right Side'>
            ## </d 'Add To Both Sides'>
            GtReplaceGt1
          ## </d 'Lower Remaining Digits'>
          ## <d 'Convert to ≠'>
            (+ (10) (6)) (0) gtneq
            ax-mp
          ## </d 'Convert to ≠'>
          (5) fracFactorsi
          EqReplaceEq1
        ## </d 'Cancel Common Factor'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (/ (* (8) (10)) (+ (* (7) (* (10) (10))) (+ (* (5) (10)) (2)))) (/ (5) (+ (* (4) (10)) (7))) eqcom
        mpbi
      ## </d 'Commutative Property'>
      EqReplaceEq1Add1
    ## </d 'Multiply to Reach Common Denominator'>
    ## <d 'Add To Both Sides'>
      ## <d 'Derive Smaller Inequality'>
        ## <d 'Add To Both Sides'>
          ## <d 'Derive Smaller Inequality'>
            2greater0
          ## </d 'Derive Smaller Inequality'>
          ## <d 'Add To Both Sides'>
            (* (5) (10)) gtadd2i
          ## </d 'Add To Both Sides'>
          ## <d 'Simplify Right Side'>
            (* (5) (10)) addid
            EqReplaceGt1
          ## </d 'Simplify Right Side'>
        ## </d 'Add To Both Sides'>
        ## <d 'First Digit is Lower'>
          ## <d 'Highest Digit Inequality'>
            5greater1
          ## </d 'Highest Digit Inequality'>
          10greater0
          gtmul2i
          ## <d 'Evaluate'>
            (10) mulidr
            EqReplaceGt1
          ## </d 'Evaluate'>
          GtReplaceGt1
        ## </d 'First Digit is Lower'>
        ## <d 'Fewer Digits'>
          10greater1
          GtReplaceGt1
        ## </d 'Fewer Digits'>
        ## <d 'Lower Remaining Digits'>
          ## <d 'Add To Both Sides'>
            ## <d 'Derive Smaller Inequality'>
              1greater0
            ## </d 'Derive Smaller Inequality'>
            ## <d 'Add To Both Sides'>
              (0) gtadd2i
            ## </d 'Add To Both Sides'>
            ## <d 'Simplify Left Side'>
              (1) addidr
              EqReplaceGt0
            ## </d 'Simplify Left Side'>
            ## <d 'Simplify Right Side'>
              (0) addidr
              EqReplaceGt1
            ## </d 'Simplify Right Side'>
          ## </d 'Add To Both Sides'>
          GtReplaceGt1
        ## </d 'Lower Remaining Digits'>
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (7) (* (10) (10))) gtadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Right Side'>
        (* (7) (* (10) (10))) addid
        EqReplaceGt1
      ## </d 'Simplify Right Side'>
    ## </d 'Add To Both Sides'>
    ## <d 'First Digit is Lower'>
      ## <d 'Highest Digit Inequality'>
        7greater1
      ## </d 'Highest Digit Inequality'>
      ## <d 'Highest Digit Inequality'>
        10greater1
      ## </d 'Highest Digit Inequality'>
      10greater0
      gtmul2i
      ## <d 'Evaluate'>
        (10) mulidr
        EqReplaceGt1
      ## </d 'Evaluate'>
      ## <d 'Fewer Digits'>
        10greater1
        GtReplaceGt1
      ## </d 'Fewer Digits'>
      ## <d 'Lower Remaining Digits'>
        ## <d 'Add To Both Sides'>
          ## <d 'Derive Smaller Inequality'>
            1greater0
          ## </d 'Derive Smaller Inequality'>
          ## <d 'Add To Both Sides'>
            (0) gtadd2i
          ## </d 'Add To Both Sides'>
          ## <d 'Simplify Left Side'>
            (1) addidr
            EqReplaceGt0
          ## </d 'Simplify Left Side'>
          ## <d 'Simplify Right Side'>
            (0) addidr
            EqReplaceGt1
          ## </d 'Simplify Right Side'>
        ## </d 'Add To Both Sides'>
        GtReplaceGt1
      ## </d 'Lower Remaining Digits'>
      gtmul2i
      ## <d 'Evaluate'>
        (* (10) (10)) mulidr
        EqReplaceGt1
      ## </d 'Evaluate'>
      GtReplaceGt1
    ## </d 'First Digit is Lower'>
    ## <d 'Fewer Digits'>
      ## <d 'Highest Digit Inequality'>
        10greater1
      ## </d 'Highest Digit Inequality'>
      10greater0
      gtmul2i
      ## <d 'Evaluate'>
        (10) mulidr
        EqReplaceGt1
      ## </d 'Evaluate'>
      GtReplaceGt1
    ## </d 'Fewer Digits'>
    ## <d 'Fewer Digits'>
      10greater1
      GtReplaceGt1
    ## </d 'Fewer Digits'>
    ## <d 'Lower Remaining Digits'>
      ## <d 'Add To Both Sides'>
        ## <d 'Derive Smaller Inequality'>
          1greater0
        ## </d 'Derive Smaller Inequality'>
        ## <d 'Add To Both Sides'>
          (0) gtadd2i
        ## </d 'Add To Both Sides'>
        ## <d 'Simplify Left Side'>
          (1) addidr
          EqReplaceGt0
        ## </d 'Simplify Left Side'>
        ## <d 'Simplify Right Side'>
          (0) addidr
          EqReplaceGt1
        ## </d 'Simplify Right Side'>
      ## </d 'Add To Both Sides'>
      GtReplaceGt1
    ## </d 'Lower Remaining Digits'>
    ## <d 'Convert to ≠'>
      (+ (* (7) (* (10) (10))) (+ (* (5) (10)) (2))) (0) gtneq
      ax-mp
    ## </d 'Convert to ≠'>
    (+ (* (6) (* (10) (10))) (+ (10) (1))) (* (8) (10)) divdistri
    EqReplaceEq1
    ## <d 'Simplify Numerator'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (* (6) (* (10) (10))) (10) (1) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (6) (* (10) (10))) (10)) (1)) (+ (* (6) (* (10) (10))) (+ (10) (1))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                (* (8) (10)) addeq1i
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (+ (* (6) (* (10) (10))) (10)) (1) (* (8) (10)) addass
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (1) (* (8) (10)) addcom
                EqReplaceEq1Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (+ (* (6) (* (10) (10))) (10)) (* (8) (10)) (1) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (6) (* (10) (10))) (10)) (* (8) (10))) (1)) (+ (+ (* (6) (* (10) (10))) (10)) (+ (* (8) (10)) (1))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (6) (* (10) (10))) (10) (* (8) (10)) addass
                (1) addeq1i
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Evaluate'>
                    ## <d 'Evaluate'>
                      (10) mulidr
                    ## </d 'Evaluate'>
                    ## <d 'Commutative Property'>
                      (* (1) (10)) (10) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Evaluate'>
                  (* (8) (10)) addeq1i
                ## </d 'Multiply By One'>
                (* (6) (* (10) (10))) addeq2i
              ## </d 'Multiply By One'>
              (1) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (8) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (8)) (10)) (+ (* (1) (10)) (* (8) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0Add1
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          1plus8
          EqReplaceEq1Add0Add1Mul0
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Associative Property'>
            (* (6) (* (10) (10))) (* (9) (10)) (1) addass
          ## </d 'Associative Property'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
      EqReplaceEq1Div0
    ## </d 'Simplify Numerator'>
  ## </d 'Evaluate'>
)

## <summary> This is an example of subtracting a fraction. </summary>
thm (subtractFractions1 () () (= (- (2) (/ (1) (3))) (/ (5) (3)))
  ## <d 'Evaluate'>
    ## <d 'Multiply to Reach Common Denominator'>
      ## <d 'Evaluate'>
        ## <d 'Separate Common Factor'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              2times3
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (2) (3)) (6) eqcom
              mpbi
            ## </d 'Commutative Property'>
            (3) diveq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              (3) mulidr
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (1) (3)) (3) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Div1
          ## </d 'Evaluate'>
        ## </d 'Separate Common Factor'>
        ## <d 'Cancel Common Factor'>
          1notEqual0
          3notEqual0
          (2) fracFactorsi
          EqReplaceEq1
        ## </d 'Cancel Common Factor'>
        ## <d 'Evaluate'>
          (2) divid
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (/ (6) (3)) (2) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (/ (1) (3)) minuseq1i
    ## </d 'Multiply to Reach Common Denominator'>
    3notEqual0
    (6) (1) divminusdistri
    EqReplaceEq1
    ## <d 'Simplify Numerator'>
      ## <d 'Evaluate'>
        5plus1
      ## </d 'Evaluate'>
      minusValue3i
      EqReplaceEq1Div0
    ## </d 'Simplify Numerator'>
  ## </d 'Evaluate'>
)



## <title> Substitution </title>
## <table>
##   (= A (- B  [ C ]   ]   ] ))
##   (=         [ C ]   [ D ] )
##   (= A (- B  [   [   [ D ] ))
## </table>
thm (EqReplaceEq1Minus1 () (
     replacee (= A (- B C))
     substitution (= C D)) 
     (= A (- B D))
  replacee substitution
  B minuseq2i
  EqReplaceEq1
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ (+ (+ B  [ C ]   ]   ] ) A') B') C'))
##   (=                  [ C ]   [ D ] )
##   (= A (+ (+ (+ (+ B  [   [   [ D ] ) A') B') C'))
## </table>
thm (EqReplaceEq1Add0Add0Add0Add1 () (
     replacee (= A (+ (+ (+ (+ B C) A') B') C'))
     substitution (= C D)) 
     (= A (+ (+ (+ (+ B D) A') B') C'))
  replacee substitution
  B addeq2i
  EqReplaceEq1Add0Add0Add0
)

## <summary> This is used just for convenience to get an empty theorem. </summary>
thm (subtractFractions2 () () (= (- (/ (+ (10) (7)) (+ (* (2) (10)) (3))) (/ (7) (+ (10) (8)))) (/ (+ (* (10) (10)) (+ (* (4) (10)) (5))) (+ (* (4) (* (10) (10))) (+ (10) (4)))))
  ## <d 'Evaluate'>
    ## <d 'Multiply to Reach Common Denominator'>
      ## <d 'Evaluate'>
        ## <d 'Separate Common Factor'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              ## <d 'Multiplication'>
                ## <d 'Distribute Digits'>
                  ## <d 'Distributive Property'>
                    (+ (10) (7)) (10) (8) distr
                  ## </d 'Distributive Property'>
                ## </d 'Distribute Digits'>
                ## <d 'Multiply Each Digit'>
                  ## <d 'Multiply Two Individual Digits'>
                    ## <d 'Multiply Base'>
                      ## <d 'One-Digit times Multiple-Digits'>
                        ## <d 'Rearrange Digits'>
                          ## <d 'Distributive Property'>
                            (10) (7) (8) distl
                          ## </d 'Distributive Property'>
                        ## </d 'Rearrange Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Evaluate'>
                            7times8
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add1
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Evaluate'>
                            ## <d 'Commutative Property'>
                              (10) (8) mulcom
                            ## </d 'Commutative Property'>
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add0
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Evaluate'>
                          ## <d 'Addition'>
                            ## <d 'Group Common Digits'>
                              ## <d 'Rearrange Terms'>
                                ## <d 'Associate All Left'>
                                  ## <d 'Associative Property'>
                                    (* (8) (10)) (* (5) (10)) (6) addass
                                    ## <d 'Commutative Property'>
                                      (+ (+ (* (8) (10)) (* (5) (10))) (6)) (+ (* (8) (10)) (+ (* (5) (10)) (6))) eqcom
                                      mpbi
                                    ## </d 'Commutative Property'>
                                  ## </d 'Associative Property'>
                                ## </d 'Associate All Left'>
                              ## </d 'Rearrange Terms'>
                              ## <d 'Distributive Property'>
                                (8) (5) (10) distl
                                ## <d 'Commutative Property'>
                                  (* (+ (8) (5)) (10)) (+ (* (8) (10)) (* (5) (10))) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                                EqReplaceEq1Add0
                              ## </d 'Distributive Property'>
                            ## </d 'Group Common Digits'>
                            ## <d 'Single-digit Addition'>
                              8plus5
                              EqReplaceEq1Add0Mul0
                            ## </d 'Single-digit Addition'>
                            ## <d 'Carry the One'>
                              ## <d 'Distributive Property'>
                                (10) (3) (10) distl
                                (6) addeq1i
                              ## </d 'Distributive Property'>
                              ## <d 'Multiply By One'>
                                ## <d 'Multiply By One'>
                                  ## <d 'Evaluate'>
                                    ## <d 'Evaluate'>
                                      (* (10) (10)) mulidr
                                    ## </d 'Evaluate'>
                                    ## <d 'Commutative Property'>
                                      (* (1) (* (10) (10))) (* (10) (10)) eqcom
                                      mpbi
                                    ## </d 'Commutative Property'>
                                  ## </d 'Evaluate'>
                                  (* (3) (10)) addeq1i
                                ## </d 'Multiply By One'>
                                EqReplaceEq1Add0
                              ## </d 'Multiply By One'>
                              ## <d 'Associative Property'>
                                (* (1) (* (10) (10))) (* (3) (10)) (6) addass
                                EqReplaceEq1
                              ## </d 'Associative Property'>
                              EqReplaceEq1
                            ## </d 'Carry the One'>
                            ## <d 'Simplify'>
                              ## <d 'Simplify'>
                                ## <d 'Multiplicative Identity'>
                                  (* (10) (10)) mulidr
                                ## </d 'Multiplicative Identity'>
                                (+ (* (3) (10)) (6)) addeq1i
                              ## </d 'Simplify'>
                              EqReplaceEq1
                            ## </d 'Simplify'>
                          ## </d 'Addition'>
                          EqReplaceEq1
                        ## </d 'Evaluate'>
                      ## </d 'One-Digit times Multiple-Digits'>
                    ## </d 'Multiply Base'>
                    (* (+ (10) (7)) (10)) addeq2i
                  ## </d 'Multiply Two Individual Digits'>
                  ## <d 'Multiply Two Individual Digits'>
                    ## <d 'Multiply Base'>
                      ## <d 'Distributive Property'>
                        (10) (7) (10) distl
                      ## </d 'Distributive Property'>
                    ## </d 'Multiply Base'>
                    EqReplaceEq1Add0
                  ## </d 'Multiply Two Individual Digits'>
                  EqReplaceEq1
                ## </d 'Multiply Each Digit'>
                ## <d 'Sum the Total'>
                  ## <d 'Addition'>
                    ## <d 'Group Common Digits'>
                      ## <d 'Rearrange Terms'>
                        ## <d 'Associate All Left'>
                          ## <d 'Associative Property'>
                            (+ (* (10) (10)) (* (7) (10))) (* (10) (10)) (+ (* (3) (10)) (6)) addass
                            ## <d 'Commutative Property'>
                              (+ (+ (+ (* (10) (10)) (* (7) (10))) (* (10) (10))) (+ (* (3) (10)) (6))) (+ (+ (* (10) (10)) (* (7) (10))) (+ (* (10) (10)) (+ (* (3) (10)) (6)))) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                          ## </d 'Associative Property'>
                          ## <d 'Associative Property'>
                            (+ (+ (* (10) (10)) (* (7) (10))) (* (10) (10))) (* (3) (10)) (6) addass
                            ## <d 'Commutative Property'>
                              (+ (+ (+ (+ (* (10) (10)) (* (7) (10))) (* (10) (10))) (* (3) (10))) (6)) (+ (+ (+ (* (10) (10)) (* (7) (10))) (* (10) (10))) (+ (* (3) (10)) (6))) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                            EqReplaceEq1
                          ## </d 'Associative Property'>
                        ## </d 'Associate All Left'>
                        ## <d 'Reorder Terms'>
                          ## <d 'Associative Property'>
                            (* (10) (10)) (* (7) (10)) (* (10) (10)) addass
                            (* (3) (10)) addeq1i
                            (6) addeq1i
                          ## </d 'Associative Property'>
                          ## <d 'Commutative Property'>
                            (* (7) (10)) (* (10) (10)) addcom
                            EqReplaceEq1Add0Add0Add1
                          ## </d 'Commutative Property'>
                          ## <d 'Associative Property'>
                            (* (10) (10)) (* (10) (10)) (* (7) (10)) addass
                            ## <d 'Commutative Property'>
                              (+ (+ (* (10) (10)) (* (10) (10))) (* (7) (10))) (+ (* (10) (10)) (+ (* (10) (10)) (* (7) (10)))) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                            EqReplaceEq1Add0Add0
                          ## </d 'Associative Property'>
                          EqReplaceEq1
                        ## </d 'Reorder Terms'>
                        ## <d 'Change Associations'>
                          ## <d 'Associative Property'>
                            (+ (* (10) (10)) (* (10) (10))) (* (7) (10)) (* (3) (10)) addass
                            (6) addeq1i
                          ## </d 'Associative Property'>
                          EqReplaceEq1
                        ## </d 'Change Associations'>
                      ## </d 'Rearrange Terms'>
                      ## <d 'Multiply By One'>
                        ## <d 'Multiply By One'>
                          ## <d 'Multiply By One'>
                            ## <d 'Multiply By One'>
                              ## <d 'Evaluate'>
                                ## <d 'Evaluate'>
                                  (* (10) (10)) mulidr
                                ## </d 'Evaluate'>
                                ## <d 'Commutative Property'>
                                  (* (1) (* (10) (10))) (* (10) (10)) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                              ## </d 'Evaluate'>
                              (* (10) (10)) addeq1i
                            ## </d 'Multiply By One'>
                            ## <d 'Multiply By One'>
                              ## <d 'Evaluate'>
                                ## <d 'Evaluate'>
                                  (* (10) (10)) mulidr
                                ## </d 'Evaluate'>
                                ## <d 'Commutative Property'>
                                  (* (1) (* (10) (10))) (* (10) (10)) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                              ## </d 'Evaluate'>
                              EqReplaceEq1Add1
                            ## </d 'Multiply By One'>
                            (+ (* (7) (10)) (* (3) (10))) addeq1i
                          ## </d 'Multiply By One'>
                          (6) addeq1i
                        ## </d 'Multiply By One'>
                        EqReplaceEq1
                      ## </d 'Multiply By One'>
                      ## <d 'Distributive Property'>
                        (1) (1) (* (10) (10)) distl
                        ## <d 'Commutative Property'>
                          (* (+ (1) (1)) (* (10) (10))) (+ (* (1) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0Add0
                      ## </d 'Distributive Property'>
                      ## <d 'Distributive Property'>
                        (7) (3) (10) distl
                        ## <d 'Commutative Property'>
                          (* (+ (7) (3)) (10)) (+ (* (7) (10)) (* (3) (10))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0Add1
                      ## </d 'Distributive Property'>
                    ## </d 'Group Common Digits'>
                    ## <d 'Single-digit Addition'>
                      7plus3
                      EqReplaceEq1Add0Add1Mul0
                    ## </d 'Single-digit Addition'>
                    ## <d 'Carry the One'>
                      ## <d 'Multiply By One'>
                        ## <d 'Evaluate'>
                          ## <d 'Evaluate'>
                            (* (10) (10)) mulidr
                          ## </d 'Evaluate'>
                          ## <d 'Commutative Property'>
                            (* (1) (* (10) (10))) (* (10) (10)) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Evaluate'>
                        (* (+ (1) (1)) (* (10) (10))) addeq2i
                      ## </d 'Multiply By One'>
                      ## <d 'Distributive Property'>
                        (+ (1) (1)) (1) (* (10) (10)) distl
                        ## <d 'Commutative Property'>
                          (* (+ (+ (1) (1)) (1)) (* (10) (10))) (+ (* (+ (1) (1)) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1
                      ## </d 'Distributive Property'>
                      EqReplaceEq1Add0
                    ## </d 'Carry the One'>
                    ## <d 'Single-digit Addition'>
                      ## <d 'Evaluate'>
                        1plus1
                        (1) addeq1i
                      ## </d 'Evaluate'>
                      ## <d 'Evaluate'>
                        2plus1
                        EqReplaceEq1
                      ## </d 'Evaluate'>
                      EqReplaceEq1Add0Mul0
                    ## </d 'Single-digit Addition'>
                  ## </d 'Addition'>
                  EqReplaceEq1
                ## </d 'Sum the Total'>
              ## </d 'Multiplication'>
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (+ (10) (7)) (+ (10) (8))) (+ (* (3) (* (10) (10))) (6)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            (+ (* (4) (* (10) (10))) (+ (10) (4))) diveq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              ## <d 'Multiplication'>
                ## <d 'Distribute Digits'>
                  ## <d 'Distributive Property'>
                    (+ (* (2) (10)) (3)) (10) (8) distr
                  ## </d 'Distributive Property'>
                ## </d 'Distribute Digits'>
                ## <d 'Multiply Each Digit'>
                  ## <d 'Multiply Two Individual Digits'>
                    ## <d 'Multiply Base'>
                      ## <d 'One-Digit times Multiple-Digits'>
                        ## <d 'Rearrange Digits'>
                          ## <d 'Distributive Property'>
                            (* (2) (10)) (3) (8) distl
                          ## </d 'Distributive Property'>
                        ## </d 'Rearrange Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Evaluate'>
                            3times8
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add1
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Rearrange Terms'>
                            ## <d 'Reorder Terms'>
                              ## <d 'Associative Property'>
                                (2) (10) (8) mulass
                              ## </d 'Associative Property'>
                              ## <d 'Commutative Property'>
                                (10) (8) mulcom
                                EqReplaceEq1Mul1
                              ## </d 'Commutative Property'>
                              ## <d 'Associative Property'>
                                (2) (8) (10) mulass
                                ## <d 'Commutative Property'>
                                  (* (* (2) (8)) (10)) (* (2) (* (8) (10))) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                                EqReplaceEq1
                              ## </d 'Associative Property'>
                            ## </d 'Reorder Terms'>
                          ## </d 'Rearrange Terms'>
                          ## <d 'Evaluate'>
                            2times8
                            EqReplaceEq1Mul0
                          ## </d 'Evaluate'>
                          ## <d 'Evaluate'>
                            ## <d 'Distributive Property'>
                              (10) (6) (10) distl
                            ## </d 'Distributive Property'>
                            EqReplaceEq1
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add0
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Evaluate'>
                          ## <d 'Addition'>
                            ## <d 'Group Common Digits'>
                              ## <d 'Rearrange Terms'>
                                ## <d 'Associate All Left'>
                                  ## <d 'Associative Property'>
                                    (+ (* (10) (10)) (* (6) (10))) (* (2) (10)) (4) addass
                                    ## <d 'Commutative Property'>
                                      (+ (+ (+ (* (10) (10)) (* (6) (10))) (* (2) (10))) (4)) (+ (+ (* (10) (10)) (* (6) (10))) (+ (* (2) (10)) (4))) eqcom
                                      mpbi
                                    ## </d 'Commutative Property'>
                                  ## </d 'Associative Property'>
                                ## </d 'Associate All Left'>
                                ## <d 'Change Associations'>
                                  ## <d 'Associative Property'>
                                    (* (10) (10)) (* (6) (10)) (* (2) (10)) addass
                                    (4) addeq1i
                                  ## </d 'Associative Property'>
                                  EqReplaceEq1
                                ## </d 'Change Associations'>
                              ## </d 'Rearrange Terms'>
                              ## <d 'Multiply By One'>
                                ## <d 'Multiply By One'>
                                  ## <d 'Multiply By One'>
                                    ## <d 'Evaluate'>
                                      ## <d 'Evaluate'>
                                        (* (10) (10)) mulidr
                                      ## </d 'Evaluate'>
                                      ## <d 'Commutative Property'>
                                        (* (1) (* (10) (10))) (* (10) (10)) eqcom
                                        mpbi
                                      ## </d 'Commutative Property'>
                                    ## </d 'Evaluate'>
                                    (+ (* (6) (10)) (* (2) (10))) addeq1i
                                  ## </d 'Multiply By One'>
                                  (4) addeq1i
                                ## </d 'Multiply By One'>
                                EqReplaceEq1
                              ## </d 'Multiply By One'>
                              ## <d 'Distributive Property'>
                                (6) (2) (10) distl
                                ## <d 'Commutative Property'>
                                  (* (+ (6) (2)) (10)) (+ (* (6) (10)) (* (2) (10))) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                                EqReplaceEq1Add0Add1
                              ## </d 'Distributive Property'>
                            ## </d 'Group Common Digits'>
                            ## <d 'Single-digit Addition'>
                              6plus2
                              EqReplaceEq1Add0Add1Mul0
                            ## </d 'Single-digit Addition'>
                            ## <d 'Simplify'>
                              ## <d 'Associative Property'>
                                (* (1) (* (10) (10))) (* (8) (10)) (4) addass
                              ## </d 'Associative Property'>
                              ## <d 'Simplify'>
                                ## <d 'Multiplicative Identity'>
                                  (* (10) (10)) mulidr
                                ## </d 'Multiplicative Identity'>
                                EqReplaceEq1Add0
                              ## </d 'Simplify'>
                              EqReplaceEq1
                            ## </d 'Simplify'>
                          ## </d 'Addition'>
                          EqReplaceEq1
                        ## </d 'Evaluate'>
                      ## </d 'One-Digit times Multiple-Digits'>
                    ## </d 'Multiply Base'>
                    (* (+ (* (2) (10)) (3)) (10)) addeq2i
                  ## </d 'Multiply Two Individual Digits'>
                  ## <d 'Multiply Two Individual Digits'>
                    ## <d 'Multiply Base'>
                      ## <d 'Distributive Property'>
                        (* (2) (10)) (3) (10) distl
                      ## </d 'Distributive Property'>
                      ## <d 'Evaluate'>
                        ## <d 'Associative Property'>
                          (2) (10) (10) mulass
                        ## </d 'Associative Property'>
                        EqReplaceEq1Add0
                      ## </d 'Evaluate'>
                    ## </d 'Multiply Base'>
                    EqReplaceEq1Add0
                  ## </d 'Multiply Two Individual Digits'>
                  EqReplaceEq1
                ## </d 'Multiply Each Digit'>
                ## <d 'Sum the Total'>
                  ## <d 'Addition'>
                    ## <d 'Group Common Digits'>
                      ## <d 'Rearrange Terms'>
                        ## <d 'Associate All Left'>
                          ## <d 'Associative Property'>
                            (+ (* (2) (* (10) (10))) (* (3) (10))) (* (10) (10)) (+ (* (8) (10)) (4)) addass
                            ## <d 'Commutative Property'>
                              (+ (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (* (10) (10))) (+ (* (8) (10)) (4))) (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (+ (* (10) (10)) (+ (* (8) (10)) (4)))) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                          ## </d 'Associative Property'>
                          ## <d 'Associative Property'>
                            (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (* (10) (10))) (* (8) (10)) (4) addass
                            ## <d 'Commutative Property'>
                              (+ (+ (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (* (10) (10))) (* (8) (10))) (4)) (+ (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (* (10) (10))) (+ (* (8) (10)) (4))) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                            EqReplaceEq1
                          ## </d 'Associative Property'>
                        ## </d 'Associate All Left'>
                        ## <d 'Reorder Terms'>
                          ## <d 'Associative Property'>
                            (* (2) (* (10) (10))) (* (3) (10)) (* (10) (10)) addass
                            (* (8) (10)) addeq1i
                            (4) addeq1i
                          ## </d 'Associative Property'>
                          ## <d 'Commutative Property'>
                            (* (3) (10)) (* (10) (10)) addcom
                            EqReplaceEq1Add0Add0Add1
                          ## </d 'Commutative Property'>
                          ## <d 'Associative Property'>
                            (* (2) (* (10) (10))) (* (10) (10)) (* (3) (10)) addass
                            ## <d 'Commutative Property'>
                              (+ (+ (* (2) (* (10) (10))) (* (10) (10))) (* (3) (10))) (+ (* (2) (* (10) (10))) (+ (* (10) (10)) (* (3) (10)))) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                            EqReplaceEq1Add0Add0
                          ## </d 'Associative Property'>
                          EqReplaceEq1
                        ## </d 'Reorder Terms'>
                        ## <d 'Change Associations'>
                          ## <d 'Associative Property'>
                            (+ (* (2) (* (10) (10))) (* (10) (10))) (* (3) (10)) (* (8) (10)) addass
                            (4) addeq1i
                          ## </d 'Associative Property'>
                          EqReplaceEq1
                        ## </d 'Change Associations'>
                      ## </d 'Rearrange Terms'>
                      ## <d 'Multiply By One'>
                        ## <d 'Multiply By One'>
                          ## <d 'Multiply By One'>
                            ## <d 'Multiply By One'>
                              ## <d 'Evaluate'>
                                ## <d 'Evaluate'>
                                  (* (10) (10)) mulidr
                                ## </d 'Evaluate'>
                                ## <d 'Commutative Property'>
                                  (* (1) (* (10) (10))) (* (10) (10)) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                              ## </d 'Evaluate'>
                              (* (2) (* (10) (10))) addeq2i
                            ## </d 'Multiply By One'>
                            (+ (* (3) (10)) (* (8) (10))) addeq1i
                          ## </d 'Multiply By One'>
                          (4) addeq1i
                        ## </d 'Multiply By One'>
                        EqReplaceEq1
                      ## </d 'Multiply By One'>
                      ## <d 'Distributive Property'>
                        (2) (1) (* (10) (10)) distl
                        ## <d 'Commutative Property'>
                          (* (+ (2) (1)) (* (10) (10))) (+ (* (2) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0Add0
                      ## </d 'Distributive Property'>
                      ## <d 'Distributive Property'>
                        (3) (8) (10) distl
                        ## <d 'Commutative Property'>
                          (* (+ (3) (8)) (10)) (+ (* (3) (10)) (* (8) (10))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0Add1
                      ## </d 'Distributive Property'>
                    ## </d 'Group Common Digits'>
                    ## <d 'Single-digit Addition'>
                      3plus8
                      EqReplaceEq1Add0Add1Mul0
                    ## </d 'Single-digit Addition'>
                    ## <d 'Carry the One'>
                      ## <d 'Distributive Property'>
                        (10) (1) (10) distl
                        (* (+ (2) (1)) (* (10) (10))) addeq2i
                      ## </d 'Distributive Property'>
                      ## <d 'Associative Property'>
                        (* (+ (2) (1)) (* (10) (10))) (* (10) (10)) (* (1) (10)) addass
                        ## <d 'Commutative Property'>
                          (+ (+ (* (+ (2) (1)) (* (10) (10))) (* (10) (10))) (* (1) (10))) (+ (* (+ (2) (1)) (* (10) (10))) (+ (* (10) (10)) (* (1) (10)))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1
                      ## </d 'Associative Property'>
                      ## <d 'Multiply By One'>
                        ## <d 'Evaluate'>
                          ## <d 'Evaluate'>
                            (* (10) (10)) mulidr
                          ## </d 'Evaluate'>
                          ## <d 'Commutative Property'>
                            (* (1) (* (10) (10))) (* (10) (10)) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Evaluate'>
                        EqReplaceEq1Add0Add1
                      ## </d 'Multiply By One'>
                      ## <d 'Distributive Property'>
                        (+ (2) (1)) (1) (* (10) (10)) distl
                        ## <d 'Commutative Property'>
                          (* (+ (+ (2) (1)) (1)) (* (10) (10))) (+ (* (+ (2) (1)) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0
                      ## </d 'Distributive Property'>
                      EqReplaceEq1Add0
                    ## </d 'Carry the One'>
                    ## <d 'Single-digit Addition'>
                      ## <d 'Evaluate'>
                        2plus1
                        (1) addeq1i
                      ## </d 'Evaluate'>
                      ## <d 'Evaluate'>
                        3plus1
                        EqReplaceEq1
                      ## </d 'Evaluate'>
                      EqReplaceEq1Add0Add0Mul0
                    ## </d 'Single-digit Addition'>
                    ## <d 'Simplify'>
                      ## <d 'Associative Property'>
                        (* (4) (* (10) (10))) (* (1) (10)) (4) addass
                      ## </d 'Associative Property'>
                      ## <d 'Simplify'>
                        ## <d 'Simplify'>
                          ## <d 'Multiplicative Identity'>
                            (10) mulidr
                          ## </d 'Multiplicative Identity'>
                          (4) addeq1i
                        ## </d 'Simplify'>
                        EqReplaceEq1Add1
                      ## </d 'Simplify'>
                      EqReplaceEq1
                    ## </d 'Simplify'>
                  ## </d 'Addition'>
                  EqReplaceEq1
                ## </d 'Sum the Total'>
              ## </d 'Multiplication'>
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (+ (* (2) (10)) (3)) (+ (10) (8))) (+ (* (4) (* (10) (10))) (+ (10) (4))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Div1
          ## </d 'Evaluate'>
        ## </d 'Separate Common Factor'>
        ## <d 'Cancel Common Factor'>
          ## <d 'Add To Both Sides'>
            ## <d 'Derive Smaller Inequality'>
              3greater0
            ## </d 'Derive Smaller Inequality'>
            ## <d 'Add To Both Sides'>
              (* (2) (10)) gtadd2i
            ## </d 'Add To Both Sides'>
            ## <d 'Simplify Right Side'>
              (* (2) (10)) addid
              EqReplaceGt1
            ## </d 'Simplify Right Side'>
          ## </d 'Add To Both Sides'>
          ## <d 'First Digit is Lower'>
            ## <d 'Highest Digit Inequality'>
              2greater1
            ## </d 'Highest Digit Inequality'>
            10greater0
            gtmul2i
            ## <d 'Evaluate'>
              (10) mulidr
              EqReplaceGt1
            ## </d 'Evaluate'>
            GtReplaceGt1
          ## </d 'First Digit is Lower'>
          ## <d 'Fewer Digits'>
            10greater1
            GtReplaceGt1
          ## </d 'Fewer Digits'>
          ## <d 'Lower Remaining Digits'>
            ## <d 'Add To Both Sides'>
              ## <d 'Derive Smaller Inequality'>
                1greater0
              ## </d 'Derive Smaller Inequality'>
              ## <d 'Add To Both Sides'>
                (0) gtadd2i
              ## </d 'Add To Both Sides'>
              ## <d 'Simplify Left Side'>
                (1) addidr
                EqReplaceGt0
              ## </d 'Simplify Left Side'>
              ## <d 'Simplify Right Side'>
                (0) addidr
                EqReplaceGt1
              ## </d 'Simplify Right Side'>
            ## </d 'Add To Both Sides'>
            GtReplaceGt1
          ## </d 'Lower Remaining Digits'>
          ## <d 'Convert to ≠'>
            (+ (* (2) (10)) (3)) (0) gtneq
            ax-mp
          ## </d 'Convert to ≠'>
          ## <d 'Add To Both Sides'>
            ## <d 'Derive Smaller Inequality'>
              8greater0
            ## </d 'Derive Smaller Inequality'>
            ## <d 'Add To Both Sides'>
              (10) gtadd2i
            ## </d 'Add To Both Sides'>
            ## <d 'Simplify Right Side'>
              (10) addid
              EqReplaceGt1
            ## </d 'Simplify Right Side'>
          ## </d 'Add To Both Sides'>
          ## <d 'Fewer Digits'>
            10greater1
            GtReplaceGt1
          ## </d 'Fewer Digits'>
          ## <d 'Lower Remaining Digits'>
            ## <d 'Add To Both Sides'>
              ## <d 'Derive Smaller Inequality'>
                1greater0
              ## </d 'Derive Smaller Inequality'>
              ## <d 'Add To Both Sides'>
                (0) gtadd2i
              ## </d 'Add To Both Sides'>
              ## <d 'Simplify Left Side'>
                (1) addidr
                EqReplaceGt0
              ## </d 'Simplify Left Side'>
              ## <d 'Simplify Right Side'>
                (0) addidr
                EqReplaceGt1
              ## </d 'Simplify Right Side'>
            ## </d 'Add To Both Sides'>
            GtReplaceGt1
          ## </d 'Lower Remaining Digits'>
          ## <d 'Convert to ≠'>
            (+ (10) (8)) (0) gtneq
            ax-mp
          ## </d 'Convert to ≠'>
          (+ (10) (7)) fracFactorsi
          EqReplaceEq1
        ## </d 'Cancel Common Factor'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (/ (+ (* (3) (* (10) (10))) (6)) (+ (* (4) (* (10) (10))) (+ (10) (4)))) (/ (+ (10) (7)) (+ (* (2) (10)) (3))) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (/ (7) (+ (10) (8))) minuseq1i
    ## </d 'Multiply to Reach Common Denominator'>
    ## <d 'Multiply to Reach Common Denominator'>
      ## <d 'Evaluate'>
        ## <d 'Separate Common Factor'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              ## <d 'Multiplication'>
                ## <d 'Distribute Digits'>
                  ## <d 'Distributive Property'>
                    (7) (* (2) (10)) (3) distr
                  ## </d 'Distributive Property'>
                ## </d 'Distribute Digits'>
                ## <d 'Pull Out Base 10'>
                  ## <d 'Associative Property'>
                    (7) (2) (10) mulass
                    ## <d 'Commutative Property'>
                      (* (* (7) (2)) (10)) (* (7) (* (2) (10))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    (* (7) (3)) addeq1i
                  ## </d 'Associative Property'>
                  EqReplaceEq1
                ## </d 'Pull Out Base 10'>
                ## <d 'Multiply Each Digit'>
                  ## <d 'Multiply Two Individual Digits'>
                    ## <d 'Multiply Base'>
                      7times3
                    ## </d 'Multiply Base'>
                    (* (* (7) (2)) (10)) addeq2i
                  ## </d 'Multiply Two Individual Digits'>
                  ## <d 'Multiply Two Individual Digits'>
                    ## <d 'Multiply Significant Digits'>
                      7times2
                      (10) muleq1i
                    ## </d 'Multiply Significant Digits'>
                    ## <d 'Multiply Base'>
                      ## <d 'Distributive Property'>
                        (10) (4) (10) distl
                      ## </d 'Distributive Property'>
                      EqReplaceEq1
                    ## </d 'Multiply Base'>
                    EqReplaceEq1Add0
                  ## </d 'Multiply Two Individual Digits'>
                  EqReplaceEq1
                ## </d 'Multiply Each Digit'>
                ## <d 'Sum the Total'>
                  ## <d 'Addition'>
                    ## <d 'Group Common Digits'>
                      ## <d 'Rearrange Terms'>
                        ## <d 'Associate All Left'>
                          ## <d 'Associative Property'>
                            (+ (* (10) (10)) (* (4) (10))) (* (2) (10)) (1) addass
                            ## <d 'Commutative Property'>
                              (+ (+ (+ (* (10) (10)) (* (4) (10))) (* (2) (10))) (1)) (+ (+ (* (10) (10)) (* (4) (10))) (+ (* (2) (10)) (1))) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                          ## </d 'Associative Property'>
                        ## </d 'Associate All Left'>
                        ## <d 'Change Associations'>
                          ## <d 'Associative Property'>
                            (* (10) (10)) (* (4) (10)) (* (2) (10)) addass
                            (1) addeq1i
                          ## </d 'Associative Property'>
                          EqReplaceEq1
                        ## </d 'Change Associations'>
                      ## </d 'Rearrange Terms'>
                      ## <d 'Multiply By One'>
                        ## <d 'Multiply By One'>
                          ## <d 'Multiply By One'>
                            ## <d 'Evaluate'>
                              ## <d 'Evaluate'>
                                (* (10) (10)) mulidr
                              ## </d 'Evaluate'>
                              ## <d 'Commutative Property'>
                                (* (1) (* (10) (10))) (* (10) (10)) eqcom
                                mpbi
                              ## </d 'Commutative Property'>
                            ## </d 'Evaluate'>
                            (+ (* (4) (10)) (* (2) (10))) addeq1i
                          ## </d 'Multiply By One'>
                          (1) addeq1i
                        ## </d 'Multiply By One'>
                        EqReplaceEq1
                      ## </d 'Multiply By One'>
                      ## <d 'Distributive Property'>
                        (4) (2) (10) distl
                        ## <d 'Commutative Property'>
                          (* (+ (4) (2)) (10)) (+ (* (4) (10)) (* (2) (10))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0Add1
                      ## </d 'Distributive Property'>
                    ## </d 'Group Common Digits'>
                    ## <d 'Single-digit Addition'>
                      4plus2
                      EqReplaceEq1Add0Add1Mul0
                    ## </d 'Single-digit Addition'>
                    ## <d 'Simplify'>
                      ## <d 'Associative Property'>
                        (* (1) (* (10) (10))) (* (6) (10)) (1) addass
                      ## </d 'Associative Property'>
                      ## <d 'Simplify'>
                        ## <d 'Multiplicative Identity'>
                          (* (10) (10)) mulidr
                        ## </d 'Multiplicative Identity'>
                        EqReplaceEq1Add0
                      ## </d 'Simplify'>
                      EqReplaceEq1
                    ## </d 'Simplify'>
                  ## </d 'Addition'>
                  EqReplaceEq1
                ## </d 'Sum the Total'>
              ## </d 'Multiplication'>
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (7) (+ (* (2) (10)) (3))) (+ (* (10) (10)) (+ (* (6) (10)) (1))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            (+ (* (4) (* (10) (10))) (+ (10) (4))) diveq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              ## <d 'Multiplication'>
                ## <d 'Distribute Digits'>
                  ## <d 'Distributive Property'>
                    (+ (10) (8)) (* (2) (10)) (3) distr
                  ## </d 'Distributive Property'>
                ## </d 'Distribute Digits'>
                ## <d 'Pull Out Base 10'>
                  ## <d 'Associative Property'>
                    (+ (10) (8)) (2) (10) mulass
                    ## <d 'Commutative Property'>
                      (* (* (+ (10) (8)) (2)) (10)) (* (+ (10) (8)) (* (2) (10))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    (* (+ (10) (8)) (3)) addeq1i
                  ## </d 'Associative Property'>
                  EqReplaceEq1
                ## </d 'Pull Out Base 10'>
                ## <d 'Multiply Each Digit'>
                  ## <d 'Multiply Two Individual Digits'>
                    ## <d 'Multiply Base'>
                      ## <d 'One-Digit times Multiple-Digits'>
                        ## <d 'Rearrange Digits'>
                          ## <d 'Distributive Property'>
                            (10) (8) (3) distl
                          ## </d 'Distributive Property'>
                        ## </d 'Rearrange Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Evaluate'>
                            8times3
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add1
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Evaluate'>
                            ## <d 'Commutative Property'>
                              (10) (3) mulcom
                            ## </d 'Commutative Property'>
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add0
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Evaluate'>
                          ## <d 'Addition'>
                            ## <d 'Group Common Digits'>
                              ## <d 'Rearrange Terms'>
                                ## <d 'Associate All Left'>
                                  ## <d 'Associative Property'>
                                    (* (3) (10)) (* (2) (10)) (4) addass
                                    ## <d 'Commutative Property'>
                                      (+ (+ (* (3) (10)) (* (2) (10))) (4)) (+ (* (3) (10)) (+ (* (2) (10)) (4))) eqcom
                                      mpbi
                                    ## </d 'Commutative Property'>
                                  ## </d 'Associative Property'>
                                ## </d 'Associate All Left'>
                              ## </d 'Rearrange Terms'>
                              ## <d 'Distributive Property'>
                                (3) (2) (10) distl
                                ## <d 'Commutative Property'>
                                  (* (+ (3) (2)) (10)) (+ (* (3) (10)) (* (2) (10))) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                                EqReplaceEq1Add0
                              ## </d 'Distributive Property'>
                            ## </d 'Group Common Digits'>
                            ## <d 'Single-digit Addition'>
                              3plus2
                              EqReplaceEq1Add0Mul0
                            ## </d 'Single-digit Addition'>
                          ## </d 'Addition'>
                          EqReplaceEq1
                        ## </d 'Evaluate'>
                      ## </d 'One-Digit times Multiple-Digits'>
                    ## </d 'Multiply Base'>
                    (* (* (+ (10) (8)) (2)) (10)) addeq2i
                  ## </d 'Multiply Two Individual Digits'>
                  ## <d 'Multiply Two Individual Digits'>
                    ## <d 'Multiply Significant Digits'>
                      ## <d 'One-Digit times Multiple-Digits'>
                        ## <d 'Rearrange Digits'>
                          ## <d 'Distributive Property'>
                            (10) (8) (2) distl
                          ## </d 'Distributive Property'>
                        ## </d 'Rearrange Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Evaluate'>
                            8times2
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add1
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Multiply Two Digits'>
                          ## <d 'Evaluate'>
                            ## <d 'Commutative Property'>
                              (10) (2) mulcom
                            ## </d 'Commutative Property'>
                          ## </d 'Evaluate'>
                          EqReplaceEq1Add0
                        ## </d 'Multiply Two Digits'>
                        ## <d 'Evaluate'>
                          ## <d 'Addition'>
                            ## <d 'Group Common Digits'>
                              ## <d 'Rearrange Terms'>
                                ## <d 'Associate All Left'>
                                  ## <d 'Associative Property'>
                                    (* (2) (10)) (10) (6) addass
                                    ## <d 'Commutative Property'>
                                      (+ (+ (* (2) (10)) (10)) (6)) (+ (* (2) (10)) (+ (10) (6))) eqcom
                                      mpbi
                                    ## </d 'Commutative Property'>
                                  ## </d 'Associative Property'>
                                ## </d 'Associate All Left'>
                              ## </d 'Rearrange Terms'>
                              ## <d 'Multiply By One'>
                                ## <d 'Multiply By One'>
                                  ## <d 'Multiply By One'>
                                    ## <d 'Evaluate'>
                                      ## <d 'Evaluate'>
                                        (10) mulidr
                                      ## </d 'Evaluate'>
                                      ## <d 'Commutative Property'>
                                        (* (1) (10)) (10) eqcom
                                        mpbi
                                      ## </d 'Commutative Property'>
                                    ## </d 'Evaluate'>
                                    (* (2) (10)) addeq2i
                                  ## </d 'Multiply By One'>
                                  (6) addeq1i
                                ## </d 'Multiply By One'>
                                EqReplaceEq1
                              ## </d 'Multiply By One'>
                              ## <d 'Distributive Property'>
                                (2) (1) (10) distl
                                ## <d 'Commutative Property'>
                                  (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                                EqReplaceEq1Add0
                              ## </d 'Distributive Property'>
                            ## </d 'Group Common Digits'>
                            ## <d 'Single-digit Addition'>
                              2plus1
                              EqReplaceEq1Add0Mul0
                            ## </d 'Single-digit Addition'>
                          ## </d 'Addition'>
                          EqReplaceEq1
                        ## </d 'Evaluate'>
                      ## </d 'One-Digit times Multiple-Digits'>
                      (10) muleq1i
                    ## </d 'Multiply Significant Digits'>
                    ## <d 'Multiply Base'>
                      ## <d 'Distributive Property'>
                        (* (3) (10)) (6) (10) distl
                      ## </d 'Distributive Property'>
                      ## <d 'Evaluate'>
                        ## <d 'Associative Property'>
                          (3) (10) (10) mulass
                        ## </d 'Associative Property'>
                        EqReplaceEq1Add0
                      ## </d 'Evaluate'>
                      EqReplaceEq1
                    ## </d 'Multiply Base'>
                    EqReplaceEq1Add0
                  ## </d 'Multiply Two Individual Digits'>
                  EqReplaceEq1
                ## </d 'Multiply Each Digit'>
                ## <d 'Sum the Total'>
                  ## <d 'Addition'>
                    ## <d 'Group Common Digits'>
                      ## <d 'Rearrange Terms'>
                        ## <d 'Associate All Left'>
                          ## <d 'Associative Property'>
                            (+ (* (3) (* (10) (10))) (* (6) (10))) (* (5) (10)) (4) addass
                            ## <d 'Commutative Property'>
                              (+ (+ (+ (* (3) (* (10) (10))) (* (6) (10))) (* (5) (10))) (4)) (+ (+ (* (3) (* (10) (10))) (* (6) (10))) (+ (* (5) (10)) (4))) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                          ## </d 'Associative Property'>
                        ## </d 'Associate All Left'>
                        ## <d 'Change Associations'>
                          ## <d 'Associative Property'>
                            (* (3) (* (10) (10))) (* (6) (10)) (* (5) (10)) addass
                            (4) addeq1i
                          ## </d 'Associative Property'>
                          EqReplaceEq1
                        ## </d 'Change Associations'>
                      ## </d 'Rearrange Terms'>
                      ## <d 'Distributive Property'>
                        (6) (5) (10) distl
                        ## <d 'Commutative Property'>
                          (* (+ (6) (5)) (10)) (+ (* (6) (10)) (* (5) (10))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0Add1
                      ## </d 'Distributive Property'>
                    ## </d 'Group Common Digits'>
                    ## <d 'Single-digit Addition'>
                      6plus5
                      EqReplaceEq1Add0Add1Mul0
                    ## </d 'Single-digit Addition'>
                    ## <d 'Carry the One'>
                      ## <d 'Distributive Property'>
                        (10) (1) (10) distl
                        (* (3) (* (10) (10))) addeq2i
                      ## </d 'Distributive Property'>
                      ## <d 'Associative Property'>
                        (* (3) (* (10) (10))) (* (10) (10)) (* (1) (10)) addass
                        ## <d 'Commutative Property'>
                          (+ (+ (* (3) (* (10) (10))) (* (10) (10))) (* (1) (10))) (+ (* (3) (* (10) (10))) (+ (* (10) (10)) (* (1) (10)))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1
                      ## </d 'Associative Property'>
                      ## <d 'Multiply By One'>
                        ## <d 'Evaluate'>
                          ## <d 'Evaluate'>
                            (* (10) (10)) mulidr
                          ## </d 'Evaluate'>
                          ## <d 'Commutative Property'>
                            (* (1) (* (10) (10))) (* (10) (10)) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Evaluate'>
                        EqReplaceEq1Add0Add1
                      ## </d 'Multiply By One'>
                      ## <d 'Distributive Property'>
                        (3) (1) (* (10) (10)) distl
                        ## <d 'Commutative Property'>
                          (* (+ (3) (1)) (* (10) (10))) (+ (* (3) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                        EqReplaceEq1Add0
                      ## </d 'Distributive Property'>
                      EqReplaceEq1Add0
                    ## </d 'Carry the One'>
                    ## <d 'Single-digit Addition'>
                      3plus1
                      EqReplaceEq1Add0Add0Mul0
                    ## </d 'Single-digit Addition'>
                    ## <d 'Simplify'>
                      ## <d 'Associative Property'>
                        (* (4) (* (10) (10))) (* (1) (10)) (4) addass
                      ## </d 'Associative Property'>
                      ## <d 'Simplify'>
                        ## <d 'Simplify'>
                          ## <d 'Multiplicative Identity'>
                            (10) mulidr
                          ## </d 'Multiplicative Identity'>
                          (4) addeq1i
                        ## </d 'Simplify'>
                        EqReplaceEq1Add1
                      ## </d 'Simplify'>
                      EqReplaceEq1
                    ## </d 'Simplify'>
                  ## </d 'Addition'>
                  EqReplaceEq1
                ## </d 'Sum the Total'>
              ## </d 'Multiplication'>
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (+ (10) (8)) (+ (* (2) (10)) (3))) (+ (* (4) (* (10) (10))) (+ (10) (4))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Div1
          ## </d 'Evaluate'>
        ## </d 'Separate Common Factor'>
        ## <d 'Cancel Common Factor'>
          ## <d 'Add To Both Sides'>
            ## <d 'Derive Smaller Inequality'>
              8greater0
            ## </d 'Derive Smaller Inequality'>
            ## <d 'Add To Both Sides'>
              (10) gtadd2i
            ## </d 'Add To Both Sides'>
            ## <d 'Simplify Right Side'>
              (10) addid
              EqReplaceGt1
            ## </d 'Simplify Right Side'>
          ## </d 'Add To Both Sides'>
          ## <d 'Fewer Digits'>
            10greater1
            GtReplaceGt1
          ## </d 'Fewer Digits'>
          ## <d 'Lower Remaining Digits'>
            ## <d 'Add To Both Sides'>
              ## <d 'Derive Smaller Inequality'>
                1greater0
              ## </d 'Derive Smaller Inequality'>
              ## <d 'Add To Both Sides'>
                (0) gtadd2i
              ## </d 'Add To Both Sides'>
              ## <d 'Simplify Left Side'>
                (1) addidr
                EqReplaceGt0
              ## </d 'Simplify Left Side'>
              ## <d 'Simplify Right Side'>
                (0) addidr
                EqReplaceGt1
              ## </d 'Simplify Right Side'>
            ## </d 'Add To Both Sides'>
            GtReplaceGt1
          ## </d 'Lower Remaining Digits'>
          ## <d 'Convert to ≠'>
            (+ (10) (8)) (0) gtneq
            ax-mp
          ## </d 'Convert to ≠'>
          ## <d 'Add To Both Sides'>
            ## <d 'Derive Smaller Inequality'>
              3greater0
            ## </d 'Derive Smaller Inequality'>
            ## <d 'Add To Both Sides'>
              (* (2) (10)) gtadd2i
            ## </d 'Add To Both Sides'>
            ## <d 'Simplify Right Side'>
              (* (2) (10)) addid
              EqReplaceGt1
            ## </d 'Simplify Right Side'>
          ## </d 'Add To Both Sides'>
          ## <d 'First Digit is Lower'>
            ## <d 'Highest Digit Inequality'>
              2greater1
            ## </d 'Highest Digit Inequality'>
            10greater0
            gtmul2i
            ## <d 'Evaluate'>
              (10) mulidr
              EqReplaceGt1
            ## </d 'Evaluate'>
            GtReplaceGt1
          ## </d 'First Digit is Lower'>
          ## <d 'Fewer Digits'>
            10greater1
            GtReplaceGt1
          ## </d 'Fewer Digits'>
          ## <d 'Lower Remaining Digits'>
            ## <d 'Add To Both Sides'>
              ## <d 'Derive Smaller Inequality'>
                1greater0
              ## </d 'Derive Smaller Inequality'>
              ## <d 'Add To Both Sides'>
                (0) gtadd2i
              ## </d 'Add To Both Sides'>
              ## <d 'Simplify Left Side'>
                (1) addidr
                EqReplaceGt0
              ## </d 'Simplify Left Side'>
              ## <d 'Simplify Right Side'>
                (0) addidr
                EqReplaceGt1
              ## </d 'Simplify Right Side'>
            ## </d 'Add To Both Sides'>
            GtReplaceGt1
          ## </d 'Lower Remaining Digits'>
          ## <d 'Convert to ≠'>
            (+ (* (2) (10)) (3)) (0) gtneq
            ax-mp
          ## </d 'Convert to ≠'>
          (7) fracFactorsi
          EqReplaceEq1
        ## </d 'Cancel Common Factor'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (/ (+ (* (10) (10)) (+ (* (6) (10)) (1))) (+ (* (4) (* (10) (10))) (+ (10) (4)))) (/ (7) (+ (10) (8))) eqcom
        mpbi
      ## </d 'Commutative Property'>
      EqReplaceEq1Minus1
    ## </d 'Multiply to Reach Common Denominator'>
    ## <d 'Add To Both Sides'>
      ## <d 'Derive Smaller Inequality'>
        ## <d 'Add To Both Sides'>
          ## <d 'Derive Smaller Inequality'>
            4greater0
          ## </d 'Derive Smaller Inequality'>
          ## <d 'Add To Both Sides'>
            (10) gtadd2i
          ## </d 'Add To Both Sides'>
          ## <d 'Simplify Right Side'>
            (10) addid
            EqReplaceGt1
          ## </d 'Simplify Right Side'>
        ## </d 'Add To Both Sides'>
        ## <d 'Fewer Digits'>
          10greater1
          GtReplaceGt1
        ## </d 'Fewer Digits'>
        ## <d 'Lower Remaining Digits'>
          ## <d 'Add To Both Sides'>
            ## <d 'Derive Smaller Inequality'>
              1greater0
            ## </d 'Derive Smaller Inequality'>
            ## <d 'Add To Both Sides'>
              (0) gtadd2i
            ## </d 'Add To Both Sides'>
            ## <d 'Simplify Left Side'>
              (1) addidr
              EqReplaceGt0
            ## </d 'Simplify Left Side'>
            ## <d 'Simplify Right Side'>
              (0) addidr
              EqReplaceGt1
            ## </d 'Simplify Right Side'>
          ## </d 'Add To Both Sides'>
          GtReplaceGt1
        ## </d 'Lower Remaining Digits'>
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (4) (* (10) (10))) gtadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Right Side'>
        (* (4) (* (10) (10))) addid
        EqReplaceGt1
      ## </d 'Simplify Right Side'>
    ## </d 'Add To Both Sides'>
    ## <d 'First Digit is Lower'>
      ## <d 'Highest Digit Inequality'>
        4greater1
      ## </d 'Highest Digit Inequality'>
      ## <d 'Highest Digit Inequality'>
        10greater1
      ## </d 'Highest Digit Inequality'>
      10greater0
      gtmul2i
      ## <d 'Evaluate'>
        (10) mulidr
        EqReplaceGt1
      ## </d 'Evaluate'>
      ## <d 'Fewer Digits'>
        10greater1
        GtReplaceGt1
      ## </d 'Fewer Digits'>
      ## <d 'Lower Remaining Digits'>
        ## <d 'Add To Both Sides'>
          ## <d 'Derive Smaller Inequality'>
            1greater0
          ## </d 'Derive Smaller Inequality'>
          ## <d 'Add To Both Sides'>
            (0) gtadd2i
          ## </d 'Add To Both Sides'>
          ## <d 'Simplify Left Side'>
            (1) addidr
            EqReplaceGt0
          ## </d 'Simplify Left Side'>
          ## <d 'Simplify Right Side'>
            (0) addidr
            EqReplaceGt1
          ## </d 'Simplify Right Side'>
        ## </d 'Add To Both Sides'>
        GtReplaceGt1
      ## </d 'Lower Remaining Digits'>
      gtmul2i
      ## <d 'Evaluate'>
        (* (10) (10)) mulidr
        EqReplaceGt1
      ## </d 'Evaluate'>
      GtReplaceGt1
    ## </d 'First Digit is Lower'>
    ## <d 'Fewer Digits'>
      ## <d 'Highest Digit Inequality'>
        10greater1
      ## </d 'Highest Digit Inequality'>
      10greater0
      gtmul2i
      ## <d 'Evaluate'>
        (10) mulidr
        EqReplaceGt1
      ## </d 'Evaluate'>
      GtReplaceGt1
    ## </d 'Fewer Digits'>
    ## <d 'Fewer Digits'>
      10greater1
      GtReplaceGt1
    ## </d 'Fewer Digits'>
    ## <d 'Lower Remaining Digits'>
      ## <d 'Add To Both Sides'>
        ## <d 'Derive Smaller Inequality'>
          1greater0
        ## </d 'Derive Smaller Inequality'>
        ## <d 'Add To Both Sides'>
          (0) gtadd2i
        ## </d 'Add To Both Sides'>
        ## <d 'Simplify Left Side'>
          (1) addidr
          EqReplaceGt0
        ## </d 'Simplify Left Side'>
        ## <d 'Simplify Right Side'>
          (0) addidr
          EqReplaceGt1
        ## </d 'Simplify Right Side'>
      ## </d 'Add To Both Sides'>
      GtReplaceGt1
    ## </d 'Lower Remaining Digits'>
    ## <d 'Convert to ≠'>
      (+ (* (4) (* (10) (10))) (+ (10) (4))) (0) gtneq
      ax-mp
    ## </d 'Convert to ≠'>
    (+ (* (3) (* (10) (10))) (6)) (+ (* (10) (10)) (+ (* (6) (10)) (1))) divminusdistri
    EqReplaceEq1
    ## <d 'Simplify Numerator'>
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  (+ (* (10) (10)) (+ (* (4) (10)) (5))) (* (10) (10)) (+ (* (6) (10)) (1)) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (+ (* (10) (10)) (+ (* (4) (10)) (5))) (* (10) (10))) (+ (* (6) (10)) (1))) (+ (+ (* (10) (10)) (+ (* (4) (10)) (5))) (+ (* (10) (10)) (+ (* (6) (10)) (1)))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
                ## <d 'Associative Property'>
                  (+ (+ (* (10) (10)) (+ (* (4) (10)) (5))) (* (10) (10))) (* (6) (10)) (1) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (+ (+ (* (10) (10)) (+ (* (4) (10)) (5))) (* (10) (10))) (* (6) (10))) (1)) (+ (+ (+ (* (10) (10)) (+ (* (4) (10)) (5))) (* (10) (10))) (+ (* (6) (10)) (1))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1
                ## </d 'Associative Property'>
                ## <d 'Associative Property'>
                  (* (10) (10)) (* (4) (10)) (5) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (* (10) (10)) (* (4) (10))) (5)) (+ (* (10) (10)) (+ (* (4) (10)) (5))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0Add0Add0
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
              ## <d 'Reorder Terms'>
                ## <d 'Associative Property'>
                  (+ (* (10) (10)) (* (4) (10))) (5) (* (10) (10)) addass
                  (* (6) (10)) addeq1i
                  (1) addeq1i
                ## </d 'Associative Property'>
                ## <d 'Commutative Property'>
                  (5) (* (10) (10)) addcom
                  EqReplaceEq1Add0Add0Add1
                ## </d 'Commutative Property'>
                ## <d 'Associative Property'>
                  (+ (* (10) (10)) (* (4) (10))) (* (10) (10)) (5) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (+ (* (10) (10)) (* (4) (10))) (* (10) (10))) (5)) (+ (+ (* (10) (10)) (* (4) (10))) (+ (* (10) (10)) (5))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0Add0
                ## </d 'Associative Property'>
                ## <d 'Associative Property'>
                  (+ (+ (* (10) (10)) (* (4) (10))) (* (10) (10))) (5) (* (6) (10)) addass
                  EqReplaceEq1Add0
                ## </d 'Associative Property'>
                ## <d 'Commutative Property'>
                  (5) (* (6) (10)) addcom
                  EqReplaceEq1Add0Add1
                ## </d 'Commutative Property'>
                ## <d 'Associative Property'>
                  (+ (+ (* (10) (10)) (* (4) (10))) (* (10) (10))) (* (6) (10)) (5) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (+ (+ (* (10) (10)) (* (4) (10))) (* (10) (10))) (* (6) (10))) (5)) (+ (+ (+ (* (10) (10)) (* (4) (10))) (* (10) (10))) (+ (* (6) (10)) (5))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0
                ## </d 'Associative Property'>
                ## <d 'Associative Property'>
                  (* (10) (10)) (* (4) (10)) (* (10) (10)) addass
                  EqReplaceEq1Add0Add0Add0
                ## </d 'Associative Property'>
                ## <d 'Commutative Property'>
                  (* (4) (10)) (* (10) (10)) addcom
                  EqReplaceEq1Add0Add0Add0Add1
                ## </d 'Commutative Property'>
                ## <d 'Associative Property'>
                  (* (10) (10)) (* (10) (10)) (* (4) (10)) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (* (10) (10)) (* (10) (10))) (* (4) (10))) (+ (* (10) (10)) (+ (* (10) (10)) (* (4) (10)))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0Add0Add0
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Reorder Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (+ (+ (+ (* (10) (10)) (* (10) (10))) (* (4) (10))) (* (6) (10))) (5) (1) addass
                ## </d 'Associative Property'>
                ## <d 'Associative Property'>
                  (+ (* (10) (10)) (* (10) (10))) (* (4) (10)) (* (6) (10)) addass
                  EqReplaceEq1Add0
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (* (10) (10)) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (* (10) (10))) (* (10) (10)) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    (* (10) (10)) addeq1i
                  ## </d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (* (10) (10)) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (* (10) (10))) (* (10) (10)) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    EqReplaceEq1Add1
                  ## </d 'Multiply By One'>
                  (+ (* (4) (10)) (* (6) (10))) addeq1i
                ## </d 'Multiply By One'>
                (+ (5) (1)) addeq1i
              ## </d 'Multiply By One'>
              EqReplaceEq1
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (1) (1) (* (10) (10)) distl
              ## <d 'Commutative Property'>
                (* (+ (1) (1)) (* (10) (10))) (+ (* (1) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0Add0
            ## </d 'Distributive Property'>
            ## <d 'Distributive Property'>
              (4) (6) (10) distl
              ## <d 'Commutative Property'>
                (* (+ (4) (6)) (10)) (+ (* (4) (10)) (* (6) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0Add1
            ## </d 'Distributive Property'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            5plus1
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
          ## <d 'Single-digit Addition'>
            4plus6
            EqReplaceEq1Add0Add1Mul0
          ## </d 'Single-digit Addition'>
          ## <d 'Carry the One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (* (10) (10)) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (* (10) (10))) (* (10) (10)) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (* (+ (1) (1)) (* (10) (10))) addeq2i
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (+ (1) (1)) (1) (* (10) (10)) distl
              ## <d 'Commutative Property'>
                (* (+ (+ (1) (1)) (1)) (* (10) (10))) (+ (* (+ (1) (1)) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1
            ## </d 'Distributive Property'>
            EqReplaceEq1Add0
          ## </d 'Carry the One'>
          ## <d 'Single-digit Addition'>
            ## <d 'Evaluate'>
              1plus1
              (1) addeq1i
            ## </d 'Evaluate'>
            ## <d 'Evaluate'>
              2plus1
              EqReplaceEq1
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Mul0
          ## </d 'Single-digit Addition'>
        ## </d 'Addition'>
      ## </d 'Evaluate'>
      minusValue3i
      EqReplaceEq1Div0
    ## </d 'Simplify Numerator'>
  ## </d 'Evaluate'>
)

## <summary> This is used just for convenience to get an empty theorem. </summary>
thm (emptyThm () () (T)
 tru
)
