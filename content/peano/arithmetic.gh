# Arithmetic tables

import (PROP       /peano/prop.ghi () "")
import (PEANO_MIN  /peano/peano_min.ghi (PROP) "")
import (PEANO      /peano/peano_ax.ghi (PROP PEANO_MIN) "")
import (NAIVE_SET  /peano/naive_set.ghi (PROP PEANO_MIN PEANO) "")
import (PEANO_THMS /peano/peano_thms.ghi (PROP PEANO_MIN PEANO NAIVE_SET) "")

tvar (wff ph ps ch th ta)
tvar (nat A B C D A' B' C' D' A0 A1 A2 A3)
var (nat v w x y z v' w' x' y' z')
tvar (set S T U V S0 S1 S2 S3 S4 S5 S6 S7 S8 S9)

## <context>
##    This theorem is part of a series of theorems that perform arithmetic calculations.
##    We are in the process of reorganizing the theorems and grouping them into
##    smaller files that concern one specific topic. Many, but not all of the theorems
##    in this file have been moved to peano_new/arithmetic/common/calculations/naturals.gh.
## </context>

# == Addition Tables ==

## <title> Substitution </title>
## <table>
##   (=  [ A ]   ]   ]  C)
##   (=  [ A ]   [ B ] )
##   (=  [   [   [ B ]  C)
## </table>
thm (EqReplaceEq0 () (
     replacee (= A C)
     substitution (= A B)) 
     (= B C)
  replacee substitution
  C eqeq1i
  mpbi
)

#----  Automatically generated with GH.ProofGenerator.evaluator.batchEvaluation('+', [1, 10], [1, 10]);

## <title> One-digit Addition </title>
thm (1plus1 () () (= (+ (1) (1)) (2))
  df-2
  ## <d 'Commutative Property'>
    (2) (+ (1) (1)) eqcom
    mpbi
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (2plus1 () () (= (+ (2) (1)) (3))
  df-3
  ## <d 'Commutative Property'>
    (3) (+ (2) (1)) eqcom
    mpbi
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (3plus1 () () (= (+ (3) (1)) (4))
  df-4
  ## <d 'Commutative Property'>
    (4) (+ (3) (1)) eqcom
    mpbi
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (4plus1 () () (= (+ (4) (1)) (5))
  df-5
  ## <d 'Commutative Property'>
    (5) (+ (4) (1)) eqcom
    mpbi
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (5plus1 () () (= (+ (5) (1)) (6))
  df-6
  ## <d 'Commutative Property'>
    (6) (+ (5) (1)) eqcom
    mpbi
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (6plus1 () () (= (+ (6) (1)) (7))
  df-7
  ## <d 'Commutative Property'>
    (7) (+ (6) (1)) eqcom
    mpbi
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (7plus1 () () (= (+ (7) (1)) (8))
  df-8
  ## <d 'Commutative Property'>
    (8) (+ (7) (1)) eqcom
    mpbi
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (8plus1 () () (= (+ (8) (1)) (9))
  df-9
  ## <d 'Commutative Property'>
    (9) (+ (8) (1)) eqcom
    mpbi
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (9plus1 () () (= (+ (9) (1)) (10))
  df-10
  ## <d 'Commutative Property'>
    (10) (+ (9) (1)) eqcom
    mpbi
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (1plus2 () () (= (+ (1) (2)) (3))
  df-3
  ## <d 'Commutative Property'>
    (2) (1) addcom
    eqtr
  ## </d 'Commutative Property'>
  ## <d 'Commutative Property'>
    (3) (+ (1) (2)) eqcom
    mpbi
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (1plus3 () () (= (+ (1) (3)) (4))
  df-4
  ## <d 'Commutative Property'>
    (3) (1) addcom
    eqtr
  ## </d 'Commutative Property'>
  ## <d 'Commutative Property'>
    (4) (+ (1) (3)) eqcom
    mpbi
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (1plus4 () () (= (+ (1) (4)) (5))
  df-5
  ## <d 'Commutative Property'>
    (4) (1) addcom
    eqtr
  ## </d 'Commutative Property'>
  ## <d 'Commutative Property'>
    (5) (+ (1) (4)) eqcom
    mpbi
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (1plus5 () () (= (+ (1) (5)) (6))
  df-6
  ## <d 'Commutative Property'>
    (5) (1) addcom
    eqtr
  ## </d 'Commutative Property'>
  ## <d 'Commutative Property'>
    (6) (+ (1) (5)) eqcom
    mpbi
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (1plus6 () () (= (+ (1) (6)) (7))
  df-7
  ## <d 'Commutative Property'>
    (6) (1) addcom
    eqtr
  ## </d 'Commutative Property'>
  ## <d 'Commutative Property'>
    (7) (+ (1) (6)) eqcom
    mpbi
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (1plus7 () () (= (+ (1) (7)) (8))
  df-8
  ## <d 'Commutative Property'>
    (7) (1) addcom
    eqtr
  ## </d 'Commutative Property'>
  ## <d 'Commutative Property'>
    (8) (+ (1) (7)) eqcom
    mpbi
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (1plus8 () () (= (+ (1) (8)) (9))
  df-9
  ## <d 'Commutative Property'>
    (8) (1) addcom
    eqtr
  ## </d 'Commutative Property'>
  ## <d 'Commutative Property'>
    (9) (+ (1) (8)) eqcom
    mpbi
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (1plus9 () () (= (+ (1) (9)) (10))
  df-10
  ## <d 'Commutative Property'>
    (9) (1) addcom
    eqtr
  ## </d 'Commutative Property'>
  ## <d 'Commutative Property'>
    (10) (+ (1) (9)) eqcom
    mpbi
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (1plus10 () () (= (+ (1) (10)) (+ (10) (1)) )
  ## <d 'Commutative Property'>
    (1) (10) addcom
  ## </d 'Commutative Property'>
)

## <title> Substitution </title>
## <table>
##   (= A (+ B  [ C ]   ]   ] ))
##   (=         [ C ]   [ D ] )
##   (= A (+ B  [   [   [ D ] ))
## </table>
thm (EqReplaceEq1Add1 () (
     replacee (= A (+ B C))
     substitution (= C D)) 
     (= A (+ B D))
  replacee
  substitution
B addeq2i
A eqeq2i
mpbi
)


## <title> One-digit Addition </title>
thm (2plus2 () () (= (+ (2) (2)) (4))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-2
      (2) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (2) addass
        eqtr
      ## </d 'Associative Property'>
      ## <d 'Definition of 3'>
        1plus2
          EqReplaceEq1Add1
      ## </d 'Definition of 3'>
    ## </d 'Increment Right'>
    ## <d 'Definition of 4'>
      1plus3
      EqReplaceEq1
    ## </d 'Definition of 4'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (2plus3 () () (= (+ (2) (3)) (5))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-2
      (3) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (3) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 4'>
        1plus3
        EqReplaceEq1Add1
      ## </d 'Definition of 4'>
    ## </d 'Increment Right'>
    ## <d 'Definition of 5'>
      1plus4
      EqReplaceEq1
    ## </d 'Definition of 5'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (2plus4 () () (= (+ (2) (4)) (6))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-2
      (4) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (4) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 5'>
        1plus4
        EqReplaceEq1Add1
      ## </d 'Definition of 5'>
    ## </d 'Increment Right'>
    ## <d 'Definition of 6'>
      1plus5
      EqReplaceEq1
    ## </d 'Definition of 6'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (2plus5 () () (= (+ (2) (5)) (7))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-2
      (5) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (5) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 6'>
        1plus5
        EqReplaceEq1Add1
      ## </d 'Definition of 6'>
    ## </d 'Increment Right'>
    ## <d 'Definition of 7'>
      1plus6
      EqReplaceEq1
    ## </d 'Definition of 7'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (2plus6 () () (= (+ (2) (6)) (8))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-2
      (6) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (6) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 7'>
        1plus6
        EqReplaceEq1Add1
      ## </d 'Definition of 7'>
    ## </d 'Increment Right'>
    ## <d 'Definition of 8'>
      1plus7
      EqReplaceEq1
    ## </d 'Definition of 8'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (2plus7 () () (= (+ (2) (7)) (9))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-2
      (7) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (7) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        1plus7
        EqReplaceEq1Add1
      ## </d 'Definition of 8'>
    ## </d 'Increment Right'>
    ## <d 'Definition of 9'>
      1plus8
      EqReplaceEq1
    ## </d 'Definition of 9'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (2plus8 () () (= (+ (2) (8)) (10))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-2
      (8) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (8) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        1plus8
        EqReplaceEq1Add1
      ## </d 'Definition of 9'>
    ## </d 'Increment Right'>
    ## <d 'Definition of 10'>
      1plus9
      EqReplaceEq1
    ## </d 'Definition of 10'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (2plus9 () () (= (+ (2) (9)) (+ (10) (1)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-2
      (9) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (1) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (2plus10 () () (= (+ (2) (10)) (+ (10) (2)) )
  ## <d 'Commutative Property'>
    (2) (10) addcom
  ## </d 'Commutative Property'>
)

## <title> Substitution </title>
## <table>
##   (= A (+  [ B ]   ]   ]  D))
##   (=       [ B ]   [ C ] )
##   (= A (+  [   [   [ C ]  D))
## </table>
thm (EqReplaceEq1Add0 () (
     replacee (= A (+ B D))
     substitution (= B C)) 
     (= A (+ C D))
  replacee
  substitution
D addeq1i
A eqeq2i
mpbi
)


## <title> One-digit Addition </title>
thm (3plus2 () () (= (+ (3) (2)) (5))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-2
      (3) addeq2i
      ## <d 'Associative Property'>
        (3) (1) (1) addass
        ## <d 'Commutative Property'>
          (+ (+ (3) (1)) (1)) (+ (3) (+ (1) (1))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 4'>
        df-4
        ## <d 'Commutative Property'>
          (4) (+ (3) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
          EqReplaceEq1Add0
      ## </d 'Definition of 4'>
    ## </d 'Increment Left'>
    ## <d 'Definition of 5'>
      df-5
      ## <d 'Commutative Property'>
        (5) (+ (4) (1)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      EqReplaceEq1
    ## </d 'Definition of 5'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (3plus3 () () (= (+ (3) (3)) (6))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-3
      (3) addeq1i
      ## <d 'Associative Property'>
        (2) (1) (3) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 4'>
        1plus3
        EqReplaceEq1Add1
      ## </d 'Definition of 4'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-2
      (4) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (4) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 5'>
        1plus4
        EqReplaceEq1Add1
      ## </d 'Definition of 5'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Definition of 6'>
      1plus5
      EqReplaceEq1
    ## </d 'Definition of 6'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (3plus4 () () (= (+ (3) (4)) (7))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-3
      (4) addeq1i
      ## <d 'Associative Property'>
        (2) (1) (4) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 5'>
        1plus4
        EqReplaceEq1Add1
      ## </d 'Definition of 5'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-2
      (5) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (5) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 6'>
        1plus5
        EqReplaceEq1Add1
      ## </d 'Definition of 6'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Definition of 7'>
      1plus6
      EqReplaceEq1
    ## </d 'Definition of 7'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (3plus5 () () (= (+ (3) (5)) (8))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-3
      (5) addeq1i
      ## <d 'Associative Property'>
        (2) (1) (5) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 6'>
        1plus5
        EqReplaceEq1Add1
      ## </d 'Definition of 6'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-2
      (6) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (6) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 7'>
        1plus6
        EqReplaceEq1Add1
      ## </d 'Definition of 7'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Definition of 8'>
      1plus7
      EqReplaceEq1
    ## </d 'Definition of 8'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (3plus6 () () (= (+ (3) (6)) (9))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-3
      (6) addeq1i
      ## <d 'Associative Property'>
        (2) (1) (6) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 7'>
        1plus6
        EqReplaceEq1Add1
      ## </d 'Definition of 7'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-2
      (7) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (7) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        1plus7
        EqReplaceEq1Add1
      ## </d 'Definition of 8'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Definition of 9'>
      1plus8
      EqReplaceEq1
    ## </d 'Definition of 9'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (3plus7 () () (= (+ (3) (7)) (10))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-3
      (7) addeq1i
      ## <d 'Associative Property'>
        (2) (1) (7) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        1plus7
        EqReplaceEq1Add1
      ## </d 'Definition of 8'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-2
      (8) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (8) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        1plus8
        EqReplaceEq1Add1
      ## </d 'Definition of 9'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Definition of 10'>
      1plus9
      EqReplaceEq1
    ## </d 'Definition of 10'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (3plus8 () () (= (+ (3) (8)) (+ (10) (1)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-3
      (8) addeq1i
      ## <d 'Associative Property'>
        (2) (1) (8) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        1plus8
        EqReplaceEq1Add1
      ## </d 'Definition of 9'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-2
      (9) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (1) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (3plus9 () () (= (+ (3) (9)) (+ (10) (2)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-3
      (9) addeq1i
      ## <d 'Associative Property'>
        (2) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (2) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (3plus10 () () (= (+ (3) (10)) (+ (10) (3)) )
  ## <d 'Commutative Property'>
    (3) (10) addcom
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (4plus2 () () (= (+ (4) (2)) (6))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-2
      (4) addeq2i
      ## <d 'Associative Property'>
        (4) (1) (1) addass
        ## <d 'Commutative Property'>
          (+ (+ (4) (1)) (1)) (+ (4) (+ (1) (1))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 5'>
        df-5
        ## <d 'Commutative Property'>
          (5) (+ (4) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 5'>
    ## </d 'Increment Left'>
    ## <d 'Definition of 6'>
      df-6
      ## <d 'Commutative Property'>
        (6) (+ (5) (1)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      EqReplaceEq1
    ## </d 'Definition of 6'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (4plus3 () () (= (+ (4) (3)) (7))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-3
      ## <d 'Commutative Property'>
        (2) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (4) addeq2i
      ## <d 'Associative Property'>
        (4) (1) (2) addass
        ## <d 'Commutative Property'>
          (+ (+ (4) (1)) (2)) (+ (4) (+ (1) (2))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 5'>
        df-5
        ## <d 'Commutative Property'>
          (5) (+ (4) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 5'>
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-2
      (5) addeq2i
      ## <d 'Associative Property'>
        (5) (1) (1) addass
        ## <d 'Commutative Property'>
          (+ (+ (5) (1)) (1)) (+ (5) (+ (1) (1))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 6'>
        df-6
        ## <d 'Commutative Property'>
          (6) (+ (5) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 6'>
      EqReplaceEq1
    ## </d 'Increment Left'>
    ## <d 'Definition of 7'>
      df-7
      ## <d 'Commutative Property'>
        (7) (+ (6) (1)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      EqReplaceEq1
    ## </d 'Definition of 7'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (4plus4 () () (= (+ (4) (4)) (8))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-4
      (4) addeq1i
      ## <d 'Associative Property'>
        (3) (1) (4) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 5'>
        1plus4
        EqReplaceEq1Add1
      ## </d 'Definition of 5'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-3
      (5) addeq1i
      ## <d 'Associative Property'>
        (2) (1) (5) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 6'>
        1plus5
        EqReplaceEq1Add1
      ## </d 'Definition of 6'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-2
      (6) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (6) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 7'>
        1plus6
        EqReplaceEq1Add1
      ## </d 'Definition of 7'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Definition of 8'>
      1plus7
      EqReplaceEq1
    ## </d 'Definition of 8'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition 4+5=9 </title>
## <summary>
##   This theorem proves that 4 + 5 = 9. To prove such a basic fact, we must directly use
##   the definitions of the numbers. The number 2 is defined as 2 = 1 + 1, 3 = 2 + 1,
##   4 = 3 + 1, and so on. The theorem uses these definitions along with the
##   <a href="/edit/peano/peano_thms.gh/addass">associate property</a> to prove 4 + 5 = 9.
## </summary>
thm (4plus5 () () (= (+ (4) (5)) (9))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      ## <d 'Expand 4 as 3 + 1'>
        df-4
        ## <d 'Add 5 to both sides'>
          (5) addeq1i
        ## </d 'Add 5 to both sides'>
      ## </d 'Expand 4 as 3 + 1'>
      ## <d 'Associative Property'>
        (3) (1) (5) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 6'>
        ## <d 'Definition of 6'>
          1plus5
        ## </d 'Definition of 6'>
        EqReplaceEq1Add1
      ## </d 'Definition of 6'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      ## <d 'Increment Right'>
        ## <d 'Expand 3 as 2 + 1'>
          df-3
          ## <d 'Add 6 to both sides'>
            (6) addeq1i
          ## </d 'Add 6 to both sides'>
        ## </d 'Expand 3 as 2 + 1'>
        ## <d 'Associative Property'>
          (2) (1) (6) addass
          EqReplaceEq1
        ## </d 'Associative Property'>
        ## <d 'Definition of 7'>
          ## <d 'Definition of 7'>
            1plus6
          ## </d 'Definition of 7'>
          EqReplaceEq1Add1
        ## </d 'Definition of 7'>
      ## </d 'Increment Right'>
        EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      ## <d 'Increment Right'>
        ## <d 'Expand 2 as 1 + 1'>
          df-2
          ## <d 'Add 7 to both sides'>
            (7) addeq1i
          ## </d 'Add 7 to both sides'>
        ## </d 'Expand 2 as 1 + 1'>
        ## <d 'Associative Property'>
          (1) (1) (7) addass
          EqReplaceEq1
        ## </d 'Associative Property'>
        ## <d 'Definition of 8'>
          ## <d 'Definition of 8'>
            1plus7
          ## </d 'Definition of 8'>
          EqReplaceEq1Add1
        ## </d 'Definition of 8'>
      ## </d 'Increment Right'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Definition of 9'>
      ## <d 'Definition of 9'>
        1plus8
      ## </d 'Definition of 9'>
      EqReplaceEq1
    ## </d 'Definition of 9'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (4plus6 () () (= (+ (4) (6)) (10))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-4
      (6) addeq1i
      ## <d 'Associative Property'>
        (3) (1) (6) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 7'>
        1plus6
        EqReplaceEq1Add1
      ## </d 'Definition of 7'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-3
      (7) addeq1i
      ## <d 'Associative Property'>
        (2) (1) (7) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        1plus7
        EqReplaceEq1Add1
      ## </d 'Definition of 8'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-2
      (8) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (8) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        1plus8
        EqReplaceEq1Add1
      ## </d 'Definition of 9'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Definition of 10'>
      1plus9
      EqReplaceEq1
    ## </d 'Definition of 10'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (4plus7 () () (= (+ (4) (7)) (+ (10) (1)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-4
      (7) addeq1i
      ## <d 'Associative Property'>
        (3) (1) (7) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        1plus7
        EqReplaceEq1Add1
      ## </d 'Definition of 8'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-3
      (8) addeq1i
      ## <d 'Associative Property'>
        (2) (1) (8) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        1plus8
        EqReplaceEq1Add1
      ## </d 'Definition of 9'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-2
      (9) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (1) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (4plus8 () () (= (+ (4) (8)) (+ (10) (2)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-4
      (8) addeq1i
      ## <d 'Associative Property'>
        (3) (1) (8) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        1plus8
        EqReplaceEq1Add1
      ## </d 'Definition of 9'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-3
      (9) addeq1i
      ## <d 'Associative Property'>
        (2) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (2) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (4plus9 () () (= (+ (4) (9)) (+ (10) (3)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-4
      (9) addeq1i
      ## <d 'Associative Property'>
        (3) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (3) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (4plus10 () () (= (+ (4) (10)) (+ (10) (4)) )
  ## <d 'Commutative Property'>
    (4) (10) addcom
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (5plus2 () () (= (+ (5) (2)) (7))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-2
      (5) addeq2i
      ## <d 'Associative Property'>
        (5) (1) (1) addass
        ## <d 'Commutative Property'>
          (+ (+ (5) (1)) (1)) (+ (5) (+ (1) (1))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 6'>
        df-6
        ## <d 'Commutative Property'>
          (6) (+ (5) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 6'>
    ## </d 'Increment Left'>
    ## <d 'Definition of 7'>
      df-7
      ## <d 'Commutative Property'>
        (7) (+ (6) (1)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      EqReplaceEq1
    ## </d 'Definition of 7'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (5plus3 () () (= (+ (5) (3)) (8))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-3
      ## <d 'Commutative Property'>
        (2) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (5) addeq2i
      ## <d 'Associative Property'>
        (5) (1) (2) addass
        ## <d 'Commutative Property'>
          (+ (+ (5) (1)) (2)) (+ (5) (+ (1) (2))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 6'>
        df-6
        ## <d 'Commutative Property'>
          (6) (+ (5) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 6'>
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-2
      (6) addeq2i
      ## <d 'Associative Property'>
        (6) (1) (1) addass
        ## <d 'Commutative Property'>
          (+ (+ (6) (1)) (1)) (+ (6) (+ (1) (1))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 7'>
        df-7
        ## <d 'Commutative Property'>
          (7) (+ (6) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 7'>
      EqReplaceEq1
    ## </d 'Increment Left'>
    ## <d 'Definition of 8'>
      df-8
      ## <d 'Commutative Property'>
        (8) (+ (7) (1)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      EqReplaceEq1
    ## </d 'Definition of 8'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (5plus4 () () (= (+ (5) (4)) (9))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-4
      ## <d 'Commutative Property'>
        (3) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (5) addeq2i
      ## <d 'Associative Property'>
        (5) (1) (3) addass
        ## <d 'Commutative Property'>
          (+ (+ (5) (1)) (3)) (+ (5) (+ (1) (3))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 6'>
        df-6
        ## <d 'Commutative Property'>
          (6) (+ (5) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 6'>
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-3
      ## <d 'Commutative Property'>
        (2) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (6) addeq2i
      ## <d 'Associative Property'>
        (6) (1) (2) addass
        ## <d 'Commutative Property'>
          (+ (+ (6) (1)) (2)) (+ (6) (+ (1) (2))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 7'>
        df-7
        ## <d 'Commutative Property'>
          (7) (+ (6) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 7'>
      EqReplaceEq1
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-2
      (7) addeq2i
      ## <d 'Associative Property'>
        (7) (1) (1) addass
        ## <d 'Commutative Property'>
          (+ (+ (7) (1)) (1)) (+ (7) (+ (1) (1))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        df-8
        ## <d 'Commutative Property'>
          (8) (+ (7) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 8'>
      EqReplaceEq1
    ## </d 'Increment Left'>
    ## <d 'Definition of 9'>
      df-9
      ## <d 'Commutative Property'>
        (9) (+ (8) (1)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      EqReplaceEq1
    ## </d 'Definition of 9'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (5plus5 () () (= (+ (5) (5)) (10))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-5
      (5) addeq1i
      ## <d 'Associative Property'>
        (4) (1) (5) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 6'>
        1plus5
        EqReplaceEq1Add1
      ## </d 'Definition of 6'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-4
      (6) addeq1i
      ## <d 'Associative Property'>
        (3) (1) (6) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 7'>
        1plus6
        EqReplaceEq1Add1
      ## </d 'Definition of 7'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-3
      (7) addeq1i
      ## <d 'Associative Property'>
        (2) (1) (7) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        1plus7
        EqReplaceEq1Add1
      ## </d 'Definition of 8'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-2
      (8) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (8) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        1plus8
        EqReplaceEq1Add1
      ## </d 'Definition of 9'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Definition of 10'>
      1plus9
      EqReplaceEq1
    ## </d 'Definition of 10'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (5plus6 () () (= (+ (5) (6)) (+ (10) (1)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-5
      (6) addeq1i
      ## <d 'Associative Property'>
        (4) (1) (6) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 7'>
        1plus6
        EqReplaceEq1Add1
      ## </d 'Definition of 7'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-4
      (7) addeq1i
      ## <d 'Associative Property'>
        (3) (1) (7) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        1plus7
        EqReplaceEq1Add1
      ## </d 'Definition of 8'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-3
      (8) addeq1i
      ## <d 'Associative Property'>
        (2) (1) (8) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        1plus8
        EqReplaceEq1Add1
      ## </d 'Definition of 9'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-2
      (9) addeq1i
      ## <d 'Associative Property'>
        (1) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (1) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (5plus7 () () (= (+ (5) (7)) (+ (10) (2)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-5
      (7) addeq1i
      ## <d 'Associative Property'>
        (4) (1) (7) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        1plus7
        EqReplaceEq1Add1
      ## </d 'Definition of 8'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-4
      (8) addeq1i
      ## <d 'Associative Property'>
        (3) (1) (8) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        1plus8
        EqReplaceEq1Add1
      ## </d 'Definition of 9'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-3
      (9) addeq1i
      ## <d 'Associative Property'>
        (2) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (2) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (5plus8 () () (= (+ (5) (8)) (+ (10) (3)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-5
      (8) addeq1i
      ## <d 'Associative Property'>
        (4) (1) (8) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        1plus8
        EqReplaceEq1Add1
      ## </d 'Definition of 9'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-4
      (9) addeq1i
      ## <d 'Associative Property'>
        (3) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (3) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (5plus9 () () (= (+ (5) (9)) (+ (10) (4)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-5
      (9) addeq1i
      ## <d 'Associative Property'>
        (4) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (4) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (5plus10 () () (= (+ (5) (10)) (+ (10) (5)) )
  ## <d 'Commutative Property'>
    (5) (10) addcom
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (6plus2 () () (= (+ (6) (2)) (8))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-2
      (6) addeq2i
      ## <d 'Associative Property'>
        (6) (1) (1) addass
        ## <d 'Commutative Property'>
          (+ (+ (6) (1)) (1)) (+ (6) (+ (1) (1))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 7'>
        df-7
        ## <d 'Commutative Property'>
          (7) (+ (6) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 7'>
    ## </d 'Increment Left'>
    ## <d 'Definition of 8'>
      df-8
      ## <d 'Commutative Property'>
        (8) (+ (7) (1)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      EqReplaceEq1
    ## </d 'Definition of 8'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (6plus3 () () (= (+ (6) (3)) (9))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-3
      ## <d 'Commutative Property'>
        (2) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (6) addeq2i
      ## <d 'Associative Property'>
        (6) (1) (2) addass
        ## <d 'Commutative Property'>
          (+ (+ (6) (1)) (2)) (+ (6) (+ (1) (2))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 7'>
        df-7
        ## <d 'Commutative Property'>
          (7) (+ (6) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 7'>
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-2
      (7) addeq2i
      ## <d 'Associative Property'>
        (7) (1) (1) addass
        ## <d 'Commutative Property'>
          (+ (+ (7) (1)) (1)) (+ (7) (+ (1) (1))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        df-8
        ## <d 'Commutative Property'>
          (8) (+ (7) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 8'>
      EqReplaceEq1
    ## </d 'Increment Left'>
    ## <d 'Definition of 9'>
      df-9
      ## <d 'Commutative Property'>
        (9) (+ (8) (1)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      EqReplaceEq1
    ## </d 'Definition of 9'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (6plus4 () () (= (+ (6) (4)) (10))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-4
      ## <d 'Commutative Property'>
        (3) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (6) addeq2i
      ## <d 'Associative Property'>
        (6) (1) (3) addass
        ## <d 'Commutative Property'>
          (+ (+ (6) (1)) (3)) (+ (6) (+ (1) (3))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 7'>
        df-7
        ## <d 'Commutative Property'>
          (7) (+ (6) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 7'>
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-3
      ## <d 'Commutative Property'>
        (2) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (7) addeq2i
      ## <d 'Associative Property'>
        (7) (1) (2) addass
        ## <d 'Commutative Property'>
          (+ (+ (7) (1)) (2)) (+ (7) (+ (1) (2))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        df-8
        ## <d 'Commutative Property'>
          (8) (+ (7) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 8'>
      EqReplaceEq1
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-2
      (8) addeq2i
      ## <d 'Associative Property'>
        (8) (1) (1) addass
        ## <d 'Commutative Property'>
          (+ (+ (8) (1)) (1)) (+ (8) (+ (1) (1))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        df-9
        ## <d 'Commutative Property'>
          (9) (+ (8) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 9'>
      EqReplaceEq1
    ## </d 'Increment Left'>
    ## <d 'Definition of 10'>
      df-10
      ## <d 'Commutative Property'>
        (10) (+ (9) (1)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      EqReplaceEq1
    ## </d 'Definition of 10'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (6plus5 () () (= (+ (6) (5)) (+ (10) (1)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-5
      ## <d 'Commutative Property'>
        (4) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (6) addeq2i
      ## <d 'Associative Property'>
        (6) (1) (4) addass
        ## <d 'Commutative Property'>
          (+ (+ (6) (1)) (4)) (+ (6) (+ (1) (4))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 7'>
        df-7
        ## <d 'Commutative Property'>
          (7) (+ (6) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 7'>
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-4
      ## <d 'Commutative Property'>
        (3) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (7) addeq2i
      ## <d 'Associative Property'>
        (7) (1) (3) addass
        ## <d 'Commutative Property'>
          (+ (+ (7) (1)) (3)) (+ (7) (+ (1) (3))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        df-8
        ## <d 'Commutative Property'>
          (8) (+ (7) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 8'>
      EqReplaceEq1
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-3
      ## <d 'Commutative Property'>
        (2) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (8) addeq2i
      ## <d 'Associative Property'>
        (8) (1) (2) addass
        ## <d 'Commutative Property'>
          (+ (+ (8) (1)) (2)) (+ (8) (+ (1) (2))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        df-9
        ## <d 'Commutative Property'>
          (9) (+ (8) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 9'>
      EqReplaceEq1
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-2
      (9) addeq2i
      ## <d 'Associative Property'>
        (9) (1) (1) addass
        ## <d 'Commutative Property'>
          (+ (+ (9) (1)) (1)) (+ (9) (+ (1) (1))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        df-10
        ## <d 'Commutative Property'>
          (10) (+ (9) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Left'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (6plus6 () () (= (+ (6) (6)) (+ (10) (2)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-6
      (6) addeq1i
      ## <d 'Associative Property'>
        (5) (1) (6) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 7'>
        1plus6
        EqReplaceEq1Add1
      ## </d 'Definition of 7'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-5
      (7) addeq1i
      ## <d 'Associative Property'>
        (4) (1) (7) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        1plus7
        EqReplaceEq1Add1
      ## </d 'Definition of 8'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-4
      (8) addeq1i
      ## <d 'Associative Property'>
        (3) (1) (8) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        1plus8
        EqReplaceEq1Add1
      ## </d 'Definition of 9'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-3
      (9) addeq1i
      ## <d 'Associative Property'>
        (2) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (2) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (6plus7 () () (= (+ (6) (7)) (+ (10) (3)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-6
      (7) addeq1i
      ## <d 'Associative Property'>
        (5) (1) (7) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        1plus7
        EqReplaceEq1Add1
      ## </d 'Definition of 8'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-5
      (8) addeq1i
      ## <d 'Associative Property'>
        (4) (1) (8) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        1plus8
        EqReplaceEq1Add1
      ## </d 'Definition of 9'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-4
      (9) addeq1i
      ## <d 'Associative Property'>
        (3) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (3) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (6plus8 () () (= (+ (6) (8)) (+ (10) (4)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-6
      (8) addeq1i
      ## <d 'Associative Property'>
        (5) (1) (8) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        1plus8
        EqReplaceEq1Add1
      ## </d 'Definition of 9'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-5
      (9) addeq1i
      ## <d 'Associative Property'>
        (4) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (4) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (6plus9 () () (= (+ (6) (9)) (+ (10) (5)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-6
      (9) addeq1i
      ## <d 'Associative Property'>
        (5) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (5) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (6plus10 () () (= (+ (6) (10)) (+ (10) (6)) )
  ## <d 'Commutative Property'>
    (6) (10) addcom
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (7plus2 () () (= (+ (7) (2)) (9))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-2
      (7) addeq2i
      ## <d 'Associative Property'>
        (7) (1) (1) addass
        ## <d 'Commutative Property'>
          (+ (+ (7) (1)) (1)) (+ (7) (+ (1) (1))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        df-8
        ## <d 'Commutative Property'>
          (8) (+ (7) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 8'>
    ## </d 'Increment Left'>
    ## <d 'Definition of 9'>
      df-9
      ## <d 'Commutative Property'>
        (9) (+ (8) (1)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      EqReplaceEq1
    ## </d 'Definition of 9'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (7plus3 () () (= (+ (7) (3)) (10))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-3
      ## <d 'Commutative Property'>
        (2) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (7) addeq2i
      ## <d 'Associative Property'>
        (7) (1) (2) addass
        ## <d 'Commutative Property'>
          (+ (+ (7) (1)) (2)) (+ (7) (+ (1) (2))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        df-8
        ## <d 'Commutative Property'>
          (8) (+ (7) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 8'>
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-2
      (8) addeq2i
      ## <d 'Associative Property'>
        (8) (1) (1) addass
        ## <d 'Commutative Property'>
          (+ (+ (8) (1)) (1)) (+ (8) (+ (1) (1))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        df-9
        ## <d 'Commutative Property'>
          (9) (+ (8) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 9'>
      EqReplaceEq1
    ## </d 'Increment Left'>
    ## <d 'Definition of 10'>
      df-10
      ## <d 'Commutative Property'>
        (10) (+ (9) (1)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      EqReplaceEq1
    ## </d 'Definition of 10'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (7plus4 () () (= (+ (7) (4)) (+ (10) (1)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-4
      ## <d 'Commutative Property'>
        (3) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (7) addeq2i
      ## <d 'Associative Property'>
        (7) (1) (3) addass
        ## <d 'Commutative Property'>
          (+ (+ (7) (1)) (3)) (+ (7) (+ (1) (3))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        df-8
        ## <d 'Commutative Property'>
          (8) (+ (7) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 8'>
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-3
      ## <d 'Commutative Property'>
        (2) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (8) addeq2i
      ## <d 'Associative Property'>
        (8) (1) (2) addass
        ## <d 'Commutative Property'>
          (+ (+ (8) (1)) (2)) (+ (8) (+ (1) (2))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        df-9
        ## <d 'Commutative Property'>
          (9) (+ (8) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 9'>
      EqReplaceEq1
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-2
      (9) addeq2i
      ## <d 'Associative Property'>
        (9) (1) (1) addass
        ## <d 'Commutative Property'>
          (+ (+ (9) (1)) (1)) (+ (9) (+ (1) (1))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        df-10
        ## <d 'Commutative Property'>
          (10) (+ (9) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Left'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (7plus5 () () (= (+ (7) (5)) (+ (10) (2)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-5
      ## <d 'Commutative Property'>
        (4) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (7) addeq2i
      ## <d 'Associative Property'>
        (7) (1) (4) addass
        ## <d 'Commutative Property'>
          (+ (+ (7) (1)) (4)) (+ (7) (+ (1) (4))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        df-8
        ## <d 'Commutative Property'>
          (8) (+ (7) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 8'>
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-4
      ## <d 'Commutative Property'>
        (3) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (8) addeq2i
      ## <d 'Associative Property'>
        (8) (1) (3) addass
        ## <d 'Commutative Property'>
          (+ (+ (8) (1)) (3)) (+ (8) (+ (1) (3))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        df-9
        ## <d 'Commutative Property'>
          (9) (+ (8) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 9'>
      EqReplaceEq1
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-3
      ## <d 'Commutative Property'>
        (2) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (9) addeq2i
      ## <d 'Associative Property'>
        (9) (1) (2) addass
        ## <d 'Commutative Property'>
          (+ (+ (9) (1)) (2)) (+ (9) (+ (1) (2))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        df-10
        ## <d 'Commutative Property'>
          (10) (+ (9) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Left'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (7plus6 () () (= (+ (7) (6)) (+ (10) (3)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-6
      ## <d 'Commutative Property'>
        (5) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (7) addeq2i
      ## <d 'Associative Property'>
        (7) (1) (5) addass
        ## <d 'Commutative Property'>
          (+ (+ (7) (1)) (5)) (+ (7) (+ (1) (5))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        df-8
        ## <d 'Commutative Property'>
          (8) (+ (7) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 8'>
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-5
      ## <d 'Commutative Property'>
        (4) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (8) addeq2i
      ## <d 'Associative Property'>
        (8) (1) (4) addass
        ## <d 'Commutative Property'>
          (+ (+ (8) (1)) (4)) (+ (8) (+ (1) (4))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        df-9
        ## <d 'Commutative Property'>
          (9) (+ (8) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 9'>
      EqReplaceEq1
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-4
      ## <d 'Commutative Property'>
        (3) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (9) addeq2i
      ## <d 'Associative Property'>
        (9) (1) (3) addass
        ## <d 'Commutative Property'>
          (+ (+ (9) (1)) (3)) (+ (9) (+ (1) (3))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        df-10
        ## <d 'Commutative Property'>
          (10) (+ (9) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Left'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (7plus7 () () (= (+ (7) (7)) (+ (10) (4)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-7
      (7) addeq1i
      ## <d 'Associative Property'>
        (6) (1) (7) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 8'>
        1plus7
        EqReplaceEq1Add1
      ## </d 'Definition of 8'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-6
      (8) addeq1i
      ## <d 'Associative Property'>
        (5) (1) (8) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        1plus8
        EqReplaceEq1Add1
      ## </d 'Definition of 9'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-5
      (9) addeq1i
      ## <d 'Associative Property'>
        (4) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (4) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (7plus8 () () (= (+ (7) (8)) (+ (10) (5)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-7
      (8) addeq1i
      ## <d 'Associative Property'>
        (6) (1) (8) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        1plus8
        EqReplaceEq1Add1
      ## </d 'Definition of 9'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-6
      (9) addeq1i
      ## <d 'Associative Property'>
        (5) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (5) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (7plus9 () () (= (+ (7) (9)) (+ (10) (6)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-7
      (9) addeq1i
      ## <d 'Associative Property'>
        (6) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (6) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (7plus10 () () (= (+ (7) (10)) (+ (10) (7)) )
  ## <d 'Commutative Property'>
    (7) (10) addcom
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (8plus2 () () (= (+ (8) (2)) (10))
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-2
      (8) addeq2i
      ## <d 'Associative Property'>
        (8) (1) (1) addass
        ## <d 'Commutative Property'>
          (+ (+ (8) (1)) (1)) (+ (8) (+ (1) (1))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        df-9
        ## <d 'Commutative Property'>
          (9) (+ (8) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 9'>
    ## </d 'Increment Left'>
    ## <d 'Definition of 10'>
      df-10
      ## <d 'Commutative Property'>
        (10) (+ (9) (1)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      EqReplaceEq1
    ## </d 'Definition of 10'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (8plus3 () () (= (+ (8) (3)) (+ (10) (1)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-3
      ## <d 'Commutative Property'>
        (2) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (8) addeq2i
      ## <d 'Associative Property'>
        (8) (1) (2) addass
        ## <d 'Commutative Property'>
          (+ (+ (8) (1)) (2)) (+ (8) (+ (1) (2))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        df-9
        ## <d 'Commutative Property'>
          (9) (+ (8) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 9'>
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-2
      (9) addeq2i
      ## <d 'Associative Property'>
        (9) (1) (1) addass
        ## <d 'Commutative Property'>
          (+ (+ (9) (1)) (1)) (+ (9) (+ (1) (1))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        df-10
        ## <d 'Commutative Property'>
          (10) (+ (9) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Left'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (8plus4 () () (= (+ (8) (4)) (+ (10) (2)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-4
      ## <d 'Commutative Property'>
        (3) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (8) addeq2i
      ## <d 'Associative Property'>
        (8) (1) (3) addass
        ## <d 'Commutative Property'>
          (+ (+ (8) (1)) (3)) (+ (8) (+ (1) (3))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        df-9
        ## <d 'Commutative Property'>
          (9) (+ (8) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 9'>
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-3
      ## <d 'Commutative Property'>
        (2) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (9) addeq2i
      ## <d 'Associative Property'>
        (9) (1) (2) addass
        ## <d 'Commutative Property'>
          (+ (+ (9) (1)) (2)) (+ (9) (+ (1) (2))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        df-10
        ## <d 'Commutative Property'>
          (10) (+ (9) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Left'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (8plus5 () () (= (+ (8) (5)) (+ (10) (3)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-5
      ## <d 'Commutative Property'>
        (4) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (8) addeq2i
      ## <d 'Associative Property'>
        (8) (1) (4) addass
        ## <d 'Commutative Property'>
          (+ (+ (8) (1)) (4)) (+ (8) (+ (1) (4))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        df-9
        ## <d 'Commutative Property'>
          (9) (+ (8) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 9'>
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-4
      ## <d 'Commutative Property'>
        (3) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (9) addeq2i
      ## <d 'Associative Property'>
        (9) (1) (3) addass
        ## <d 'Commutative Property'>
          (+ (+ (9) (1)) (3)) (+ (9) (+ (1) (3))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        df-10
        ## <d 'Commutative Property'>
          (10) (+ (9) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Left'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (8plus6 () () (= (+ (8) (6)) (+ (10) (4)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-6
      ## <d 'Commutative Property'>
        (5) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (8) addeq2i
      ## <d 'Associative Property'>
        (8) (1) (5) addass
        ## <d 'Commutative Property'>
          (+ (+ (8) (1)) (5)) (+ (8) (+ (1) (5))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        df-9
        ## <d 'Commutative Property'>
          (9) (+ (8) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 9'>
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-5
      ## <d 'Commutative Property'>
        (4) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (9) addeq2i
      ## <d 'Associative Property'>
        (9) (1) (4) addass
        ## <d 'Commutative Property'>
          (+ (+ (9) (1)) (4)) (+ (9) (+ (1) (4))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        df-10
        ## <d 'Commutative Property'>
          (10) (+ (9) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Left'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (8plus7 () () (= (+ (8) (7)) (+ (10) (5)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-7
      ## <d 'Commutative Property'>
        (6) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (8) addeq2i
      ## <d 'Associative Property'>
        (8) (1) (6) addass
        ## <d 'Commutative Property'>
          (+ (+ (8) (1)) (6)) (+ (8) (+ (1) (6))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        df-9
        ## <d 'Commutative Property'>
          (9) (+ (8) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 9'>
    ## </d 'Increment Left'>
    ## <d 'Increment Left'>
      df-6
      ## <d 'Commutative Property'>
        (5) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (9) addeq2i
      ## <d 'Associative Property'>
        (9) (1) (5) addass
        ## <d 'Commutative Property'>
          (+ (+ (9) (1)) (5)) (+ (9) (+ (1) (5))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        df-10
        ## <d 'Commutative Property'>
          (10) (+ (9) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Left'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (8plus8 () () (= (+ (8) (8)) (+ (10) (6)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-8
      (8) addeq1i
      ## <d 'Associative Property'>
        (7) (1) (8) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 9'>
        1plus8
        EqReplaceEq1Add1
      ## </d 'Definition of 9'>
    ## </d 'Increment Right'>
    ## <d 'Increment Right'>
      df-7
      (9) addeq1i
      ## <d 'Associative Property'>
        (6) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
      EqReplaceEq1
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (6) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (8plus9 () () (= (+ (8) (9)) (+ (10) (7)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-8
      (9) addeq1i
      ## <d 'Associative Property'>
        (7) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (7) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (8plus10 () () (= (+ (8) (10)) (+ (10) (8)) )
  ## <d 'Commutative Property'>
    (8) (10) addcom
  ## </d 'Commutative Property'>
)

## <title> One-digit Addition </title>
thm (9plus2 () () (= (+ (9) (2)) (+ (10) (1)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-2
      (9) addeq2i
      ## <d 'Associative Property'>
        (9) (1) (1) addass
        ## <d 'Commutative Property'>
          (+ (+ (9) (1)) (1)) (+ (9) (+ (1) (1))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        df-10
        ## <d 'Commutative Property'>
          (10) (+ (9) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 10'>
    ## </d 'Increment Left'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (9plus3 () () (= (+ (9) (3)) (+ (10) (2)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-3
      ## <d 'Commutative Property'>
        (2) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (9) addeq2i
      ## <d 'Associative Property'>
        (9) (1) (2) addass
        ## <d 'Commutative Property'>
          (+ (+ (9) (1)) (2)) (+ (9) (+ (1) (2))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        df-10
        ## <d 'Commutative Property'>
          (10) (+ (9) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 10'>
    ## </d 'Increment Left'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (9plus4 () () (= (+ (9) (4)) (+ (10) (3)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-4
      ## <d 'Commutative Property'>
        (3) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (9) addeq2i
      ## <d 'Associative Property'>
        (9) (1) (3) addass
        ## <d 'Commutative Property'>
          (+ (+ (9) (1)) (3)) (+ (9) (+ (1) (3))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        df-10
        ## <d 'Commutative Property'>
          (10) (+ (9) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 10'>
    ## </d 'Increment Left'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (9plus5 () () (= (+ (9) (5)) (+ (10) (4)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-5
      ## <d 'Commutative Property'>
        (4) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (9) addeq2i
      ## <d 'Associative Property'>
        (9) (1) (4) addass
        ## <d 'Commutative Property'>
          (+ (+ (9) (1)) (4)) (+ (9) (+ (1) (4))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        df-10
        ## <d 'Commutative Property'>
          (10) (+ (9) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 10'>
    ## </d 'Increment Left'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (9plus6 () () (= (+ (9) (6)) (+ (10) (5)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-6
      ## <d 'Commutative Property'>
        (5) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (9) addeq2i
      ## <d 'Associative Property'>
        (9) (1) (5) addass
        ## <d 'Commutative Property'>
          (+ (+ (9) (1)) (5)) (+ (9) (+ (1) (5))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        df-10
        ## <d 'Commutative Property'>
          (10) (+ (9) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 10'>
    ## </d 'Increment Left'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (9plus7 () () (= (+ (9) (7)) (+ (10) (6)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-7
      ## <d 'Commutative Property'>
        (6) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (9) addeq2i
      ## <d 'Associative Property'>
        (9) (1) (6) addass
        ## <d 'Commutative Property'>
          (+ (+ (9) (1)) (6)) (+ (9) (+ (1) (6))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        df-10
        ## <d 'Commutative Property'>
          (10) (+ (9) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 10'>
    ## </d 'Increment Left'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (9plus8 () () (= (+ (9) (8)) (+ (10) (7)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Left'>
      df-8
      ## <d 'Commutative Property'>
        (7) (1) addcom
        EqReplaceEq1
      ## </d 'Commutative Property'>
      (9) addeq2i
      ## <d 'Associative Property'>
        (9) (1) (7) addass
        ## <d 'Commutative Property'>
          (+ (+ (9) (1)) (7)) (+ (9) (+ (1) (7))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        df-10
        ## <d 'Commutative Property'>
          (10) (+ (9) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1Add0
      ## </d 'Definition of 10'>
    ## </d 'Increment Left'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (9plus9 () () (= (+ (9) (9)) (+ (10) (8)) )
  ## <d 'One-digit Addition'>
    ## <d 'Increment Right'>
      df-9
      (9) addeq1i
      ## <d 'Associative Property'>
        (8) (1) (9) addass
        EqReplaceEq1
      ## </d 'Associative Property'>
      ## <d 'Definition of 10'>
        1plus9
        EqReplaceEq1Add1
      ## </d 'Definition of 10'>
    ## </d 'Increment Right'>
    ## <d 'Commutative Property'>
      (8) (10) addcom
      EqReplaceEq1
    ## </d 'Commutative Property'>
  ## </d 'One-digit Addition'>
)

## <title> One-digit Addition </title>
thm (9plus10 () () (= (+ (9) (10)) (+ (10) (9)) )
  ## <d 'Commutative Property'>
    (9) (10) addcom
  ## </d 'Commutative Property'>
)

## <title> Substitution </title>
## <table>
##   (= A (*  [ B ]   ]   ]  D))
##   (=       [ B ]   [ C ] )
##   (= A (*  [   [   [ C ]  D))
## </table>
thm (EqReplaceEq1Mul0 () (
     replacee (= A (* B D))
     substitution (= B C)) 
     (= A (* C D))
  replacee
  substitution
D muleq1i
A eqeq2i
mpbi
)


## <title> One-digit Addition </title>
thm (10plus10 () () (= (+ (10) (10)) (* (2) (10)))
  ## <d 'Addition'>
    ## <d 'Group Common Digits'>
      ## <d 'Multiply By One'>
        ## <d 'Multiply By One'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              (10) mulidr
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (1) (10)) (10) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Evaluate'>
          (10) addeq1i
        ## </d 'Multiply By One'>
        ## <d 'Multiply By One'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              (10) mulidr
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (1) (10)) (10) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Evaluate'>
          EqReplaceEq1Add1
        ## </d 'Multiply By One'>
      ## </d 'Multiply By One'>
      ## <d 'Distributive Property'>
        (1) (1) (10) distl
        ## <d 'Commutative Property'>
          (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
          mpbi
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Distributive Property'>
    ## </d 'Group Common Digits'>
    ## <d 'Single-digit Addition'>
      df-2
      ## <d 'Commutative Property'>
        (2) (+ (1) (1)) eqcom
        mpbi
      ## </d 'Commutative Property'>
        EqReplaceEq1Mul0
    ## </d 'Single-digit Addition'>
  ## </d 'Addition'>
)


# == Multiplication Tables ==

#----  Automatically generated with GH.ProofGenerator.evaluator.batchEvaluation('*', [2, 9], [2, 9]);

## <title> One-digit Multiplication </title>
thm (2times2 () () (= (* (2) (2)) (4))
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-2
        ## <d 'Commutative Property'>
          (2) (+ (1) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (1)) (2) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (2) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (2) (1) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        (2) mulid
        (* (2) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (2) mulid
          EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
        2plus2
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)


## <title> One-digit Multiplication </title>
thm (2times3 () () (= (* (2) (3)) (6))
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-2
        ## <d 'Commutative Property'>
          (2) (+ (1) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (1)) (2) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (3) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (1) (1) (3) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        (3) mulidr
        (* (1) (3)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (3) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
        3plus3
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (2times4 () () (= (* (2) (4)) (8))
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-2
        ## <d 'Commutative Property'>
          (2) (+ (1) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (1)) (2) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (4) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (1) (1) (4) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        (4) mulidr
        (* (1) (4)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (4) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
        4plus4
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (2times5 () () (= (* (2) (5)) (10))
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-2
        ## <d 'Commutative Property'>
          (2) (+ (1) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (1)) (2) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (5) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (1) (1) (5) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        (5) mulidr
        (* (1) (5)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (5) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
        5plus5
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (2times6 () () (= (* (2) (6)) (+ (10) (2)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-2
        ## <d 'Commutative Property'>
          (2) (+ (1) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (1)) (2) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (6) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (1) (1) (6) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        (6) mulidr
        (* (1) (6)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (6) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
        6plus6
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (2times7 () () (= (* (2) (7)) (+ (10) (4)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-2
        ## <d 'Commutative Property'>
          (2) (+ (1) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (1)) (2) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (7) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (1) (1) (7) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        (7) mulidr
        (* (1) (7)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (7) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
        7plus7
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (2times8 () () (= (* (2) (8)) (+ (10) (6)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-2
        ## <d 'Commutative Property'>
          (2) (+ (1) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (1)) (2) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (8) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (1) (1) (8) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        (8) mulidr
        (* (1) (8)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (8) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
        8plus8
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)


## <title> One-digit Multiplication </title>
thm (2times9 () () (= (* (2) (9)) (+ (10) (8)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-2
        ## <d 'Commutative Property'>
          (2) (+ (1) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (1)) (2) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (9) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (1) (1) (9) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        (9) mulidr
        (* (1) (9)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (9) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
        9plus9
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (3times2 () () (= (* (3) (2)) (6))
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-2
        ## <d 'Commutative Property'>
          (2) (+ (1) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (1)) (2) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (3) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (3) (1) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        (3) mulid
        (* (3) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (3) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      3plus3
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (3times3 () () (= (* (3) (3)) (9))
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-3
        ## <d 'Commutative Property'>
          (3) (+ (2) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (1)) (3) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (3) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (3) (2) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        3times2
        (* (3) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (3) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
        6plus3
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (3times4 () () (= (* (3) (4)) (+ (10) (2)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-3
        ## <d 'Commutative Property'>
          (3) (+ (2) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (1)) (3) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (4) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (2) (1) (4) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        2times4
        (* (1) (4)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (4) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
        8plus4
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (3times5 () () (= (* (3) (5)) (+ (10) (5)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-3
        ## <d 'Commutative Property'>
          (3) (+ (2) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (1)) (3) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (5) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (2) (1) (5) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        2times5
        (* (1) (5)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (5) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (3times6 () () (= (* (3) (6)) (+ (10) (8)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-3
        ## <d 'Commutative Property'>
          (3) (+ (2) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (1)) (3) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (6) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (2) (1) (6) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        2times6
        (* (1) (6)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (6) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (2) (6) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (2) (6)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
            2plus6
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (8) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ B  [ C ]   ]   ] ) A'))
##   (=            [ C ]   [ D ] )
##   (= A (+ (+ B  [   [   [ D ] ) A'))
## </table>
thm (EqReplaceEq1Add0Add1 () (
     replacee (= A (+ (+ B C) A'))
     substitution (= C D)) 
     (= A (+ (+ B D) A'))
  replacee
  substitution
B addeq2i
A' addeq1i
A eqeq2i
mpbi
)

## <title> Substitution </title>
## <table>
##   (= A (+ (*  [ B ]   ]   ]  D) A'))
##   (=          [ B ]   [ C ] )
##   (= A (+ (*  [   [   [ C ]  D) A'))
## </table>
thm (EqReplaceEq1Add0Mul0 () (
     replacee (= A (+ (* B D) A'))
     substitution (= B C)) 
     (= A (+ (* C D) A'))
  replacee
  substitution
D muleq1i
A' addeq1i
A eqeq2i
mpbi
)

## <title> One-digit Multiplication </title>
thm (3times7 () () (= (* (3) (7)) (+ (* (2) (10)) (1)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-3
        ## <d 'Commutative Property'>
          (3) (+ (2) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (1)) (3) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (7) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (2) (1) (7) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        2times7
        (* (1) (7)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (7) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (4) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (4) (7)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
            4plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (1) (10)) (10) (1) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (1) (10)) (10)) (1)) (+ (* (1) (10)) (+ (10) (1))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
              EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-2
          ## <d 'Commutative Property'>
            (2) (+ (1) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
            EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (3times8 () () (= (* (3) (8)) (+ (* (2) (10)) (4)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-3
        ## <d 'Commutative Property'>
          (3) (+ (2) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (1)) (3) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (8) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (2) (1) (8) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        2times8
        (* (1) (8)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (8) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (6) (8) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (6) (8)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
            6plus8
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (1) (10)) (10) (4) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (1) (10)) (10)) (4)) (+ (* (1) (10)) (+ (10) (4))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-2
          ## <d 'Commutative Property'>
            (2) (+ (1) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (3times9 () () (= (* (3) (9)) (+ (* (2) (10)) (7)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-3
        ## <d 'Commutative Property'>
          (3) (+ (2) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (1)) (3) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (9) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (2) (1) (9) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        2times9
        (* (1) (9)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (9) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (8) (9) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (8) (9)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
            8plus9
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (1) (10)) (10) (7) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (1) (10)) (10)) (7)) (+ (* (1) (10)) (+ (10) (7))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-2
          ## <d 'Commutative Property'>
            (2) (+ (1) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (4times2 () () (= (* (4) (2)) (8))
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-2
        ## <d 'Commutative Property'>
          (2) (+ (1) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (1)) (2) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (4) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (4) (1) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        (4) mulid
        (* (4) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (4) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      4plus4
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (4times3 () () (= (* (4) (3)) (+ (10) (2)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-3
        ## <d 'Commutative Property'>
          (3) (+ (2) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (1)) (3) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (4) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (4) (2) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        4times2
        (* (4) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (4) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      8plus4
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (4times4 () () (= (* (4) (4)) (+ (10) (6)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        2plus2
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (2)) (4) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (4) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (4) (2) (2) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        4times2
        (* (4) (2)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        4times2
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      8plus8
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (4times5 () () (= (* (4) (5)) (* (2) (10)))
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        2plus2
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (2)) (4) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (5) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (2) (2) (5) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        2times5
        (* (2) (5)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        2times5
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
        10plus10
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (4times6 () () (= (* (4) (6)) (+ (* (2) (10)) (4)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        2plus2
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (2)) (4) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (6) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (2) (2) (6) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        2times6
        (* (2) (6)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        2times6
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (10) (2)) (10) (2) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (10) (2)) (10)) (2)) (+ (+ (10) (2)) (+ (10) (2))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (10) (2) (10) addass
                (2) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (2) (10) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (10) (10) (2) addass
                ## <d 'Commutative Property'>
                  (+ (+ (10) (10)) (2)) (+ (10) (+ (10) (2))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (10) (10)) (2) (2) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (10) addeq1i
              ## </d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                EqReplaceEq1Add1
              ## </d 'Multiply By One'>
              (+ (2) (2)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          2plus2
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Single-digit Addition'>
          df-2
          ## <d 'Commutative Property'>
            (2) (+ (1) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (4times7 () () (= (* (4) (7)) (+ (* (2) (10)) (8)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        2plus2
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (2)) (4) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (7) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (2) (2) (7) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        2times7
        (* (2) (7)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        2times7
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (10) (4)) (10) (4) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (10) (4)) (10)) (4)) (+ (+ (10) (4)) (+ (10) (4))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (10) (4) (10) addass
                (4) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (4) (10) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (10) (10) (4) addass
                ## <d 'Commutative Property'>
                  (+ (+ (10) (10)) (4)) (+ (10) (+ (10) (4))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (10) (10)) (4) (4) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (10) addeq1i
              ## </d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                EqReplaceEq1Add1
              ## </d 'Multiply By One'>
              (+ (4) (4)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          4plus4
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Single-digit Addition'>
          df-2
          ## <d 'Commutative Property'>
            (2) (+ (1) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (4times8 () () (= (* (4) (8)) (+ (* (3) (10)) (2)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        2plus2
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (2)) (4) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (8) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (2) (2) (8) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        2times8
        (* (2) (8)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        2times8
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (10) (6)) (10) (6) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (10) (6)) (10)) (6)) (+ (+ (10) (6)) (+ (10) (6))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (10) (6) (10) addass
                (6) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (6) (10) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (10) (10) (6) addass
                ## <d 'Commutative Property'>
                  (+ (+ (10) (10)) (6)) (+ (10) (+ (10) (6))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (10) (10)) (6) (6) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (10) addeq1i
              ## </d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                EqReplaceEq1Add1
              ## </d 'Multiply By One'>
              (+ (6) (6)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          6plus6
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (+ (1) (1)) (10)) (10) (2) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (+ (1) (1)) (10)) (10)) (2)) (+ (* (+ (1) (1)) (10)) (+ (10) (2))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (+ (1) (1)) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (+ (1) (1)) (1)) (10)) (+ (* (+ (1) (1)) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          ## <d 'Evaluate'>
            df-2
            ## <d 'Commutative Property'>
              (2) (+ (1) (1)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            (1) addeq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            df-3
            ## <d 'Commutative Property'>
              (3) (+ (2) (1)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (4times9 () () (= (* (4) (9)) (+ (* (3) (10)) (6)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        2plus2
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (2)) (4) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (9) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (2) (2) (9) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        2times9
        (* (2) (9)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        2times9
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (10) (8)) (10) (8) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (10) (8)) (10)) (8)) (+ (+ (10) (8)) (+ (10) (8))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (10) (8) (10) addass
                (8) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (8) (10) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (10) (10) (8) addass
                ## <d 'Commutative Property'>
                  (+ (+ (10) (10)) (8)) (+ (10) (+ (10) (8))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (10) (10)) (8) (8) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (10) addeq1i
              ## </d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                EqReplaceEq1Add1
              ## </d 'Multiply By One'>
              (+ (8) (8)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          8plus8
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (+ (1) (1)) (10)) (10) (6) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (+ (1) (1)) (10)) (10)) (6)) (+ (* (+ (1) (1)) (10)) (+ (10) (6))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (+ (1) (1)) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (+ (1) (1)) (1)) (10)) (+ (* (+ (1) (1)) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          ## <d 'Evaluate'>
            df-2
            ## <d 'Commutative Property'>
              (2) (+ (1) (1)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            (1) addeq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            df-3
            ## <d 'Commutative Property'>
              (3) (+ (2) (1)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (5times2 () () (= (* (5) (2)) (10))
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-2
        ## <d 'Commutative Property'>
          (2) (+ (1) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (1)) (2) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (5) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (5) (1) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        (5) mulid
        (* (5) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (5) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      5plus5
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (5times3 () () (= (* (5) (3)) (+ (10) (5)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-3
        ## <d 'Commutative Property'>
          (3) (+ (2) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (1)) (3) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (5) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (5) (2) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        5times2
        (* (5) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (5) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (5times4 () () (= (* (5) (4)) (* (2) (10)))
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        2plus2
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (2)) (4) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (5) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (5) (2) (2) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        5times2
        (* (5) (2)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        5times2
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      10plus10
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (5times5 () () (= (* (5) (5)) (+ (* (2) (10)) (5)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-5
        ## <d 'Commutative Property'>
          (5) (+ (4) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (4) (1)) (5) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (5) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (5) (4) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        5times4
        (* (5) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (5) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (5times6 () () (= (* (5) (6)) (* (3) (10)))
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-5
        ## <d 'Commutative Property'>
          (5) (+ (4) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (4) (1)) (5) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (6) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (4) (1) (6) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        4times6
        (* (1) (6)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (6) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (2) (10)) (4) (6) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
            4plus6
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (2) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (2) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-3
          ## <d 'Commutative Property'>
            (3) (+ (2) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (5times7 () () (= (* (5) (7)) (+ (* (3) (10)) (5)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-5
        ## <d 'Commutative Property'>
          (5) (+ (4) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (4) (1)) (5) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (7) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (4) (1) (7) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        4times7
        (* (1) (7)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (7) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (2) (10)) (8) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
            8plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (2) (10)) (10) (5) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (2) (10)) (10)) (5)) (+ (* (2) (10)) (+ (10) (5))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (2) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-3
          ## <d 'Commutative Property'>
            (3) (+ (2) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (5times8 () () (= (* (5) (8)) (* (4) (10)))
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-5
        ## <d 'Commutative Property'>
          (5) (+ (4) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (4) (1)) (5) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (8) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (4) (1) (8) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        4times8
        (* (1) (8)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (8) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (3) (10)) (2) (8) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
            2plus8
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (3) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (3) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (3) (1)) (10)) (+ (* (3) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-4
          ## <d 'Commutative Property'>
            (4) (+ (3) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (5times9 () () (= (* (5) (9)) (+ (* (4) (10)) (5)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-5
        ## <d 'Commutative Property'>
          (5) (+ (4) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (4) (1)) (5) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (9) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (4) (1) (9) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        4times9
        (* (1) (9)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (9) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (3) (10)) (6) (9) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
            6plus9
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (3) (10)) (10) (5) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (3) (10)) (10)) (5)) (+ (* (3) (10)) (+ (10) (5))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (3) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (3) (1)) (10)) (+ (* (3) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-4
          ## <d 'Commutative Property'>
            (4) (+ (3) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (6times2 () () (= (* (6) (2)) (+ (10) (2)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-2
        ## <d 'Commutative Property'>
          (2) (+ (1) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (1)) (2) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (6) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (6) (1) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        (6) mulid
        (* (6) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (6) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      6plus6
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (6times3 () () (= (* (6) (3)) (+ (10) (8)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-3
        ## <d 'Commutative Property'>
          (3) (+ (2) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (1)) (3) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (6) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (6) (2) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        6times2
        (* (6) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (6) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (2) (6) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (2) (6)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          2plus6
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (8) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (6times4 () () (= (* (6) (4)) (+ (* (2) (10)) (4)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        2plus2
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (2)) (4) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (6) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (6) (2) (2) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        6times2
        (* (6) (2)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        6times2
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (10) (2)) (10) (2) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (10) (2)) (10)) (2)) (+ (+ (10) (2)) (+ (10) (2))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (10) (2) (10) addass
                (2) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (2) (10) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (10) (10) (2) addass
                ## <d 'Commutative Property'>
                  (+ (+ (10) (10)) (2)) (+ (10) (+ (10) (2))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (10) (10)) (2) (2) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (10) addeq1i
              ## </d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                EqReplaceEq1Add1
              ## </d 'Multiply By One'>
              (+ (2) (2)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          2plus2
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Single-digit Addition'>
          df-2
          ## <d 'Commutative Property'>
            (2) (+ (1) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (6times5 () () (= (* (6) (5)) (* (3) (10)))
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-5
        ## <d 'Commutative Property'>
          (5) (+ (4) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (4) (1)) (5) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (6) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (6) (4) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        6times4
        (* (6) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (6) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (2) (10)) (4) (6) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          4plus6
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (2) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (2) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-3
          ## <d 'Commutative Property'>
            (3) (+ (2) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (6times6 () () (= (* (6) (6)) (+ (* (3) (10)) (6)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-6
        ## <d 'Commutative Property'>
          (6) (+ (5) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (5) (1)) (6) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (6) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (6) (5) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        6times5
        (* (6) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (6) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (6times7 () () (= (* (6) (7)) (+ (* (4) (10)) (2)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-6
        ## <d 'Commutative Property'>
          (6) (+ (5) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (5) (1)) (6) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (7) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (5) (1) (7) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        5times7
        (* (1) (7)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (7) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (3) (10)) (5) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
            5plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (3) (10)) (10) (2) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (3) (10)) (10)) (2)) (+ (* (3) (10)) (+ (10) (2))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (3) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (3) (1)) (10)) (+ (* (3) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-4
          ## <d 'Commutative Property'>
            (4) (+ (3) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (6times8 () () (= (* (6) (8)) (+ (* (4) (10)) (8)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-6
        ## <d 'Commutative Property'>
          (6) (+ (5) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (5) (1)) (6) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (8) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (5) (1) (8) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        5times8
        (* (1) (8)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (8) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (6times9 () () (= (* (6) (9)) (+ (* (5) (10)) (4)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-6
        ## <d 'Commutative Property'>
          (6) (+ (5) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (5) (1)) (6) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (9) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (5) (1) (9) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        5times9
        (* (1) (9)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (9) mulidr
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (4) (10)) (5) (9) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
            5plus9
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (4) (10)) (10) (4) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (4) (10)) (10)) (4)) (+ (* (4) (10)) (+ (10) (4))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (4) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (4) (1)) (10)) (+ (* (4) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-5
          ## <d 'Commutative Property'>
            (5) (+ (4) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (7times2 () () (= (* (7) (2)) (+ (10) (4)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-2
        ## <d 'Commutative Property'>
          (2) (+ (1) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (1)) (2) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (7) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (7) (1) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        (7) mulid
        (* (7) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (7) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      7plus7
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (7times3 () () (= (* (7) (3)) (+ (* (2) (10)) (1)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-3
        ## <d 'Commutative Property'>
          (3) (+ (2) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (1)) (3) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (7) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (7) (2) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        7times2
        (* (7) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (7) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (4) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (4) (7)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          4plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (1) (10)) (10) (1) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (1) (10)) (10)) (1)) (+ (* (1) (10)) (+ (10) (1))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-2
          ## <d 'Commutative Property'>
            (2) (+ (1) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (7times4 () () (= (* (7) (4)) (+ (* (2) (10)) (8)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        2plus2
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (2)) (4) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (7) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (7) (2) (2) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        7times2
        (* (7) (2)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        7times2
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (10) (4)) (10) (4) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (10) (4)) (10)) (4)) (+ (+ (10) (4)) (+ (10) (4))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (10) (4) (10) addass
                (4) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (4) (10) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (10) (10) (4) addass
                ## <d 'Commutative Property'>
                  (+ (+ (10) (10)) (4)) (+ (10) (+ (10) (4))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (10) (10)) (4) (4) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (10) addeq1i
              ## </d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                EqReplaceEq1Add1
              ## </d 'Multiply By One'>
              (+ (4) (4)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          4plus4
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Single-digit Addition'>
          df-2
          ## <d 'Commutative Property'>
            (2) (+ (1) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (7times5 () () (= (* (7) (5)) (+ (* (3) (10)) (5)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-5
        ## <d 'Commutative Property'>
          (5) (+ (4) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (4) (1)) (5) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (7) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (7) (4) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        7times4
        (* (7) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (7) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (2) (10)) (8) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          8plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (2) (10)) (10) (5) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (2) (10)) (10)) (5)) (+ (* (2) (10)) (+ (10) (5))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (2) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-3
          ## <d 'Commutative Property'>
            (3) (+ (2) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (7times6 () () (= (* (7) (6)) (+ (* (4) (10)) (2)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-6
        ## <d 'Commutative Property'>
          (6) (+ (5) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (5) (1)) (6) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (7) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (7) (5) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        7times5
        (* (7) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (7) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (3) (10)) (5) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          5plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (3) (10)) (10) (2) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (3) (10)) (10)) (2)) (+ (* (3) (10)) (+ (10) (2))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (3) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (3) (1)) (10)) (+ (* (3) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-4
          ## <d 'Commutative Property'>
            (4) (+ (3) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (7times7 () () (= (* (7) (7)) (+ (* (4) (10)) (9)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
          5plus2
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (5) (2)) (7) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (7) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (7) (5) (2) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        7times5
        (* (7) (2)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        7times2
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (* (3) (10)) (5)) (10) (4) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (3) (10)) (5)) (10)) (4)) (+ (+ (* (3) (10)) (5)) (+ (10) (4))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (* (3) (10)) (5) (10) addass
                (4) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (5) (10) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (* (3) (10)) (10) (5) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (3) (10)) (10)) (5)) (+ (* (3) (10)) (+ (10) (5))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (* (3) (10)) (10)) (5) (4) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (* (3) (10)) addeq2i
              ## </d 'Multiply By One'>
              (+ (5) (4)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (3) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (3) (1)) (10)) (+ (* (3) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
            5plus4
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Single-digit Addition'>
          df-4
          ## <d 'Commutative Property'>
            (4) (+ (3) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (7times8 () () (= (* (7) (8)) (+ (* (5) (10)) (6)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        5plus2
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (5) (2)) (7) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (8) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (5) (2) (8) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        5times8
        (* (2) (8)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        2times8
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (* (4) (10)) (10) (6) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (4) (10)) (10)) (6)) (+ (* (4) (10)) (+ (10) (6))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (* (4) (10)) addeq2i
              ## </d 'Multiply By One'>
              (6) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (4) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (4) (1)) (10)) (+ (* (4) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          df-5
          ## <d 'Commutative Property'>
            (5) (+ (4) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (7times9 () () (= (* (7) (9)) (+ (* (6) (10)) (3)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        5plus2
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (5) (2)) (7) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (9) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (5) (2) (9) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        5times9
        (* (2) (9)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        2times9
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (* (4) (10)) (5)) (10) (8) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (4) (10)) (5)) (10)) (8)) (+ (+ (* (4) (10)) (5)) (+ (10) (8))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (* (4) (10)) (5) (10) addass
                (8) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (5) (10) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (* (4) (10)) (10) (5) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (4) (10)) (10)) (5)) (+ (* (4) (10)) (+ (10) (5))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (* (4) (10)) (10)) (5) (8) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (* (4) (10)) addeq2i
              ## </d 'Multiply By One'>
              (+ (5) (8)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (4) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (4) (1)) (10)) (+ (* (4) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
            5plus8
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (+ (4) (1)) (10)) (10) (3) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (+ (4) (1)) (10)) (10)) (3)) (+ (* (+ (4) (1)) (10)) (+ (10) (3))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (+ (4) (1)) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (+ (4) (1)) (1)) (10)) (+ (* (+ (4) (1)) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          ## <d 'Evaluate'>
            df-5
            ## <d 'Commutative Property'>
              (5) (+ (4) (1)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            (1) addeq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            df-6
            ## <d 'Commutative Property'>
              (6) (+ (5) (1)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (8times2 () () (= (* (8) (2)) (+ (10) (6)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-2
        ## <d 'Commutative Property'>
          (2) (+ (1) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (1)) (2) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (8) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (8) (1) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        (8) mulid
        (* (8) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (8) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      8plus8
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (8times3 () () (= (* (8) (3)) (+ (* (2) (10)) (4)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-3
        ## <d 'Commutative Property'>
          (3) (+ (2) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (1)) (3) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (8) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (8) (2) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        8times2
        (* (8) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (8) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (6) (8) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (6) (8)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          6plus8
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (1) (10)) (10) (4) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (1) (10)) (10)) (4)) (+ (* (1) (10)) (+ (10) (4))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-2
          ## <d 'Commutative Property'>
            (2) (+ (1) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (8times4 () () (= (* (8) (4)) (+ (* (3) (10)) (2)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        2plus2
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (2)) (4) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (8) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (8) (2) (2) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        8times2
        (* (8) (2)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        8times2
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (10) (6)) (10) (6) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (10) (6)) (10)) (6)) (+ (+ (10) (6)) (+ (10) (6))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (10) (6) (10) addass
                (6) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (6) (10) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (10) (10) (6) addass
                ## <d 'Commutative Property'>
                  (+ (+ (10) (10)) (6)) (+ (10) (+ (10) (6))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (10) (10)) (6) (6) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (10) addeq1i
              ## </d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                EqReplaceEq1Add1
              ## </d 'Multiply By One'>
              (+ (6) (6)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          6plus6
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (+ (1) (1)) (10)) (10) (2) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (+ (1) (1)) (10)) (10)) (2)) (+ (* (+ (1) (1)) (10)) (+ (10) (2))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (+ (1) (1)) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (+ (1) (1)) (1)) (10)) (+ (* (+ (1) (1)) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          ## <d 'Evaluate'>
            df-2
            ## <d 'Commutative Property'>
              (2) (+ (1) (1)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            (1) addeq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            df-3
            ## <d 'Commutative Property'>
              (3) (+ (2) (1)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (8times5 () () (= (* (8) (5)) (* (4) (10)))
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-5
        ## <d 'Commutative Property'>
          (5) (+ (4) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (4) (1)) (5) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (8) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (8) (4) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        8times4
        (* (8) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (8) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (3) (10)) (2) (8) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          2plus8
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (3) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (3) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (3) (1)) (10)) (+ (* (3) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-4
          ## <d 'Commutative Property'>
            (4) (+ (3) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (8times6 () () (= (* (8) (6)) (+ (* (4) (10)) (8)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-6
        ## <d 'Commutative Property'>
          (6) (+ (5) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (5) (1)) (6) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (8) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (8) (5) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        8times5
        (* (8) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (8) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (8times7 () () (= (* (8) (7)) (+ (* (5) (10)) (6)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        5plus2
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (5) (2)) (7) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (8) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (8) (5) (2) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        8times5
        (* (8) (2)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        8times2
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (* (4) (10)) (10) (6) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (4) (10)) (10)) (6)) (+ (* (4) (10)) (+ (10) (6))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (* (4) (10)) addeq2i
              ## </d 'Multiply By One'>
              (6) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (4) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (4) (1)) (10)) (+ (* (4) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          df-5
          ## <d 'Commutative Property'>
            (5) (+ (4) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (8times8 () () (= (* (8) (8)) (+ (* (6) (10)) (4)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
          5plus3
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (5) (3)) (8) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (8) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (8) (5) (3) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        8times5
        (* (8) (3)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        8times3
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (* (4) (10)) (* (2) (10)) (4) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (4) (10)) (* (2) (10))) (4)) (+ (* (4) (10)) (+ (* (2) (10)) (4))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
          ## </d 'Rearrange Terms'>
          ## <d 'Distributive Property'>
            (4) (2) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (4) (2)) (10)) (+ (* (4) (10)) (* (2) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
            4plus2
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (8times9 () () (= (* (8) (9)) (+ (* (7) (10)) (2)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        5plus3
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (5) (3)) (8) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (9) muleq1i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (5) (3) (9) distl
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        5times9
        (* (3) (9)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        3times9
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (* (4) (10)) (5)) (* (2) (10)) (7) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (4) (10)) (5)) (* (2) (10))) (7)) (+ (+ (* (4) (10)) (5)) (+ (* (2) (10)) (7))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (* (4) (10)) (5) (* (2) (10)) addass
                (7) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (5) (* (2) (10)) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (* (4) (10)) (* (2) (10)) (5) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (4) (10)) (* (2) (10))) (5)) (+ (* (4) (10)) (+ (* (2) (10)) (5))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (* (4) (10)) (* (2) (10))) (5) (7) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Distributive Property'>
            (4) (2) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (4) (2)) (10)) (+ (* (4) (10)) (* (2) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          5plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (+ (4) (2)) (10)) (10) (2) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (+ (4) (2)) (10)) (10)) (2)) (+ (* (+ (4) (2)) (10)) (+ (10) (2))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (+ (4) (2)) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (+ (4) (2)) (1)) (10)) (+ (* (+ (4) (2)) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          ## <d 'Evaluate'>
            4plus2
            (1) addeq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            df-7
            ## <d 'Commutative Property'>
              (7) (+ (6) (1)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (9times2 () () (= (* (9) (2)) (+ (10) (8)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-2
        ## <d 'Commutative Property'>
          (2) (+ (1) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (1)) (2) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (9) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (9) (1) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        (9) mulid
        (* (9) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (9) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      9plus9
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (9times3 () () (= (* (9) (3)) (+ (* (2) (10)) (7)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-3
        ## <d 'Commutative Property'>
          (3) (+ (2) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (1)) (3) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (9) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (9) (2) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        9times2
        (* (9) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (9) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (8) (9) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (8) (9)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          8plus9
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (1) (10)) (10) (7) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (1) (10)) (10)) (7)) (+ (* (1) (10)) (+ (10) (7))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-2
          ## <d 'Commutative Property'>
            (2) (+ (1) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (9times4 () () (= (* (9) (4)) (+ (* (3) (10)) (6)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        2plus2
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (2) (2)) (4) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (9) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (9) (2) (2) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        9times2
        (* (9) (2)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        9times2
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (10) (8)) (10) (8) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (10) (8)) (10)) (8)) (+ (+ (10) (8)) (+ (10) (8))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (10) (8) (10) addass
                (8) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (8) (10) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (10) (10) (8) addass
                ## <d 'Commutative Property'>
                  (+ (+ (10) (10)) (8)) (+ (10) (+ (10) (8))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (10) (10)) (8) (8) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (10) addeq1i
              ## </d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                EqReplaceEq1Add1
              ## </d 'Multiply By One'>
              (+ (8) (8)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          8plus8
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (+ (1) (1)) (10)) (10) (6) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (+ (1) (1)) (10)) (10)) (6)) (+ (* (+ (1) (1)) (10)) (+ (10) (6))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (+ (1) (1)) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (+ (1) (1)) (1)) (10)) (+ (* (+ (1) (1)) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          ## <d 'Evaluate'>
            df-2
            ## <d 'Commutative Property'>
              (2) (+ (1) (1)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            (1) addeq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            df-3
            ## <d 'Commutative Property'>
              (3) (+ (2) (1)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (9times5 () () (= (* (9) (5)) (+ (* (4) (10)) (5)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-5
        ## <d 'Commutative Property'>
          (5) (+ (4) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (4) (1)) (5) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (9) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (9) (4) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        9times4
        (* (9) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (9) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (3) (10)) (6) (9) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          6plus9
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (3) (10)) (10) (5) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (3) (10)) (10)) (5)) (+ (* (3) (10)) (+ (10) (5))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (3) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (3) (1)) (10)) (+ (* (3) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-4
          ## <d 'Commutative Property'>
            (4) (+ (3) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (9times6 () () (= (* (9) (6)) (+ (* (5) (10)) (4)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        df-6
        ## <d 'Commutative Property'>
          (6) (+ (5) (1)) eqcom
          mpbi
        ## </d 'Commutative Property'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (5) (1)) (6) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (9) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (9) (5) (1) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        9times5
        (* (9) (1)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        (9) mulid
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (4) (10)) (5) (9) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          5plus9
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (4) (10)) (10) (4) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (4) (10)) (10)) (4)) (+ (* (4) (10)) (+ (10) (4))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (4) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (4) (1)) (10)) (+ (* (4) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          df-5
          ## <d 'Commutative Property'>
            (5) (+ (4) (1)) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (9times7 () () (= (* (9) (7)) (+ (* (6) (10)) (3)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        5plus2
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (5) (2)) (7) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (9) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (9) (5) (2) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        9times5
        (* (9) (2)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        9times2
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (* (4) (10)) (5)) (10) (8) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (4) (10)) (5)) (10)) (8)) (+ (+ (* (4) (10)) (5)) (+ (10) (8))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (* (4) (10)) (5) (10) addass
                (8) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (5) (10) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (* (4) (10)) (10) (5) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (4) (10)) (10)) (5)) (+ (* (4) (10)) (+ (10) (5))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (* (4) (10)) (10)) (5) (8) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (* (4) (10)) addeq2i
              ## </d 'Multiply By One'>
              (+ (5) (8)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (4) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (4) (1)) (10)) (+ (* (4) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          5plus8
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (+ (4) (1)) (10)) (10) (3) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (+ (4) (1)) (10)) (10)) (3)) (+ (* (+ (4) (1)) (10)) (+ (10) (3))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (+ (4) (1)) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (+ (4) (1)) (1)) (10)) (+ (* (+ (4) (1)) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          ## <d 'Evaluate'>
            df-5
            ## <d 'Commutative Property'>
              (5) (+ (4) (1)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            (1) addeq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            df-6
            ## <d 'Commutative Property'>
              (6) (+ (5) (1)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (9times8 () () (= (* (9) (8)) (+ (* (7) (10)) (2)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        5plus3
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (5) (3)) (8) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (9) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (9) (5) (3) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        9times5
        (* (9) (3)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        9times3
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (* (4) (10)) (5)) (* (2) (10)) (7) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (4) (10)) (5)) (* (2) (10))) (7)) (+ (+ (* (4) (10)) (5)) (+ (* (2) (10)) (7))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (* (4) (10)) (5) (* (2) (10)) addass
                (7) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (5) (* (2) (10)) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (* (4) (10)) (* (2) (10)) (5) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (4) (10)) (* (2) (10))) (5)) (+ (* (4) (10)) (+ (* (2) (10)) (5))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (* (4) (10)) (* (2) (10))) (5) (7) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Distributive Property'>
            (4) (2) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (4) (2)) (10)) (+ (* (4) (10)) (* (2) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          5plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (+ (4) (2)) (10)) (10) (2) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (+ (4) (2)) (10)) (10)) (2)) (+ (* (+ (4) (2)) (10)) (+ (10) (2))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (+ (4) (2)) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (+ (4) (2)) (1)) (10)) (+ (* (+ (4) (2)) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          ## <d 'Evaluate'>
            4plus2
            (1) addeq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            df-7
            ## <d 'Commutative Property'>
              (7) (+ (6) (1)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)

## <title> One-digit Multiplication </title>
thm (9times9 () () (= (* (9) (9)) (+ (* (8) (10)) (1)) )
  ## <d 'One-Digit Multiplication'>
    ## <d 'Seperate into Smaller Digits'>
      ## <d 'Evaluate'>
        5plus4
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (5) (4)) (9) eqcom
        mpbi
      ## </d 'Commutative Property'>
      (9) muleq2i
    ## </d 'Seperate into Smaller Digits'>
    ## <d 'Distributive Property'>
      (9) (5) (4) distr
      EqReplaceEq1
    ## </d 'Distributive Property'>
    ## <d 'Multiply Smaller Digits'>
      ## <d 'Multiply Left Side'>
        9times5
        (* (9) (4)) addeq1i
      ## </d 'Multiply Left Side'>
      ## <d 'Multiply Right Side'>
        9times4
        EqReplaceEq1Add1
      ## </d 'Multiply Right Side'>
      EqReplaceEq1
    ## </d 'Multiply Smaller Digits'>
    ## <d 'Sum the Total'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (* (4) (10)) (5)) (* (3) (10)) (6) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (4) (10)) (5)) (* (3) (10))) (6)) (+ (+ (* (4) (10)) (5)) (+ (* (3) (10)) (6))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (* (4) (10)) (5) (* (3) (10)) addass
                (6) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (5) (* (3) (10)) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (* (4) (10)) (* (3) (10)) (5) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (4) (10)) (* (3) (10))) (5)) (+ (* (4) (10)) (+ (* (3) (10)) (5))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (* (4) (10)) (* (3) (10))) (5) (6) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Distributive Property'>
            (4) (3) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (4) (3)) (10)) (+ (* (4) (10)) (* (3) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
            5plus6
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (+ (4) (3)) (10)) (10) (1) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (+ (4) (3)) (10)) (10)) (1)) (+ (* (+ (4) (3)) (10)) (+ (10) (1))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (+ (4) (3)) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (+ (4) (3)) (1)) (10)) (+ (* (+ (4) (3)) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          ## <d 'Evaluate'>
              4plus3
            (1) addeq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            df-8
            ## <d 'Commutative Property'>
              (8) (+ (7) (1)) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceEq1
    ## </d 'Sum the Total'>
  ## </d 'One-Digit Multiplication'>
)


## <title> Substitution </title>
## <table>
##   (-. (= A  [ B ]   ]   ] ))
##   (=        [ B ]   [ C ] )
##   (-. (= A  [   [   [ C ] ))
## </table>
thm (EqReplaceNot0Eq1 () (
     replacee (-. (= A B))
     substitution (= B C)) 
     (-. (= A C))
  replacee
  substitution
A eqeq2i
con4biir
mpbi
)


# == Inequalities ==
#====================  Equality  ===========================#
#----  Automatically generated with GH.ProofGenerator.evaluator.batchEvaluation('=', [0, 0], [1, 10]);
#----  Automatically generated with GH.ProofGenerator.evaluator.batchEvaluation('=', [1, 10], [0, 0]);


## <title> One-Digit Inequality </title>
thm (0notEqual1 () () (-. (= (0) (1)))
  (0) pa_ax1plus
  ## <d 'Evaluate'>
    (1) pa_ax3r
      EqReplaceNot0Eq1
  ## </d 'Evaluate'>
)

## <title> One-Digit Inequality </title>
thm (0notEqual2 () () (-. (= (0) (2)))
  (1) pa_ax1plus
  ## <d 'Evaluate'>
      1plus1
    EqReplaceNot0Eq1
  ## </d 'Evaluate'>
)

## <title> One-Digit Inequality </title>
thm (0notEqual3 () () (-. (= (0) (3)))
  (2) pa_ax1plus
  ## <d 'Evaluate'>
      2plus1
    EqReplaceNot0Eq1
  ## </d 'Evaluate'>
)

## <title> One-Digit Inequality </title>
thm (0notEqual4 () () (-. (= (0) (4)))
  (3) pa_ax1plus
  ## <d 'Evaluate'>
      3plus1
    EqReplaceNot0Eq1
  ## </d 'Evaluate'>
)

## <title> One-Digit Inequality </title>
thm (0notEqual5 () () (-. (= (0) (5)))
  (4) pa_ax1plus
  ## <d 'Evaluate'>
      4plus1
    EqReplaceNot0Eq1
  ## </d 'Evaluate'>
)

## <title> One-Digit Inequality </title>
thm (0notEqual6 () () (-. (= (0) (6)))
  (5) pa_ax1plus
  ## <d 'Evaluate'>
      5plus1
    EqReplaceNot0Eq1
  ## </d 'Evaluate'>
)

## <title> One-Digit Inequality </title>
thm (0notEqual7 () () (-. (= (0) (7)))
  (6) pa_ax1plus
  ## <d 'Evaluate'>
      6plus1
    EqReplaceNot0Eq1
  ## </d 'Evaluate'>
)

## <title> One-Digit Inequality </title>
thm (0notEqual8 () () (-. (= (0) (8)))
  (7) pa_ax1plus
  ## <d 'Evaluate'>
      7plus1
    EqReplaceNot0Eq1
  ## </d 'Evaluate'>
)

## <title> One-Digit Inequality </title>
thm (0notEqual9 () () (-. (= (0) (9)))
  (8) pa_ax1plus
  ## <d 'Evaluate'>
      8plus1
    EqReplaceNot0Eq1
  ## </d 'Evaluate'>
)

## <title> One-Digit Inequality </title>
thm (0notEqual10 () () (-. (= (0) (10)))
  (9) pa_ax1plus
  ## <d 'Evaluate'>
      9plus1
    EqReplaceNot0Eq1
  ## </d 'Evaluate'>
)

## <title> One-Digit Inequality </title>
thm (1notEqual0 () () (-. (= (1) (0)))
  ## <d 'Number is Not Zero'>
    0notEqual1
    ## <d 'Commutative Property'>
      (0) (1) eqcom
      mtbi
    ## </d 'Commutative Property'>
  ## </d 'Number is Not Zero'>
)

## <title> One-Digit Inequality </title>
thm (2notEqual0 () () (-. (= (2) (0)))
  ## <d 'Number is Not Zero'>
    0notEqual2
    ## <d 'Commutative Property'>
      (0) (2) eqcom
      mtbi
    ## </d 'Commutative Property'>
  ## </d 'Number is Not Zero'>
)

## <title> One-Digit Inequality </title>
thm (3notEqual0 () () (-. (= (3) (0)))
  ## <d 'Number is Not Zero'>
    0notEqual3
    ## <d 'Commutative Property'>
      (0) (3) eqcom
      mtbi
    ## </d 'Commutative Property'>
  ## </d 'Number is Not Zero'>
)

## <title> One-Digit Inequality </title>
thm (4notEqual0 () () (-. (= (4) (0)))
  ## <d 'Number is Not Zero'>
    0notEqual4
    ## <d 'Commutative Property'>
      (0) (4) eqcom
      mtbi
    ## </d 'Commutative Property'>
  ## </d 'Number is Not Zero'>
)

## <title> One-Digit Inequality </title>
thm (5notEqual0 () () (-. (= (5) (0)))
  ## <d 'Number is Not Zero'>
    0notEqual5
    ## <d 'Commutative Property'>
      (0) (5) eqcom
      mtbi
    ## </d 'Commutative Property'>
  ## </d 'Number is Not Zero'>
)

## <title> One-Digit Inequality </title>
thm (6notEqual0 () () (-. (= (6) (0)))
  ## <d 'Number is Not Zero'>
    0notEqual6
    ## <d 'Commutative Property'>
      (0) (6) eqcom
      mtbi
    ## </d 'Commutative Property'>
  ## </d 'Number is Not Zero'>
)

## <title> One-Digit Inequality </title>
thm (7notEqual0 () () (-. (= (7) (0)))
  ## <d 'Number is Not Zero'>
    0notEqual7
    ## <d 'Commutative Property'>
      (0) (7) eqcom
      mtbi
    ## </d 'Commutative Property'>
  ## </d 'Number is Not Zero'>
)

## <title> One-Digit Inequality </title>
thm (8notEqual0 () () (-. (= (8) (0)))
  ## <d 'Number is Not Zero'>
    0notEqual8
    ## <d 'Commutative Property'>
      (0) (8) eqcom
      mtbi
    ## </d 'Commutative Property'>
  ## </d 'Number is Not Zero'>
)

## <title> One-Digit Inequality </title>
thm (9notEqual0 () () (-. (= (9) (0)))
  ## <d 'Number is Not Zero'>
    0notEqual9
    ## <d 'Commutative Property'>
      (0) (9) eqcom
      mtbi
    ## </d 'Commutative Property'>
  ## </d 'Number is Not Zero'>
)

## <title> One-Digit Inequality </title>
thm (10notEqual0 () () (-. (= (10) (0)))
  ## <d 'Number is Not Zero'>
    0notEqual10
    ## <d 'Commutative Property'>
      (0) (10) eqcom
      mtbi
    ## </d 'Commutative Property'>
  ## </d 'Number is Not Zero'>
)



## <title> One-Digit Inequality </title>
thm (0less1 () () (< (0) (1))
  0notEqual1
  ## <d 'Less Than Or Equal To Zero'>
    (1) 0le
  ## </d 'Less Than Or Equal To Zero'>
  axlttri2i
)

## <title> One-Digit Inequality </title>
thm (0less2 () () (< (0) (2))
  0notEqual2
  ## <d 'Less Than Or Equal To Zero'>
    (2) 0le
  ## </d 'Less Than Or Equal To Zero'>
  axlttri2i
)

## <title> One-Digit Inequality </title>
thm (0less3 () () (< (0) (3))
  0notEqual3
  ## <d 'Less Than Or Equal To Zero'>
    (3) 0le
  ## </d 'Less Than Or Equal To Zero'>
  axlttri2i
)

## <title> One-Digit Inequality </title>
thm (0less4 () () (< (0) (4))
  0notEqual4
  ## <d 'Less Than Or Equal To Zero'>
    (4) 0le
  ## </d 'Less Than Or Equal To Zero'>
  axlttri2i
)

## <title> One-Digit Inequality </title>
thm (0less5 () () (< (0) (5))
  0notEqual5
  ## <d 'Less Than Or Equal To Zero'>
    (5) 0le
  ## </d 'Less Than Or Equal To Zero'>
  axlttri2i
)

## <title> One-Digit Inequality </title>
thm (0less6 () () (< (0) (6))
  0notEqual6
  ## <d 'Less Than Or Equal To Zero'>
    (6) 0le
  ## </d 'Less Than Or Equal To Zero'>
  axlttri2i
)

## <title> One-Digit Inequality </title>
thm (0less7 () () (< (0) (7))
  0notEqual7
  ## <d 'Less Than Or Equal To Zero'>
    (7) 0le
  ## </d 'Less Than Or Equal To Zero'>
  axlttri2i
)

## <title> One-Digit Inequality </title>
thm (0less8 () () (< (0) (8))
  0notEqual8
  ## <d 'Less Than Or Equal To Zero'>
    (8) 0le
  ## </d 'Less Than Or Equal To Zero'>
  axlttri2i
)

## <title> One-Digit Inequality </title>
thm (0less9 () () (< (0) (9))
  0notEqual9
  ## <d 'Less Than Or Equal To Zero'>
    (9) 0le
  ## </d 'Less Than Or Equal To Zero'>
  axlttri2i
)

## <title> One-Digit Inequality </title>
thm (0less10 () () (< (0) (10))
  0notEqual10
  ## <d 'Less Than Or Equal To Zero'>
    (10) 0le
  ## </d 'Less Than Or Equal To Zero'>
  axlttri2i
)

## <title> Substitution </title>
## <table>
##   (<  [ A ]   ]   ]  C)
##   (=  [ A ]   [ B ] )
##   (<  [   [   [ B ]  C)
## </table>
thm (EqReplaceLt0 () (
     replacee (< A C)
     substitution (= A B)) 
     (< B C)
  replacee substitution
  C lteq1i
  mpbi
)

## <title> Substitution </title>
## <table>
##   (< A  [ B ]   ]   ] )
##   (=    [ B ]   [ C ] )
##   (< A  [   [   [ C ] )
## </table>
thm (EqReplaceLt1 () (
     replacee (< A B)
     substitution (= B C)) 
     (< A C)
  replacee substitution
  A lteq2i
  mpbi
)



## <title> One-Digit Inequality </title>
thm (1less2 () () (< (1) (2))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (1) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      1plus1
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (1less3 () () (< (1) (3))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (1) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      1plus2
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (1less4 () () (< (1) (4))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (1) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      1plus3
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (1less5 () () (< (1) (5))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (1) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      1plus4
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (1less6 () () (< (1) (6))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less5
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (1) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      1plus5
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (1less7 () () (< (1) (7))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less6
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (1) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      1plus6
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (1less8 () () (< (1) (8))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (1) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      1plus7
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (1less9 () () (< (1) (9))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (1) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      1plus8
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (1less10 () () (< (1) (10))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (1) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      1plus9
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (1greater0 () () (> (1) (0))
  1notEqual0
  ## <d 'Greater Than Or Equal To Zero'>
    (1) ge0
  ## </d 'Greater Than Or Equal To Zero'>
  axgrtrii
)

## <title> Substitution </title>
## <table>
##   (>  [ A ]   ]   ]  C)
##   (=  [ A ]   [ B ] )
##   (>  [   [   [ B ]  C)
## </table>
thm (EqReplaceGt0 () (
     replacee (> A C)
     substitution (= A B)) 
     (> B C)
  replacee substitution
  C gteq1i
  mpbi
)

## <title> Substitution </title>
## <table>
##   (> A  [ B ]   ]   ] )
##   (=    [ B ]   [ C ] )
##   (> A  [   [   [ C ] )
## </table>
thm (EqReplaceGt1 () (
     replacee (> A B)
     substitution (= B C)) 
     (> A C)
  replacee substitution
  A gteq2i
  mpbi
)




## <title> One-Digit Inequality </title>
thm (2greater1 () () (> (2) (1))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      1plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (1) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (2less3 () () (< (2) (3))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (2) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (2) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      2plus1
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (2less4 () () (< (2) (4))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (2) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (2) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      2plus2
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (2less5 () () (< (2) (5))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (2) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (2) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      2plus3
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (2less6 () () (< (2) (6))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (2) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (2) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      2plus4
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (2less7 () () (< (2) (7))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less5
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (2) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (2) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      2plus5
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (2less8 () () (< (2) (8))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less6
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (2) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (2) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      2plus6
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (2less9 () () (< (2) (9))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (2) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (2) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      2plus7
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (2less10 () () (< (2) (10))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (2) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (2) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      2plus8
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (2greater0 () () (> (2) (0))
  2notEqual0
  ## <d 'Greater Than Or Equal To Zero'>
    (2) ge0
  ## </d 'Greater Than Or Equal To Zero'>
  axgrtrii
)


## <title> One-Digit Inequality </title>
thm (3greater1 () () (> (3) (1))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      2greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      1plus2
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (1) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (3greater2 () () (> (3) (2))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (2) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      2plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (2) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (3less4 () () (< (3) (4))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (3) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (3) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      3plus1
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (3less5 () () (< (3) (5))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (3) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (3) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      3plus2
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (3less6 () () (< (3) (6))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (3) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (3) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      3plus3
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (3less7 () () (< (3) (7))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (3) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (3) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      3plus4
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (3less8 () () (< (3) (8))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less5
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (3) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (3) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      3plus5
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (3less9 () () (< (3) (9))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less6
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (3) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (3) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      3plus6
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (3less10 () () (< (3) (10))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (3) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (3) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      3plus7
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (3greater0 () () (> (3) (0))
  3notEqual0
  ## <d 'Greater Than Or Equal To Zero'>
    (3) ge0
  ## </d 'Greater Than Or Equal To Zero'>
  axgrtrii
)


## <title> One-Digit Inequality </title>
thm (4greater1 () () (> (4) (1))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      3greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      1plus3
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (1) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (4greater2 () () (> (4) (2))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      2greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (2) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      2plus2
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (2) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (4greater3 () () (> (4) (3))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (3) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      3plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (3) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (4less5 () () (< (4) (5))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (4) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (4) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      4plus1
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (4less6 () () (< (4) (6))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (4) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (4) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      4plus2
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (4less7 () () (< (4) (7))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (4) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (4) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      4plus3
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (4less8 () () (< (4) (8))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (4) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (4) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      4plus4
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (4less9 () () (< (4) (9))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less5
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (4) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (4) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      4plus5
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (4less10 () () (< (4) (10))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less6
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (4) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (4) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      4plus6
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (4greater0 () () (> (4) (0))
  4notEqual0
  ## <d 'Greater Than Or Equal To Zero'>
    (4) ge0
  ## </d 'Greater Than Or Equal To Zero'>
  axgrtrii
)


## <title> One-Digit Inequality </title>
thm (5greater1 () () (> (5) (1))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      4greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      1plus4
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (1) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (5greater2 () () (> (5) (2))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      3greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (2) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      2plus3
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (2) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (5greater3 () () (> (5) (3))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      2greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (3) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      3plus2
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (3) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (5greater4 () () (> (5) (4))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (4) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      4plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (4) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (5less6 () () (< (5) (6))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (5) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (5) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      5plus1
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (5less7 () () (< (5) (7))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (5) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (5) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      5plus2
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (5less8 () () (< (5) (8))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (5) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (5) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      5plus3
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (5less9 () () (< (5) (9))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (5) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (5) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      5plus4
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (5less10 () () (< (5) (10))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less5
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (5) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (5) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      5plus5
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (5greater0 () () (> (5) (0))
  5notEqual0
  ## <d 'Greater Than Or Equal To Zero'>
    (5) ge0
  ## </d 'Greater Than Or Equal To Zero'>
  axgrtrii
)


## <title> One-Digit Inequality </title>
thm (6greater1 () () (> (6) (1))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      5greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      1plus5
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (1) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (6greater2 () () (> (6) (2))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      4greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (2) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      2plus4
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (2) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (6greater3 () () (> (6) (3))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      3greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (3) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      3plus3
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (3) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (6greater4 () () (> (6) (4))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      2greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (4) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      4plus2
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (4) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (6greater5 () () (> (6) (5))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (5) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      5plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (5) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (6less7 () () (< (6) (7))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (6) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (6) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      6plus1
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (6less8 () () (< (6) (8))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (6) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (6) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      6plus2
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (6less9 () () (< (6) (9))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (6) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (6) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      6plus3
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (6less10 () () (< (6) (10))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (6) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (6) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      6plus4
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (6greater0 () () (> (6) (0))
  6notEqual0
  ## <d 'Greater Than Or Equal To Zero'>
    (6) ge0
  ## </d 'Greater Than Or Equal To Zero'>
  axgrtrii
)


## <title> One-Digit Inequality </title>
thm (7greater1 () () (> (7) (1))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      6greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      1plus6
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (1) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (7greater2 () () (> (7) (2))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      5greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (2) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      2plus5
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (2) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (7greater3 () () (> (7) (3))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      4greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (3) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      3plus4
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (3) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (7greater4 () () (> (7) (4))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      3greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (4) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      4plus3
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (4) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (7greater5 () () (> (7) (5))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      2greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (5) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      5plus2
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (5) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (7greater6 () () (> (7) (6))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (6) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      6plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (6) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (7less8 () () (< (7) (8))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (7) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (7) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      7plus1
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (7less9 () () (< (7) (9))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (7) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (7) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      7plus2
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (7less10 () () (< (7) (10))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (7) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (7) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      7plus3
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (7greater0 () () (> (7) (0))
  7notEqual0
  ## <d 'Greater Than Or Equal To Zero'>
    (7) ge0
  ## </d 'Greater Than Or Equal To Zero'>
  axgrtrii
)


## <title> One-Digit Inequality </title>
thm (8greater1 () () (> (8) (1))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      7greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      1plus7
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (1) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (8greater2 () () (> (8) (2))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      6greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (2) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      2plus6
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (2) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (8greater3 () () (> (8) (3))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      5greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (3) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      3plus5
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (3) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (8greater4 () () (> (8) (4))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      4greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (4) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      4plus4
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (4) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (8greater5 () () (> (8) (5))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      3greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (5) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      5plus3
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (5) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (8greater6 () () (> (8) (6))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      2greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (6) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      6plus2
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (6) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (8greater7 () () (> (8) (7))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (7) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      7plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (7) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (8less9 () () (< (8) (9))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (8) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (8) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      8plus1
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (8less10 () () (< (8) (10))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (8) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (8) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      8plus2
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (8greater0 () () (> (8) (0))
  8notEqual0
  ## <d 'Greater Than Or Equal To Zero'>
    (8) ge0
  ## </d 'Greater Than Or Equal To Zero'>
  axgrtrii
)


## <title> One-Digit Inequality </title>
thm (9greater1 () () (> (9) (1))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      8greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      1plus8
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (1) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (9greater2 () () (> (9) (2))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      7greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (2) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      2plus7
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (2) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (9greater3 () () (> (9) (3))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      6greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (3) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      3plus6
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (3) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (9greater4 () () (> (9) (4))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      5greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (4) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      4plus5
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (4) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (9greater5 () () (> (9) (5))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      4greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (5) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      5plus4
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (5) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (9greater6 () () (> (9) (6))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      3greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (6) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      6plus3
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (6) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (9greater7 () () (> (9) (7))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      2greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (7) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      7plus2
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (7) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (9greater8 () () (> (9) (8))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (8) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      8plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (8) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (9less10 () () (< (9) (10))
  ## <d 'Single-Digit Inequality'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (9) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (9) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      9plus1
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Single-Digit Inequality'>
)

## <title> One-Digit Inequality </title>
thm (9greater0 () () (> (9) (0))
  9notEqual0
  ## <d 'Greater Than Or Equal To Zero'>
    (9) ge0
  ## </d 'Greater Than Or Equal To Zero'>
  axgrtrii
)


## <title> One-Digit Inequality </title>
thm (10greater1 () () (> (10) (1))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      9greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (1) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      1plus9
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (1) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (10greater2 () () (> (10) (2))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      8greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (2) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      2plus8
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (2) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (10greater3 () () (> (10) (3))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      7greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (3) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      3plus7
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (3) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (10greater4 () () (> (10) (4))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      6greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (4) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      4plus6
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (4) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (10greater5 () () (> (10) (5))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      5greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (5) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      5plus5
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (5) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (10greater6 () () (> (10) (6))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      4greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (6) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      6plus4
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (6) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (10greater7 () () (> (10) (7))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      3greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (7) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      7plus3
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (7) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (10greater8 () () (> (10) (8))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      2greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (8) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      8plus2
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (8) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (10greater9 () () (> (10) (9))
  ## <d 'Add To Both Sides'>
    ## <d 'Derive Smaller Inequality'>
      1greater0
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (9) gtadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      9plus1
      EqReplaceGt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      (9) pa_ax3
      EqReplaceGt1
    ## </d 'Simplify Right Side'>
  ## </d 'Add To Both Sides'>
)

## <title> One-Digit Inequality </title>
thm (1notEqual2 () () (-. (= (1) (2)))
  1less2
  ## <d 'Convert to ≠'>
    (1) (2) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (1notEqual3 () () (-. (= (1) (3)))
  1less3
  ## <d 'Convert to ≠'>
    (1) (3) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (1notEqual4 () () (-. (= (1) (4)))
  1less4
  ## <d 'Convert to ≠'>
    (1) (4) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (1notEqual5 () () (-. (= (1) (5)))
  1less5
  ## <d 'Convert to ≠'>
    (1) (5) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (1notEqual6 () () (-. (= (1) (6)))
  1less6
  ## <d 'Convert to ≠'>
    (1) (6) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (1notEqual7 () () (-. (= (1) (7)))
  1less7
  ## <d 'Convert to ≠'>
    (1) (7) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (1notEqual8 () () (-. (= (1) (8)))
  1less8
  ## <d 'Convert to ≠'>
    (1) (8) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (1notEqual9 () () (-. (= (1) (9)))
  1less9
  ## <d 'Convert to ≠'>
    (1) (9) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (1notEqual10 () () (-. (= (1) (10)))
  1less10
  ## <d 'Convert to ≠'>
    (1) (10) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (2notEqual1 () () (-. (= (2) (1)))
  2greater1
  ## <d 'Convert to ≠'>
    (2) (1) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (2notEqual3 () () (-. (= (2) (3)))
  2less3
  ## <d 'Convert to ≠'>
    (2) (3) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (2notEqual4 () () (-. (= (2) (4)))
  2less4
  ## <d 'Convert to ≠'>
    (2) (4) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (2notEqual5 () () (-. (= (2) (5)))
  2less5
  ## <d 'Convert to ≠'>
    (2) (5) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (2notEqual6 () () (-. (= (2) (6)))
  2less6
  ## <d 'Convert to ≠'>
    (2) (6) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (2notEqual7 () () (-. (= (2) (7)))
  2less7
  ## <d 'Convert to ≠'>
    (2) (7) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (2notEqual8 () () (-. (= (2) (8)))
  2less8
  ## <d 'Convert to ≠'>
    (2) (8) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (2notEqual9 () () (-. (= (2) (9)))
  2less9
  ## <d 'Convert to ≠'>
    (2) (9) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (2notEqual10 () () (-. (= (2) (10)))
  2less10
  ## <d 'Convert to ≠'>
    (2) (10) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (3notEqual1 () () (-. (= (3) (1)))
  3greater1
  ## <d 'Convert to ≠'>
    (3) (1) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (3notEqual2 () () (-. (= (3) (2)))
  3greater2
  ## <d 'Convert to ≠'>
    (3) (2) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (3notEqual4 () () (-. (= (3) (4)))
  3less4
  ## <d 'Convert to ≠'>
    (3) (4) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (3notEqual5 () () (-. (= (3) (5)))
  3less5
  ## <d 'Convert to ≠'>
    (3) (5) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (3notEqual6 () () (-. (= (3) (6)))
  3less6
  ## <d 'Convert to ≠'>
    (3) (6) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (3notEqual7 () () (-. (= (3) (7)))
  3less7
  ## <d 'Convert to ≠'>
    (3) (7) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (3notEqual8 () () (-. (= (3) (8)))
  3less8
  ## <d 'Convert to ≠'>
    (3) (8) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (3notEqual9 () () (-. (= (3) (9)))
  3less9
  ## <d 'Convert to ≠'>
    (3) (9) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (3notEqual10 () () (-. (= (3) (10)))
  3less10
  ## <d 'Convert to ≠'>
    (3) (10) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (4notEqual1 () () (-. (= (4) (1)))
  4greater1
  ## <d 'Convert to ≠'>
    (4) (1) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (4notEqual2 () () (-. (= (4) (2)))
  4greater2
  ## <d 'Convert to ≠'>
    (4) (2) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (4notEqual3 () () (-. (= (4) (3)))
  4greater3
  ## <d 'Convert to ≠'>
    (4) (3) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (4notEqual5 () () (-. (= (4) (5)))
  4less5
  ## <d 'Convert to ≠'>
    (4) (5) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (4notEqual6 () () (-. (= (4) (6)))
  4less6
  ## <d 'Convert to ≠'>
    (4) (6) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (4notEqual7 () () (-. (= (4) (7)))
  4less7
  ## <d 'Convert to ≠'>
    (4) (7) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (4notEqual8 () () (-. (= (4) (8)))
  4less8
  ## <d 'Convert to ≠'>
    (4) (8) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (4notEqual9 () () (-. (= (4) (9)))
  4less9
  ## <d 'Convert to ≠'>
    (4) (9) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (4notEqual10 () () (-. (= (4) (10)))
  4less10
  ## <d 'Convert to ≠'>
    (4) (10) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (5notEqual1 () () (-. (= (5) (1)))
  5greater1
  ## <d 'Convert to ≠'>
    (5) (1) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (5notEqual2 () () (-. (= (5) (2)))
  5greater2
  ## <d 'Convert to ≠'>
    (5) (2) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (5notEqual3 () () (-. (= (5) (3)))
  5greater3
  ## <d 'Convert to ≠'>
    (5) (3) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (5notEqual4 () () (-. (= (5) (4)))
  5greater4
  ## <d 'Convert to ≠'>
    (5) (4) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (5notEqual6 () () (-. (= (5) (6)))
  5less6
  ## <d 'Convert to ≠'>
    (5) (6) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (5notEqual7 () () (-. (= (5) (7)))
  5less7
  ## <d 'Convert to ≠'>
    (5) (7) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (5notEqual8 () () (-. (= (5) (8)))
  5less8
  ## <d 'Convert to ≠'>
    (5) (8) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (5notEqual9 () () (-. (= (5) (9)))
  5less9
  ## <d 'Convert to ≠'>
    (5) (9) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (5notEqual10 () () (-. (= (5) (10)))
  5less10
  ## <d 'Convert to ≠'>
    (5) (10) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (6notEqual1 () () (-. (= (6) (1)))
  6greater1
  ## <d 'Convert to ≠'>
    (6) (1) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (6notEqual2 () () (-. (= (6) (2)))
  6greater2
  ## <d 'Convert to ≠'>
    (6) (2) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (6notEqual3 () () (-. (= (6) (3)))
  6greater3
  ## <d 'Convert to ≠'>
    (6) (3) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (6notEqual4 () () (-. (= (6) (4)))
  6greater4
  ## <d 'Convert to ≠'>
    (6) (4) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (6notEqual5 () () (-. (= (6) (5)))
  6greater5
  ## <d 'Convert to ≠'>
    (6) (5) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (6notEqual7 () () (-. (= (6) (7)))
  6less7
  ## <d 'Convert to ≠'>
    (6) (7) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (6notEqual8 () () (-. (= (6) (8)))
  6less8
  ## <d 'Convert to ≠'>
    (6) (8) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (6notEqual9 () () (-. (= (6) (9)))
  6less9
  ## <d 'Convert to ≠'>
    (6) (9) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (6notEqual10 () () (-. (= (6) (10)))
  6less10
  ## <d 'Convert to ≠'>
    (6) (10) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (7notEqual1 () () (-. (= (7) (1)))
  7greater1
  ## <d 'Convert to ≠'>
    (7) (1) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (7notEqual2 () () (-. (= (7) (2)))
  7greater2
  ## <d 'Convert to ≠'>
    (7) (2) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (7notEqual3 () () (-. (= (7) (3)))
  7greater3
  ## <d 'Convert to ≠'>
    (7) (3) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (7notEqual4 () () (-. (= (7) (4)))
  7greater4
  ## <d 'Convert to ≠'>
    (7) (4) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (7notEqual5 () () (-. (= (7) (5)))
  7greater5
  ## <d 'Convert to ≠'>
    (7) (5) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (7notEqual6 () () (-. (= (7) (6)))
  7greater6
  ## <d 'Convert to ≠'>
    (7) (6) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (7notEqual8 () () (-. (= (7) (8)))
  7less8
  ## <d 'Convert to ≠'>
    (7) (8) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (7notEqual9 () () (-. (= (7) (9)))
  7less9
  ## <d 'Convert to ≠'>
    (7) (9) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (7notEqual10 () () (-. (= (7) (10)))
  7less10
  ## <d 'Convert to ≠'>
    (7) (10) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (8notEqual1 () () (-. (= (8) (1)))
  8greater1
  ## <d 'Convert to ≠'>
    (8) (1) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (8notEqual2 () () (-. (= (8) (2)))
  8greater2
  ## <d 'Convert to ≠'>
    (8) (2) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (8notEqual3 () () (-. (= (8) (3)))
  8greater3
  ## <d 'Convert to ≠'>
    (8) (3) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (8notEqual4 () () (-. (= (8) (4)))
  8greater4
  ## <d 'Convert to ≠'>
    (8) (4) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (8notEqual5 () () (-. (= (8) (5)))
  8greater5
  ## <d 'Convert to ≠'>
    (8) (5) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (8notEqual6 () () (-. (= (8) (6)))
  8greater6
  ## <d 'Convert to ≠'>
    (8) (6) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (8notEqual7 () () (-. (= (8) (7)))
  8greater7
  ## <d 'Convert to ≠'>
    (8) (7) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (8notEqual9 () () (-. (= (8) (9)))
  8less9
  ## <d 'Convert to ≠'>
    (8) (9) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (8notEqual10 () () (-. (= (8) (10)))
  8less10
  ## <d 'Convert to ≠'>
    (8) (10) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (9notEqual1 () () (-. (= (9) (1)))
  9greater1
  ## <d 'Convert to ≠'>
    (9) (1) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (9notEqual2 () () (-. (= (9) (2)))
  9greater2
  ## <d 'Convert to ≠'>
    (9) (2) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (9notEqual3 () () (-. (= (9) (3)))
  9greater3
  ## <d 'Convert to ≠'>
    (9) (3) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (9notEqual4 () () (-. (= (9) (4)))
  9greater4
  ## <d 'Convert to ≠'>
    (9) (4) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (9notEqual5 () () (-. (= (9) (5)))
  9greater5
  ## <d 'Convert to ≠'>
    (9) (5) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (9notEqual6 () () (-. (= (9) (6)))
  9greater6
  ## <d 'Convert to ≠'>
    (9) (6) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (9notEqual7 () () (-. (= (9) (7)))
  9greater7
  ## <d 'Convert to ≠'>
    (9) (7) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (9notEqual8 () () (-. (= (9) (8)))
  9greater8
  ## <d 'Convert to ≠'>
    (9) (8) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (9notEqual10 () () (-. (= (9) (10)))
  9less10
  ## <d 'Convert to ≠'>
    (9) (10) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (10notEqual1 () () (-. (= (10) (1)))
  10greater1
  ## <d 'Convert to ≠'>
    (10) (1) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (10notEqual2 () () (-. (= (10) (2)))
  10greater2
  ## <d 'Convert to ≠'>
    (10) (2) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (10notEqual3 () () (-. (= (10) (3)))
  10greater3
  ## <d 'Convert to ≠'>
    (10) (3) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (10notEqual4 () () (-. (= (10) (4)))
  10greater4
  ## <d 'Convert to ≠'>
    (10) (4) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (10notEqual5 () () (-. (= (10) (5)))
  10greater5
  ## <d 'Convert to ≠'>
    (10) (5) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (10notEqual6 () () (-. (= (10) (6)))
  10greater6
  ## <d 'Convert to ≠'>
    (10) (6) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (10notEqual7 () () (-. (= (10) (7)))
  10greater7
  ## <d 'Convert to ≠'>
    (10) (7) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (10notEqual8 () () (-. (= (10) (8)))
  10greater8
  ## <d 'Convert to ≠'>
    (10) (8) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> One-Digit Inequality </title>
thm (10notEqual9 () () (-. (= (10) (9)))
  10greater9
  ## <d 'Convert to ≠'>
    (10) (9) gtneq
    ax-mp
  ## </d 'Convert to ≠'>
)


## <title> Substitution </title>
## <table>
##   (= A (+ (+  [ B ]   ]   ]  D) A'))
##   (=          [ B ]   [ C ] )
##   (= A (+ (+  [   [   [ C ]  D) A'))
## </table>
thm (EqReplaceEq1Add0Add0 () (
     replacee (= A (+ (+ B D) A'))
     substitution (= B C)) 
     (= A (+ (+ C D) A'))
  replacee
  substitution
D addeq1i
A' addeq1i
A eqeq2i
mpbi
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ B (*  [ C ]   ]   ]  A')) B'))
##   (=               [ C ]   [ D ] )
##   (= A (+ (+ B (*  [   [   [ D ]  A')) B'))
## </table>
thm (EqReplaceEq1Add0Add1Mul0 () (
     replacee (= A (+ (+ B (* C A')) B'))
     substitution (= C D)) 
     (= A (+ (+ B (* D A')) B'))
  replacee
  substitution
A' muleq1i
B addeq2i
B' addeq1i
A eqeq2i
mpbi
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ (*  [ B ]   ]   ]  D) A') B'))
##   (=             [ B ]   [ C ] )
##   (= A (+ (+ (*  [   [   [ C ]  D) A') B'))
## </table>
thm (EqReplaceEq1Add0Add0Mul0 () (
     replacee (= A (+ (+ (* B D) A') B'))
     substitution (= B C)) 
     (= A (+ (+ (* C D) A') B'))
  replacee
  substitution
D muleq1i
A' addeq1i
B' addeq1i
A eqeq2i
mpbi
)

## <summary> This is an example of multi-digit addition. There is nothing particularly remarkable about these specific numbers. </summary>
thm (additionExample() () (= (+ (+ (* (10) (10)) (+ (* (6) (10)) (5))) (+ (* (4) (10)) (7))) (+ (* (2) (* (10) (10))) (+ (10) (2))))
  ## <d 'Evaluate'>
    ## <d 'Addition'>
      ## <d 'Group Common Digits'>
        ## <d 'Rearrange Terms'>
          ## <d 'Associate All Left'>
            ## <d 'Associative Property'>
              (+ (* (10) (10)) (+ (* (6) (10)) (5))) (* (4) (10)) (7) addass
              ## <d 'Commutative Property'>
                (+ (+ (+ (* (10) (10)) (+ (* (6) (10)) (5))) (* (4) (10))) (7)) (+ (+ (* (10) (10)) (+ (* (6) (10)) (5))) (+ (* (4) (10)) (7))) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Associative Property'>
            ## <d 'Associative Property'>
              (* (10) (10)) (* (6) (10)) (5) addass
              ## <d 'Commutative Property'>
                (+ (+ (* (10) (10)) (* (6) (10))) (5)) (+ (* (10) (10)) (+ (* (6) (10)) (5))) eqcom
                mpbi
              ## </d 'Commutative Property'>
                EqReplaceEq1Add0Add0
            ## </d 'Associative Property'>
          ## </d 'Associate All Left'>
          ## <d 'Reorder Terms'>
            ## <d 'Associative Property'>
              (+ (* (10) (10)) (* (6) (10))) (5) (* (4) (10)) addass
              (7) addeq1i
            ## </d 'Associative Property'>
            ## <d 'Commutative Property'>
              (5) (* (4) (10)) addcom
              EqReplaceEq1Add0Add1
            ## </d 'Commutative Property'>
            ## <d 'Associative Property'>
              (+ (* (10) (10)) (* (6) (10))) (* (4) (10)) (5) addass
              ## <d 'Commutative Property'>
                (+ (+ (+ (* (10) (10)) (* (6) (10))) (* (4) (10))) (5)) (+ (+ (* (10) (10)) (* (6) (10))) (+ (* (4) (10)) (5))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0
            ## </d 'Associative Property'>
            EqReplaceEq1
          ## </d 'Reorder Terms'>
          ## <d 'Change Associations'>
            ## <d 'Associative Property'>
              (+ (+ (* (10) (10)) (* (6) (10))) (* (4) (10))) (5) (7) addass
              EqReplaceEq1
            ## </d 'Associative Property'>
            ## <d 'Associative Property'>
              (* (10) (10)) (* (6) (10)) (* (4) (10)) addass
              EqReplaceEq1Add0
            ## </d 'Associative Property'>
          ## </d 'Change Associations'>
        ## </d 'Rearrange Terms'>
        ## <d 'Multiply By One'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (* (10) (10)) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (* (10) (10))) (* (10) (10)) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (* (6) (10)) (* (4) (10))) addeq1i
            ## </d 'Multiply By One'>
            (+ (5) (7)) addeq1i
          ## </d 'Multiply By One'>
          EqReplaceEq1
        ## </d 'Multiply By One'>
        ## <d 'Distributive Property'>
          (6) (4) (10) distl
          ## <d 'Commutative Property'>
            (* (+ (6) (4)) (10)) (+ (* (6) (10)) (* (4) (10))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Add1
        ## </d 'Distributive Property'>
      ## </d 'Group Common Digits'>
      ## <d 'Single-digit Addition'>
        5plus7
        EqReplaceEq1Add1
      ## </d 'Single-digit Addition'>
      ## <d 'Carry the One'>
        ## <d 'Associative Property'>
          (+ (* (1) (* (10) (10))) (* (+ (6) (4)) (10))) (10) (2) addass
          ## <d 'Commutative Property'>
            (+ (+ (+ (* (1) (* (10) (10))) (* (+ (6) (4)) (10))) (10)) (2)) (+ (+ (* (1) (* (10) (10))) (* (+ (6) (4)) (10))) (+ (10) (2))) eqcom
            mpbi
          ## </d 'Commutative Property'>
        ## </d 'Associative Property'>
        ## <d 'Multiply By One'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              (10) mulidr
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (1) (10)) (10) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Evaluate'>
          EqReplaceEq1Add0Add1
        ## </d 'Multiply By One'>
        ## <d 'Associative Property'>
          (* (1) (* (10) (10))) (* (+ (6) (4)) (10)) (* (1) (10)) addass
          EqReplaceEq1Add0
        ## </d 'Associative Property'>
        ## <d 'Distributive Property'>
          (+ (6) (4)) (1) (10) distl
          ## <d 'Commutative Property'>
            (* (+ (+ (6) (4)) (1)) (10)) (+ (* (+ (6) (4)) (10)) (* (1) (10))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Add1
        ## </d 'Distributive Property'>
        EqReplaceEq1
      ## </d 'Carry the One'>
      ## <d 'Single-digit Addition'>
        ## <d 'Evaluate'>
          6plus4
          (1) addeq1i
        ## </d 'Evaluate'>
          EqReplaceEq1Add0Add1Mul0
      ## </d 'Single-digit Addition'>
      ## <d 'Carry the One'>
        ## <d 'Distributive Property'>
          (10) (1) (10) distl
          (* (1) (* (10) (10))) addeq2i
        ## </d 'Distributive Property'>
        ## <d 'Associative Property'>
          (* (1) (* (10) (10))) (* (10) (10)) (* (1) (10)) addass
          ## <d 'Commutative Property'>
            (+ (+ (* (1) (* (10) (10))) (* (10) (10))) (* (1) (10))) (+ (* (1) (* (10) (10))) (+ (* (10) (10)) (* (1) (10)))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1
        ## </d 'Associative Property'>
        ## <d 'Multiply By One'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              (* (10) (10)) mulidr
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (1) (* (10) (10))) (* (10) (10)) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Evaluate'>
          EqReplaceEq1Add0Add1
        ## </d 'Multiply By One'>
        ## <d 'Distributive Property'>
          (1) (1) (* (10) (10)) distl
          ## <d 'Commutative Property'>
            (* (+ (1) (1)) (* (10) (10))) (+ (* (1) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0
        ## </d 'Distributive Property'>
        EqReplaceEq1Add0
      ## </d 'Carry the One'>
      ## <d 'Single-digit Addition'>
        1plus1
          EqReplaceEq1Add0Add0Mul0
      ## </d 'Single-digit Addition'>
      ## <d 'Simplify'>
        ## <d 'Associative Property'>
          (* (2) (* (10) (10))) (* (1) (10)) (2) addass
        ## </d 'Associative Property'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (2) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1Add1
        ## </d 'Simplify'>
        EqReplaceEq1
      ## </d 'Simplify'>
    ## </d 'Addition'>
  ## </d 'Evaluate'>
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ (+ (+  [ B ]   ]   ]  D) A') B') C'))
##   (=                [ B ]   [ C ] )
##   (= A (+ (+ (+ (+  [   [   [ C ]  D) A') B') C'))
## </table>
thm (EqReplaceEq1Add0Add0Add0Add0 () (
     replacee (= A (+ (+ (+ (+ B D) A') B') C'))
     substitution (= B C)) 
     (= A (+ (+ (+ (+ C D) A') B') C'))
  replacee
  substitution
D addeq1i
A' addeq1i
B' addeq1i
C' addeq1i
A eqeq2i
mpbi
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ (+ (+ B  [ C ]   ]   ] ) A') B') C'))
##   (=                  [ C ]   [ D ] )
##   (= A (+ (+ (+ (+ B  [   [   [ D ] ) A') B') C'))
## </table>
thm (EqReplaceEq1Add0Add0Add0Add1 () (
     replacee (= A (+ (+ (+ (+ B C) A') B') C'))
     substitution (= C D)) 
     (= A (+ (+ (+ (+ B D) A') B') C'))
  replacee
  substitution
B addeq2i
A' addeq1i
B' addeq1i
C' addeq1i
A eqeq2i
mpbi
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ (+  [ B ]   ]   ]  D) A') B'))
##   (=             [ B ]   [ C ] )
##   (= A (+ (+ (+  [   [   [ C ]  D) A') B'))
## </table>
thm (EqReplaceEq1Add0Add0Add0 () (
     replacee (= A (+ (+ (+ B D) A') B'))
     substitution (= B C)) 
     (= A (+ (+ (+ C D) A') B'))
  replacee
  substitution
D addeq1i
A' addeq1i
B' addeq1i
A eqeq2i
mpbi
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ (+ B  [ C ]   ]   ] ) A') B'))
##   (=               [ C ]   [ D ] )
##   (= A (+ (+ (+ B  [   [   [ D ] ) A') B'))
## </table>
thm (EqReplaceEq1Add0Add0Add1 () (
     replacee (= A (+ (+ (+ B C) A') B'))
     substitution (= C D)) 
     (= A (+ (+ (+ B D) A') B'))
  replacee
  substitution
B addeq2i
A' addeq1i
B' addeq1i
A eqeq2i
mpbi
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ (+ (+ (+ B  [ C ]   ]   ] ) A') B') C') D'))
##   (=                     [ C ]   [ D ] )
##   (= A (+ (+ (+ (+ (+ B  [   [   [ D ] ) A') B') C') D'))
## </table>
thm (EqReplaceEq1Add0Add0Add0Add0Add1 () (
     replacee (= A (+ (+ (+ (+ (+ B C) A') B') C') D'))
     substitution (= C D)) 
     (= A (+ (+ (+ (+ (+ B D) A') B') C') D'))
  replacee
  substitution
B addeq2i
A' addeq1i
B' addeq1i
C' addeq1i
D' addeq1i
A eqeq2i
mpbi
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ (+ (+ (+  [ B ]   ]   ]  D) A') B') C') D'))
##   (=                   [ B ]   [ C ] )
##   (= A (+ (+ (+ (+ (+  [   [   [ C ]  D) A') B') C') D'))
## </table>
thm (EqReplaceEq1Add0Add0Add0Add0Add0 () (
     replacee (= A (+ (+ (+ (+ (+ B D) A') B') C') D'))
     substitution (= B C)) 
     (= A (+ (+ (+ (+ (+ C D) A') B') C') D'))
  replacee
  substitution
D addeq1i
A' addeq1i
B' addeq1i
C' addeq1i
D' addeq1i
A eqeq2i
mpbi
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ (+ (+ (+ (+ B  [ C ]   ]   ] ) A') B') C') D') A0))
##   (=                        [ C ]   [ D ] )
##   (= A (+ (+ (+ (+ (+ (+ B  [   [   [ D ] ) A') B') C') D') A0))
## </table>
thm (EqReplaceEq1Add0Add0Add0Add0Add0Add1 () (
     replacee (= A (+ (+ (+ (+ (+ (+ B C) A') B') C') D') A0))
     substitution (= C D)) 
     (= A (+ (+ (+ (+ (+ (+ B D) A') B') C') D') A0))
  replacee
  substitution
B addeq2i
A' addeq1i
B' addeq1i
C' addeq1i
D' addeq1i
A0 addeq1i
A eqeq2i
mpbi
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ (+ B (*  [ C ]   ]   ]  A')) B') C'))
##   (=                  [ C ]   [ D ] )
##   (= A (+ (+ (+ B (*  [   [   [ D ]  A')) B') C'))
## </table>
thm (EqReplaceEq1Add0Add0Add1Mul0 () (
     replacee (= A (+ (+ (+ B (* C A')) B') C'))
     substitution (= C D)) 
     (= A (+ (+ (+ B (* D A')) B') C'))
  replacee
  substitution
A' muleq1i
B addeq2i
B' addeq1i
C' addeq1i
A eqeq2i
mpbi
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ (+ (*  [ B ]   ]   ]  D) A') B') C'))
##   (=                [ B ]   [ C ] )
##   (= A (+ (+ (+ (*  [   [   [ C ]  D) A') B') C'))
## </table>
thm (EqReplaceEq1Add0Add0Add0Mul0 () (
     replacee (= A (+ (+ (+ (* B D) A') B') C'))
     substitution (= B C)) 
     (= A (+ (+ (+ (* C D) A') B') C'))
  replacee
  substitution
D muleq1i
A' addeq1i
B' addeq1i
C' addeq1i
A eqeq2i
mpbi
)

## <summary> This is an example of multi-digit addition. There is nothing particularly remarkable about these specific numbers. </summary>
thm (additionExample2() () (= (+ (+ (* (10) (* (10) (10))) (+ (* (4) (* (10) (10))) (+ (* (9) (10)) (2)))) (+ (* (5) (* (10) (* (10) (10)))) (+ (* (4) (* (10) (10))) (+ (* (8) (10)) (3))))) (+ (* (6) (* (10) (* (10) (10)))) (+ (* (9) (* (10) (10))) (+ (* (7) (10)) (5)))))
  ## <d 'Evaluate'>
    ## <d 'Addition'>
      ## <d 'Group Common Digits'>
        ## <d 'Rearrange Terms'>
          ## <d 'Associate All Left'>
            ## <d 'Associative Property'>
              (+ (* (10) (* (10) (10))) (+ (* (4) (* (10) (10))) (+ (* (9) (10)) (2)))) (* (5) (* (10) (* (10) (10)))) (+ (* (4) (* (10) (10))) (+ (* (8) (10)) (3))) addass
              ## <d 'Commutative Property'>
                (+ (+ (+ (* (10) (* (10) (10))) (+ (* (4) (* (10) (10))) (+ (* (9) (10)) (2)))) (* (5) (* (10) (* (10) (10))))) (+ (* (4) (* (10) (10))) (+ (* (8) (10)) (3)))) (+ (+ (* (10) (* (10) (10))) (+ (* (4) (* (10) (10))) (+ (* (9) (10)) (2)))) (+ (* (5) (* (10) (* (10) (10)))) (+ (* (4) (* (10) (10))) (+ (* (8) (10)) (3))))) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Associative Property'>
            ## <d 'Associative Property'>
              (+ (+ (* (10) (* (10) (10))) (+ (* (4) (* (10) (10))) (+ (* (9) (10)) (2)))) (* (5) (* (10) (* (10) (10))))) (* (4) (* (10) (10))) (+ (* (8) (10)) (3)) addass
              ## <d 'Commutative Property'>
                (+ (+ (+ (+ (* (10) (* (10) (10))) (+ (* (4) (* (10) (10))) (+ (* (9) (10)) (2)))) (* (5) (* (10) (* (10) (10))))) (* (4) (* (10) (10)))) (+ (* (8) (10)) (3))) (+ (+ (+ (* (10) (* (10) (10))) (+ (* (4) (* (10) (10))) (+ (* (9) (10)) (2)))) (* (5) (* (10) (* (10) (10))))) (+ (* (4) (* (10) (10))) (+ (* (8) (10)) (3)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1
            ## </d 'Associative Property'>
            ## <d 'Associative Property'>
              (+ (+ (+ (* (10) (* (10) (10))) (+ (* (4) (* (10) (10))) (+ (* (9) (10)) (2)))) (* (5) (* (10) (* (10) (10))))) (* (4) (* (10) (10)))) (* (8) (10)) (3) addass
              ## <d 'Commutative Property'>
                (+ (+ (+ (+ (+ (* (10) (* (10) (10))) (+ (* (4) (* (10) (10))) (+ (* (9) (10)) (2)))) (* (5) (* (10) (* (10) (10))))) (* (4) (* (10) (10)))) (* (8) (10))) (3)) (+ (+ (+ (+ (* (10) (* (10) (10))) (+ (* (4) (* (10) (10))) (+ (* (9) (10)) (2)))) (* (5) (* (10) (* (10) (10))))) (* (4) (* (10) (10)))) (+ (* (8) (10)) (3))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1
            ## </d 'Associative Property'>
            ## <d 'Associative Property'>
              (* (10) (* (10) (10))) (* (4) (* (10) (10))) (+ (* (9) (10)) (2)) addass
              ## <d 'Commutative Property'>
                (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (+ (* (9) (10)) (2))) (+ (* (10) (* (10) (10))) (+ (* (4) (* (10) (10))) (+ (* (9) (10)) (2)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
                EqReplaceEq1Add0Add0Add0Add0
            ## </d 'Associative Property'>
            ## <d 'Associative Property'>
              (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (9) (10)) (2) addass
              ## <d 'Commutative Property'>
                (+ (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (9) (10))) (2)) (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (+ (* (9) (10)) (2))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0Add0Add0Add0
            ## </d 'Associative Property'>
          ## </d 'Associate All Left'>
          ## <d 'Reorder Terms'>
            ## <d 'Associative Property'>
              (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (9) (10))) (2) (* (5) (* (10) (* (10) (10)))) addass
              (* (4) (* (10) (10))) addeq1i
              (* (8) (10)) addeq1i
              (3) addeq1i
            ## </d 'Associative Property'>
            ## <d 'Commutative Property'>
              (2) (* (5) (* (10) (* (10) (10)))) addcom
                EqReplaceEq1Add0Add0Add0Add1
            ## </d 'Commutative Property'>
            ## <d 'Associative Property'>
              (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (9) (10))) (* (5) (* (10) (* (10) (10)))) (2) addass
              ## <d 'Commutative Property'>
                (+ (+ (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (9) (10))) (* (5) (* (10) (* (10) (10))))) (2)) (+ (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (9) (10))) (+ (* (5) (* (10) (* (10) (10)))) (2))) eqcom
                mpbi
              ## </d 'Commutative Property'>
                EqReplaceEq1Add0Add0Add0
            ## </d 'Associative Property'>
            ## <d 'Associative Property'>
              (+ (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (9) (10))) (* (5) (* (10) (* (10) (10))))) (2) (* (4) (* (10) (10))) addass
              EqReplaceEq1Add0Add0
            ## </d 'Associative Property'>
            ## <d 'Commutative Property'>
              (2) (* (4) (* (10) (10))) addcom
                EqReplaceEq1Add0Add0Add1
            ## </d 'Commutative Property'>
            ## <d 'Associative Property'>
              (+ (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (9) (10))) (* (5) (* (10) (* (10) (10))))) (* (4) (* (10) (10))) (2) addass
              ## <d 'Commutative Property'>
                (+ (+ (+ (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (9) (10))) (* (5) (* (10) (* (10) (10))))) (* (4) (* (10) (10)))) (2)) (+ (+ (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (9) (10))) (* (5) (* (10) (* (10) (10))))) (+ (* (4) (* (10) (10))) (2))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0Add0
            ## </d 'Associative Property'>
            ## <d 'Associative Property'>
              (+ (+ (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (9) (10))) (* (5) (* (10) (* (10) (10))))) (* (4) (* (10) (10)))) (2) (* (8) (10)) addass
              EqReplaceEq1Add0
            ## </d 'Associative Property'>
            ## <d 'Commutative Property'>
              (2) (* (8) (10)) addcom
              EqReplaceEq1Add0Add1
            ## </d 'Commutative Property'>
            ## <d 'Associative Property'>
              (+ (+ (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (9) (10))) (* (5) (* (10) (* (10) (10))))) (* (4) (* (10) (10)))) (* (8) (10)) (2) addass
              ## <d 'Commutative Property'>
                (+ (+ (+ (+ (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (9) (10))) (* (5) (* (10) (* (10) (10))))) (* (4) (* (10) (10)))) (* (8) (10))) (2)) (+ (+ (+ (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (9) (10))) (* (5) (* (10) (* (10) (10))))) (* (4) (* (10) (10)))) (+ (* (8) (10)) (2))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0
            ## </d 'Associative Property'>
            ## <d 'Associative Property'>
              (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (9) (10)) (* (5) (* (10) (* (10) (10)))) addass
              EqReplaceEq1Add0Add0Add0Add0
            ## </d 'Associative Property'>
            ## <d 'Commutative Property'>
              (* (9) (10)) (* (5) (* (10) (* (10) (10)))) addcom
                EqReplaceEq1Add0Add0Add0Add0Add1
            ## </d 'Commutative Property'>
            ## <d 'Associative Property'>
              (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (5) (* (10) (* (10) (10)))) (* (9) (10)) addass
              ## <d 'Commutative Property'>
                (+ (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (5) (* (10) (* (10) (10))))) (* (9) (10))) (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (+ (* (5) (* (10) (* (10) (10)))) (* (9) (10)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0Add0Add0Add0
            ## </d 'Associative Property'>
            ## <d 'Associative Property'>
              (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (5) (* (10) (* (10) (10))))) (* (9) (10)) (* (4) (* (10) (10))) addass
              EqReplaceEq1Add0Add0Add0
            ## </d 'Associative Property'>
            ## <d 'Commutative Property'>
              (* (9) (10)) (* (4) (* (10) (10))) addcom
              EqReplaceEq1Add0Add0Add0Add1
            ## </d 'Commutative Property'>
            ## <d 'Associative Property'>
              (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (5) (* (10) (* (10) (10))))) (* (4) (* (10) (10))) (* (9) (10)) addass
              ## <d 'Commutative Property'>
                (+ (+ (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (5) (* (10) (* (10) (10))))) (* (4) (* (10) (10)))) (* (9) (10))) (+ (+ (+ (* (10) (* (10) (10))) (* (4) (* (10) (10)))) (* (5) (* (10) (* (10) (10))))) (+ (* (4) (* (10) (10))) (* (9) (10)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0Add0Add0
            ## </d 'Associative Property'>
            ## <d 'Associative Property'>
              (* (10) (* (10) (10))) (* (4) (* (10) (10))) (* (5) (* (10) (* (10) (10)))) addass
                EqReplaceEq1Add0Add0Add0Add0Add0
            ## </d 'Associative Property'>
            ## <d 'Commutative Property'>
              (* (4) (* (10) (10))) (* (5) (* (10) (* (10) (10)))) addcom
                EqReplaceEq1Add0Add0Add0Add0Add0Add1
            ## </d 'Commutative Property'>
            ## <d 'Associative Property'>
              (* (10) (* (10) (10))) (* (5) (* (10) (* (10) (10)))) (* (4) (* (10) (10))) addass
              ## <d 'Commutative Property'>
                (+ (+ (* (10) (* (10) (10))) (* (5) (* (10) (* (10) (10))))) (* (4) (* (10) (10)))) (+ (* (10) (* (10) (10))) (+ (* (5) (* (10) (* (10) (10)))) (* (4) (* (10) (10))))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0Add0Add0Add0Add0
            ## </d 'Associative Property'>
            EqReplaceEq1
          ## </d 'Reorder Terms'>
          ## <d 'Change Associations'>
            ## <d 'Associative Property'>
              (+ (+ (+ (+ (+ (* (10) (* (10) (10))) (* (5) (* (10) (* (10) (10))))) (* (4) (* (10) (10)))) (* (4) (* (10) (10)))) (* (9) (10))) (* (8) (10))) (2) (3) addass
              EqReplaceEq1
            ## </d 'Associative Property'>
            ## <d 'Associative Property'>
              (+ (+ (+ (* (10) (* (10) (10))) (* (5) (* (10) (* (10) (10))))) (* (4) (* (10) (10)))) (* (4) (* (10) (10)))) (* (9) (10)) (* (8) (10)) addass
              EqReplaceEq1Add0
            ## </d 'Associative Property'>
            ## <d 'Associative Property'>
              (+ (* (10) (* (10) (10))) (* (5) (* (10) (* (10) (10))))) (* (4) (* (10) (10))) (* (4) (* (10) (10))) addass
              EqReplaceEq1Add0Add0
            ## </d 'Associative Property'>
          ## </d 'Change Associations'>
        ## </d 'Rearrange Terms'>
        ## <d 'Multiply By One'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Evaluate'>
                    ## <d 'Evaluate'>
                      (* (10) (* (10) (10))) mulidr
                    ## </d 'Evaluate'>
                    ## <d 'Commutative Property'>
                      (* (1) (* (10) (* (10) (10)))) (* (10) (* (10) (10))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Evaluate'>
                  (* (5) (* (10) (* (10) (10)))) addeq1i
                ## </d 'Multiply By One'>
                (+ (* (4) (* (10) (10))) (* (4) (* (10) (10)))) addeq1i
              ## </d 'Multiply By One'>
              (+ (* (9) (10)) (* (8) (10))) addeq1i
            ## </d 'Multiply By One'>
            (+ (2) (3)) addeq1i
          ## </d 'Multiply By One'>
          EqReplaceEq1
        ## </d 'Multiply By One'>
        ## <d 'Distributive Property'>
          (1) (5) (* (10) (* (10) (10))) distl
          ## <d 'Commutative Property'>
            (* (+ (1) (5)) (* (10) (* (10) (10)))) (+ (* (1) (* (10) (* (10) (10)))) (* (5) (* (10) (* (10) (10))))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Add0Add0
        ## </d 'Distributive Property'>
        ## <d 'Distributive Property'>
          (4) (4) (* (10) (10)) distl
          ## <d 'Commutative Property'>
            (* (+ (4) (4)) (* (10) (10))) (+ (* (4) (* (10) (10))) (* (4) (* (10) (10)))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Add0Add1
        ## </d 'Distributive Property'>
        ## <d 'Distributive Property'>
          (9) (8) (10) distl
          ## <d 'Commutative Property'>
            (* (+ (9) (8)) (10)) (+ (* (9) (10)) (* (8) (10))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Add1
        ## </d 'Distributive Property'>
      ## </d 'Group Common Digits'>
      ## <d 'Single-digit Addition'>
        2plus3
        EqReplaceEq1Add1
      ## </d 'Single-digit Addition'>
      ## <d 'Single-digit Addition'>
        9plus8
        EqReplaceEq1Add0Add1Mul0
      ## </d 'Single-digit Addition'>
      ## <d 'Carry the One'>
        ## <d 'Distributive Property'>
          (10) (7) (10) distl
          (+ (* (+ (1) (5)) (* (10) (* (10) (10)))) (* (+ (4) (4)) (* (10) (10)))) addeq2i
        ## </d 'Distributive Property'>
        ## <d 'Associative Property'>
          (+ (* (+ (1) (5)) (* (10) (* (10) (10)))) (* (+ (4) (4)) (* (10) (10)))) (* (10) (10)) (* (7) (10)) addass
          ## <d 'Commutative Property'>
            (+ (+ (+ (* (+ (1) (5)) (* (10) (* (10) (10)))) (* (+ (4) (4)) (* (10) (10)))) (* (10) (10))) (* (7) (10))) (+ (+ (* (+ (1) (5)) (* (10) (* (10) (10)))) (* (+ (4) (4)) (* (10) (10)))) (+ (* (10) (10)) (* (7) (10)))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1
        ## </d 'Associative Property'>
        ## <d 'Multiply By One'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              (* (10) (10)) mulidr
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (1) (* (10) (10))) (* (10) (10)) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Evaluate'>
          EqReplaceEq1Add0Add1
        ## </d 'Multiply By One'>
        ## <d 'Associative Property'>
          (* (+ (1) (5)) (* (10) (* (10) (10)))) (* (+ (4) (4)) (* (10) (10))) (* (1) (* (10) (10))) addass
          EqReplaceEq1Add0
        ## </d 'Associative Property'>
        ## <d 'Distributive Property'>
          (+ (4) (4)) (1) (* (10) (10)) distl
          ## <d 'Commutative Property'>
            (* (+ (+ (4) (4)) (1)) (* (10) (10))) (+ (* (+ (4) (4)) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Add1
        ## </d 'Distributive Property'>
        EqReplaceEq1Add0
      ## </d 'Carry the One'>
      ## <d 'Single-digit Addition'>
        ## <d 'Evaluate'>
          4plus4
          (1) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          8plus1
          EqReplaceEq1
        ## </d 'Evaluate'>
          EqReplaceEq1Add0Add0Add1Mul0
      ## </d 'Single-digit Addition'>
      ## <d 'Single-digit Addition'>
        1plus5
          EqReplaceEq1Add0Add0Add0Mul0
      ## </d 'Single-digit Addition'>
      ## <d 'Simplify'>
        ## <d 'Associative Property'>
          (+ (* (6) (* (10) (* (10) (10)))) (* (9) (* (10) (10)))) (* (7) (10)) (5) addass
        ## </d 'Associative Property'>
        ## <d 'Associative Property'>
          (* (6) (* (10) (* (10) (10)))) (* (9) (* (10) (10))) (+ (* (7) (10)) (5)) addass
          EqReplaceEq1
        ## </d 'Associative Property'>
        EqReplaceEq1
      ## </d 'Simplify'>
    ## </d 'Addition'>
  ## </d 'Evaluate'>
)

## <summary> This is an example of multi-digit multiplication. There is nothing particularly remarkable about these specific numbers. </summary>
thm (multiplicationExample () () (= (* (+ (10) (7)) (+ (10) (3))) (+ (* (2) (* (10) (10))) (+ (* (2) (10)) (1))))
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (+ (10) (7)) (10) (3) distr
        ## </d 'Distributive Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            ## <d 'One-Digit times Multiple-Digits'>
              ## <d 'Rearrange Digits'>
                ## <d 'Distributive Property'>
                  (10) (7) (3) distl
                ## </d 'Distributive Property'>
              ## </d 'Rearrange Digits'>
              ## <d 'Multiply Two Digits'>
                ## <d 'Evaluate'>
                  7times3
                ## </d 'Evaluate'>
                EqReplaceEq1Add1
              ## </d 'Multiply Two Digits'>
              ## <d 'Multiply Two Digits'>
                ## <d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (10) (3) mulcom
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                EqReplaceEq1Add0
              ## </d 'Multiply Two Digits'>
              ## <d 'Evaluate'>
                ## <d 'Addition'>
                  ## <d 'Group Common Digits'>
                    ## <d 'Rearrange Terms'>
                      ## <d 'Associate All Left'>
                        ## <d 'Associative Property'>
                          (* (3) (10)) (* (2) (10)) (1) addass
                          ## <d 'Commutative Property'>
                            (+ (+ (* (3) (10)) (* (2) (10))) (1)) (+ (* (3) (10)) (+ (* (2) (10)) (1))) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Associative Property'>
                      ## </d 'Associate All Left'>
                    ## </d 'Rearrange Terms'>
                    ## <d 'Distributive Property'>
                      (3) (2) (10) distl
                      ## <d 'Commutative Property'>
                        (* (+ (3) (2)) (10)) (+ (* (3) (10)) (* (2) (10))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                      EqReplaceEq1Add0
                    ## </d 'Distributive Property'>
                  ## </d 'Group Common Digits'>
                  ## <d 'Single-digit Addition'>
                    3plus2
                    EqReplaceEq1Add0Mul0
                  ## </d 'Single-digit Addition'>
                ## </d 'Addition'>
                EqReplaceEq1
              ## </d 'Evaluate'>
            ## </d 'One-Digit times Multiple-Digits'>
          ## </d 'Multiply Base'>
          (* (+ (10) (7)) (10)) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            ## <d 'Distributive Property'>
              (10) (7) (10) distl
            ## </d 'Distributive Property'>
          ## </d 'Multiply Base'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
      ## <d 'Sum the Total'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  (+ (* (10) (10)) (* (7) (10))) (* (5) (10)) (1) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (+ (* (10) (10)) (* (7) (10))) (* (5) (10))) (1)) (+ (+ (* (10) (10)) (* (7) (10))) (+ (* (5) (10)) (1))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (* (10) (10)) (* (7) (10)) (* (5) (10)) addass
                  (1) addeq1i
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Evaluate'>
                    ## <d 'Evaluate'>
                      (* (10) (10)) mulidr
                    ## </d 'Evaluate'>
                    ## <d 'Commutative Property'>
                      (* (1) (* (10) (10))) (* (10) (10)) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Evaluate'>
                  (+ (* (7) (10)) (* (5) (10))) addeq1i
                ## </d 'Multiply By One'>
                (1) addeq1i
              ## </d 'Multiply By One'>
              EqReplaceEq1
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (7) (5) (10) distl
              ## <d 'Commutative Property'>
                (* (+ (7) (5)) (10)) (+ (* (7) (10)) (* (5) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0Add1
            ## </d 'Distributive Property'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            7plus5
            EqReplaceEq1Add0Add1Mul0
          ## </d 'Single-digit Addition'>
          ## <d 'Carry the One'>
            ## <d 'Distributive Property'>
              (10) (2) (10) distl
              (* (1) (* (10) (10))) addeq2i
            ## </d 'Distributive Property'>
            ## <d 'Associative Property'>
              (* (1) (* (10) (10))) (* (10) (10)) (* (2) (10)) addass
              ## <d 'Commutative Property'>
                (+ (+ (* (1) (* (10) (10))) (* (10) (10))) (* (2) (10))) (+ (* (1) (* (10) (10))) (+ (* (10) (10)) (* (2) (10)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1
            ## </d 'Associative Property'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (* (10) (10)) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (* (10) (10))) (* (10) (10)) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              EqReplaceEq1Add0Add1
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (1) (1) (* (10) (10)) distl
              ## <d 'Commutative Property'>
                (* (+ (1) (1)) (* (10) (10))) (+ (* (1) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0
            ## </d 'Distributive Property'>
            EqReplaceEq1Add0
          ## </d 'Carry the One'>
          ## <d 'Single-digit Addition'>
            1plus1
            EqReplaceEq1Add0Add0Mul0
          ## </d 'Single-digit Addition'>
          ## <d 'Simplify'>
            ## <d 'Associative Property'>
              (* (2) (* (10) (10))) (* (2) (10)) (1) addass
            ## </d 'Associative Property'>
            EqReplaceEq1
          ## </d 'Simplify'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Sum the Total'>
    ## </d 'Multiplication'>
  ## </d 'Evaluate'>
)

## <title> Substitution </title>
## <table>
##   (= A (+ B (+ C  [ D ]   ]    ] )))
##   (=              [ D ]   [ A' ] )
##   (= A (+ B (+ C  [   [   [ A' ] )))
## </table>
thm (EqReplaceEq1Add1Add1 () (
     replacee (= A (+ B (+ C D)))
     substitution (= D A')) 
     (= A (+ B (+ C A')))
  replacee substitution
  C addeq2i
  EqReplaceEq1Add1
)

## <title> Substitution </title>
## <table>
##   (= A (* B  [ C ]   ]   ] ))
##   (=         [ C ]   [ D ] )
##   (= A (* B  [   [   [ D ] ))
## </table>
thm (EqReplaceEq1Mul1 () (
     replacee (= A (* B C))
     substitution (= C D)) 
     (= A (* B D))
  replacee substitution
  B muleq2i
  EqReplaceEq1
)

## <title> Substitution </title>
## <table>
##   (= A (+ B (+  [ C ]   ]   ]  A')))
##   (=            [ C ]   [ D ] )
##   (= A (+ B (+  [   [   [ D ]  A')))
## </table>
thm (EqReplaceEq1Add1Add0 () (
     replacee (= A (+ B (+ C A')))
     substitution (= C D)) 
     (= A (+ B (+ D A')))
  replacee substitution
  A' addeq1i
  EqReplaceEq1Add1
)

## <title> Substitution </title>
## <table>
##   (= A (+ (+ (+ (+ B (*  [ C ]   ]   ]  A')) B') C') D'))
##   (=                     [ C ]   [ D ] )
##   (= A (+ (+ (+ (+ B (*  [   [   [ D ]  A')) B') C') D'))
## </table>
thm (EqReplaceEq1Add0Add0Add0Add1Mul0 () (
     replacee (= A (+ (+ (+ (+ B (* C A')) B') C') D'))
     substitution (= C D)) 
     (= A (+ (+ (+ (+ B (* D A')) B') C') D'))
  replacee substitution
  A' muleq1i
  EqReplaceEq1Add0Add0Add0Add1
)

## <summary> This is an example of multi-digit multiplication. There is nothing particularly remarkable about these specific numbers. </summary>
thm (multiplicationExample2 () () (= (* (+ (* (3) (* (10) (10))) (+ (* (8) (10)) (7))) (+ (* (2) (* (10) (10))) (3))) (+ (* (7) (* (10) (* (10) (* (10) (10))))) (+ (* (8) (* (10) (* (10) (10)))) (+ (* (5) (* (10) (10))) (+ (* (6) (10)) (1))))))
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (+ (* (3) (* (10) (10))) (+ (* (8) (10)) (7))) (* (2) (* (10) (10))) (3) distr
        ## </d 'Distributive Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Pull Out Base 10'>
        ## <d 'Associative Property'>
          (+ (* (3) (* (10) (10))) (+ (* (8) (10)) (7))) (2) (* (10) (10)) mulass
          ## <d 'Commutative Property'>
            (* (* (+ (* (3) (* (10) (10))) (+ (* (8) (10)) (7))) (2)) (* (10) (10))) (* (+ (* (3) (* (10) (10))) (+ (* (8) (10)) (7))) (* (2) (* (10) (10)))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (* (+ (* (3) (* (10) (10))) (+ (* (8) (10)) (7))) (3)) addeq1i
        ## </d 'Associative Property'>
        EqReplaceEq1
      ## </d 'Pull Out Base 10'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            ## <d 'One-Digit times Multiple-Digits'>
              ## <d 'Rearrange Digits'>
                ## <d 'Distributive Property'>
                  (* (3) (* (10) (10))) (+ (* (8) (10)) (7)) (3) distl
                ## </d 'Distributive Property'>
                ## <d 'Distributive Property'>
                  (* (8) (10)) (7) (3) distl
                  EqReplaceEq1Add1
                ## </d 'Distributive Property'>
              ## </d 'Rearrange Digits'>
              ## <d 'Multiply Two Digits'>
                ## <d 'Evaluate'>
                  7times3
                ## </d 'Evaluate'>
                  EqReplaceEq1Add1Add1
              ## </d 'Multiply Two Digits'>
              ## <d 'Multiply Two Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Reorder Terms'>
                    ## <d 'Associative Property'>
                      (8) (10) (3) mulass
                    ## </d 'Associative Property'>
                    ## <d 'Commutative Property'>
                      (10) (3) mulcom
                        EqReplaceEq1Mul1
                    ## </d 'Commutative Property'>
                    ## <d 'Associative Property'>
                      (8) (3) (10) mulass
                      ## <d 'Commutative Property'>
                        (* (* (8) (3)) (10)) (* (8) (* (3) (10))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                      EqReplaceEq1
                    ## </d 'Associative Property'>
                  ## </d 'Reorder Terms'>
                ## </d 'Rearrange Terms'>
                ## <d 'Evaluate'>
                  8times3
                  EqReplaceEq1Mul0
                ## </d 'Evaluate'>
                ## <d 'Evaluate'>
                  ## <d 'Distributive Property'>
                    (* (2) (10)) (4) (10) distl
                  ## </d 'Distributive Property'>
                  ## <d 'Evaluate'>
                    ## <d 'Associative Property'>
                      (2) (10) (10) mulass
                    ## </d 'Associative Property'>
                    EqReplaceEq1Add0
                  ## </d 'Evaluate'>
                  EqReplaceEq1
                ## </d 'Evaluate'>
                  EqReplaceEq1Add1Add0
              ## </d 'Multiply Two Digits'>
              ## <d 'Evaluate'>
                ## <d 'Addition'>
                  ## <d 'Group Common Digits'>
                    ## <d 'Rearrange Terms'>
                      ## <d 'Associate All Left'>
                        ## <d 'Associative Property'>
                          (+ (* (2) (* (10) (10))) (* (4) (10))) (* (2) (10)) (1) addass
                          ## <d 'Commutative Property'>
                            (+ (+ (+ (* (2) (* (10) (10))) (* (4) (10))) (* (2) (10))) (1)) (+ (+ (* (2) (* (10) (10))) (* (4) (10))) (+ (* (2) (10)) (1))) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Associative Property'>
                      ## </d 'Associate All Left'>
                      ## <d 'Change Associations'>
                        ## <d 'Associative Property'>
                          (* (2) (* (10) (10))) (* (4) (10)) (* (2) (10)) addass
                          (1) addeq1i
                        ## </d 'Associative Property'>
                        EqReplaceEq1
                      ## </d 'Change Associations'>
                    ## </d 'Rearrange Terms'>
                    ## <d 'Distributive Property'>
                      (4) (2) (10) distl
                      ## <d 'Commutative Property'>
                        (* (+ (4) (2)) (10)) (+ (* (4) (10)) (* (2) (10))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                      EqReplaceEq1Add0Add1
                    ## </d 'Distributive Property'>
                  ## </d 'Group Common Digits'>
                  ## <d 'Single-digit Addition'>
                    4plus2
                    EqReplaceEq1Add0Add1Mul0
                  ## </d 'Single-digit Addition'>
                  ## <d 'Simplify'>
                    ## <d 'Associative Property'>
                      (* (2) (* (10) (10))) (* (6) (10)) (1) addass
                    ## </d 'Associative Property'>
                    EqReplaceEq1
                  ## </d 'Simplify'>
                ## </d 'Addition'>
                EqReplaceEq1Add1
              ## </d 'Evaluate'>
              ## <d 'Multiply Two Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Reorder Terms'>
                    ## <d 'Associative Property'>
                      (3) (* (10) (10)) (3) mulass
                    ## </d 'Associative Property'>
                    ## <d 'Commutative Property'>
                      (* (10) (10)) (3) mulcom
                      EqReplaceEq1Mul1
                    ## </d 'Commutative Property'>
                    ## <d 'Associative Property'>
                      (3) (3) (* (10) (10)) mulass
                      ## <d 'Commutative Property'>
                        (* (* (3) (3)) (* (10) (10))) (* (3) (* (3) (* (10) (10)))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                      EqReplaceEq1
                    ## </d 'Associative Property'>
                  ## </d 'Reorder Terms'>
                ## </d 'Rearrange Terms'>
                ## <d 'Evaluate'>
                  3times3
                  EqReplaceEq1Mul0
                ## </d 'Evaluate'>
                EqReplaceEq1Add0
              ## </d 'Multiply Two Digits'>
              ## <d 'Evaluate'>
                ## <d 'Addition'>
                  ## <d 'Group Common Digits'>
                    ## <d 'Rearrange Terms'>
                      ## <d 'Associate All Left'>
                        ## <d 'Associative Property'>
                          (* (9) (* (10) (10))) (* (2) (* (10) (10))) (+ (* (6) (10)) (1)) addass
                          ## <d 'Commutative Property'>
                            (+ (+ (* (9) (* (10) (10))) (* (2) (* (10) (10)))) (+ (* (6) (10)) (1))) (+ (* (9) (* (10) (10))) (+ (* (2) (* (10) (10))) (+ (* (6) (10)) (1)))) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Associative Property'>
                        ## <d 'Associative Property'>
                          (+ (* (9) (* (10) (10))) (* (2) (* (10) (10)))) (* (6) (10)) (1) addass
                          ## <d 'Commutative Property'>
                            (+ (+ (+ (* (9) (* (10) (10))) (* (2) (* (10) (10)))) (* (6) (10))) (1)) (+ (+ (* (9) (* (10) (10))) (* (2) (* (10) (10)))) (+ (* (6) (10)) (1))) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                          EqReplaceEq1
                        ## </d 'Associative Property'>
                      ## </d 'Associate All Left'>
                    ## </d 'Rearrange Terms'>
                    ## <d 'Distributive Property'>
                      (9) (2) (* (10) (10)) distl
                      ## <d 'Commutative Property'>
                        (* (+ (9) (2)) (* (10) (10))) (+ (* (9) (* (10) (10))) (* (2) (* (10) (10)))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                      EqReplaceEq1Add0Add0
                    ## </d 'Distributive Property'>
                  ## </d 'Group Common Digits'>
                  ## <d 'Single-digit Addition'>
                    9plus2
                    EqReplaceEq1Add0Add0Mul0
                  ## </d 'Single-digit Addition'>
                  ## <d 'Carry the One'>
                    ## <d 'Distributive Property'>
                      (10) (1) (* (10) (10)) distl
                      (* (6) (10)) addeq1i
                    ## </d 'Distributive Property'>
                    ## <d 'Multiply By One'>
                      ## <d 'Multiply By One'>
                        ## <d 'Evaluate'>
                          ## <d 'Evaluate'>
                            (* (10) (* (10) (10))) mulidr
                          ## </d 'Evaluate'>
                          ## <d 'Commutative Property'>
                            (* (1) (* (10) (* (10) (10)))) (* (10) (* (10) (10))) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Evaluate'>
                        (* (1) (* (10) (10))) addeq1i
                      ## </d 'Multiply By One'>
                      EqReplaceEq1Add0
                    ## </d 'Multiply By One'>
                    ## <d 'Associative Property'>
                      (* (1) (* (10) (* (10) (10)))) (* (1) (* (10) (10))) (* (6) (10)) addass
                      EqReplaceEq1
                    ## </d 'Associative Property'>
                    EqReplaceEq1Add0
                  ## </d 'Carry the One'>
                  ## <d 'Simplify'>
                    ## <d 'Associative Property'>
                      (* (1) (* (10) (* (10) (10)))) (+ (* (1) (* (10) (10))) (* (6) (10))) (1) addass
                    ## </d 'Associative Property'>
                    ## <d 'Simplify'>
                      ## <d 'Multiplicative Identity'>
                        (* (10) (* (10) (10))) mulidr
                      ## </d 'Multiplicative Identity'>
                      EqReplaceEq1Add0
                    ## </d 'Simplify'>
                    ## <d 'Simplify'>
                      ## <d 'Associative Property'>
                        (* (1) (* (10) (10))) (* (6) (10)) (1) addass
                      ## </d 'Associative Property'>
                      ## <d 'Simplify'>
                        ## <d 'Multiplicative Identity'>
                          (* (10) (10)) mulidr
                        ## </d 'Multiplicative Identity'>
                        EqReplaceEq1Add0
                      ## </d 'Simplify'>
                      EqReplaceEq1Add1
                    ## </d 'Simplify'>
                    EqReplaceEq1
                  ## </d 'Simplify'>
                ## </d 'Addition'>
                EqReplaceEq1
              ## </d 'Evaluate'>
            ## </d 'One-Digit times Multiple-Digits'>
          ## </d 'Multiply Base'>
          (* (* (+ (* (3) (* (10) (10))) (+ (* (8) (10)) (7))) (2)) (* (10) (10))) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Significant Digits'>
            ## <d 'One-Digit times Multiple-Digits'>
              ## <d 'Rearrange Digits'>
                ## <d 'Distributive Property'>
                  (* (3) (* (10) (10))) (+ (* (8) (10)) (7)) (2) distl
                ## </d 'Distributive Property'>
                ## <d 'Distributive Property'>
                  (* (8) (10)) (7) (2) distl
                  EqReplaceEq1Add1
                ## </d 'Distributive Property'>
              ## </d 'Rearrange Digits'>
              ## <d 'Multiply Two Digits'>
                ## <d 'Evaluate'>
                  7times2
                ## </d 'Evaluate'>
                EqReplaceEq1Add1Add1
              ## </d 'Multiply Two Digits'>
              ## <d 'Multiply Two Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Reorder Terms'>
                    ## <d 'Associative Property'>
                      (8) (10) (2) mulass
                    ## </d 'Associative Property'>
                    ## <d 'Commutative Property'>
                      (10) (2) mulcom
                      EqReplaceEq1Mul1
                    ## </d 'Commutative Property'>
                    ## <d 'Associative Property'>
                      (8) (2) (10) mulass
                      ## <d 'Commutative Property'>
                        (* (* (8) (2)) (10)) (* (8) (* (2) (10))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                      EqReplaceEq1
                    ## </d 'Associative Property'>
                  ## </d 'Reorder Terms'>
                ## </d 'Rearrange Terms'>
                ## <d 'Evaluate'>
                  8times2
                  EqReplaceEq1Mul0
                ## </d 'Evaluate'>
                ## <d 'Evaluate'>
                  ## <d 'Distributive Property'>
                    (10) (6) (10) distl
                  ## </d 'Distributive Property'>
                  EqReplaceEq1
                ## </d 'Evaluate'>
                EqReplaceEq1Add1Add0
              ## </d 'Multiply Two Digits'>
              ## <d 'Evaluate'>
                ## <d 'Addition'>
                  ## <d 'Group Common Digits'>
                    ## <d 'Rearrange Terms'>
                      ## <d 'Associate All Left'>
                        ## <d 'Associative Property'>
                          (+ (* (10) (10)) (* (6) (10))) (10) (4) addass
                          ## <d 'Commutative Property'>
                            (+ (+ (+ (* (10) (10)) (* (6) (10))) (10)) (4)) (+ (+ (* (10) (10)) (* (6) (10))) (+ (10) (4))) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Associative Property'>
                      ## </d 'Associate All Left'>
                      ## <d 'Change Associations'>
                        ## <d 'Associative Property'>
                          (* (10) (10)) (* (6) (10)) (10) addass
                          (4) addeq1i
                        ## </d 'Associative Property'>
                        EqReplaceEq1
                      ## </d 'Change Associations'>
                    ## </d 'Rearrange Terms'>
                    ## <d 'Multiply By One'>
                      ## <d 'Multiply By One'>
                        ## <d 'Multiply By One'>
                          ## <d 'Evaluate'>
                            ## <d 'Evaluate'>
                              (* (10) (10)) mulidr
                            ## </d 'Evaluate'>
                            ## <d 'Commutative Property'>
                              (* (1) (* (10) (10))) (* (10) (10)) eqcom
                              mpbi
                            ## </d 'Commutative Property'>
                          ## </d 'Evaluate'>
                          (+ (* (6) (10)) (10)) addeq1i
                        ## </d 'Multiply By One'>
                        ## <d 'Multiply By One'>
                          ## <d 'Multiply By One'>
                            ## <d 'Evaluate'>
                              ## <d 'Evaluate'>
                                (10) mulidr
                              ## </d 'Evaluate'>
                              ## <d 'Commutative Property'>
                                (* (1) (10)) (10) eqcom
                                mpbi
                              ## </d 'Commutative Property'>
                            ## </d 'Evaluate'>
                            (* (6) (10)) addeq2i
                          ## </d 'Multiply By One'>
                          EqReplaceEq1Add1
                        ## </d 'Multiply By One'>
                        (4) addeq1i
                      ## </d 'Multiply By One'>
                      EqReplaceEq1
                    ## </d 'Multiply By One'>
                    ## <d 'Distributive Property'>
                      (6) (1) (10) distl
                      ## <d 'Commutative Property'>
                        (* (+ (6) (1)) (10)) (+ (* (6) (10)) (* (1) (10))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                      EqReplaceEq1Add0Add1
                    ## </d 'Distributive Property'>
                  ## </d 'Group Common Digits'>
                  ## <d 'Single-digit Addition'>
                    6plus1
                    EqReplaceEq1Add0Add1Mul0
                  ## </d 'Single-digit Addition'>
                  ## <d 'Simplify'>
                    ## <d 'Associative Property'>
                      (* (1) (* (10) (10))) (* (7) (10)) (4) addass
                    ## </d 'Associative Property'>
                    ## <d 'Simplify'>
                      ## <d 'Multiplicative Identity'>
                        (* (10) (10)) mulidr
                      ## </d 'Multiplicative Identity'>
                      EqReplaceEq1Add0
                    ## </d 'Simplify'>
                    EqReplaceEq1
                  ## </d 'Simplify'>
                ## </d 'Addition'>
                EqReplaceEq1Add1
              ## </d 'Evaluate'>
              ## <d 'Multiply Two Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Reorder Terms'>
                    ## <d 'Associative Property'>
                      (3) (* (10) (10)) (2) mulass
                    ## </d 'Associative Property'>
                    ## <d 'Commutative Property'>
                      (* (10) (10)) (2) mulcom
                      EqReplaceEq1Mul1
                    ## </d 'Commutative Property'>
                    ## <d 'Associative Property'>
                      (3) (2) (* (10) (10)) mulass
                      ## <d 'Commutative Property'>
                        (* (* (3) (2)) (* (10) (10))) (* (3) (* (2) (* (10) (10)))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                      EqReplaceEq1
                    ## </d 'Associative Property'>
                  ## </d 'Reorder Terms'>
                ## </d 'Rearrange Terms'>
                ## <d 'Evaluate'>
                  3times2
                  EqReplaceEq1Mul0
                ## </d 'Evaluate'>
                EqReplaceEq1Add0
              ## </d 'Multiply Two Digits'>
              ## <d 'Evaluate'>
                ## <d 'Addition'>
                  ## <d 'Group Common Digits'>
                    ## <d 'Rearrange Terms'>
                      ## <d 'Associate All Left'>
                        ## <d 'Associative Property'>
                          (* (6) (* (10) (10))) (* (10) (10)) (+ (* (7) (10)) (4)) addass
                          ## <d 'Commutative Property'>
                            (+ (+ (* (6) (* (10) (10))) (* (10) (10))) (+ (* (7) (10)) (4))) (+ (* (6) (* (10) (10))) (+ (* (10) (10)) (+ (* (7) (10)) (4)))) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Associative Property'>
                        ## <d 'Associative Property'>
                          (+ (* (6) (* (10) (10))) (* (10) (10))) (* (7) (10)) (4) addass
                          ## <d 'Commutative Property'>
                            (+ (+ (+ (* (6) (* (10) (10))) (* (10) (10))) (* (7) (10))) (4)) (+ (+ (* (6) (* (10) (10))) (* (10) (10))) (+ (* (7) (10)) (4))) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                          EqReplaceEq1
                        ## </d 'Associative Property'>
                      ## </d 'Associate All Left'>
                    ## </d 'Rearrange Terms'>
                    ## <d 'Multiply By One'>
                      ## <d 'Multiply By One'>
                        ## <d 'Multiply By One'>
                          ## <d 'Multiply By One'>
                            ## <d 'Evaluate'>
                              ## <d 'Evaluate'>
                                (* (10) (10)) mulidr
                              ## </d 'Evaluate'>
                              ## <d 'Commutative Property'>
                                (* (1) (* (10) (10))) (* (10) (10)) eqcom
                                mpbi
                              ## </d 'Commutative Property'>
                            ## </d 'Evaluate'>
                            (* (6) (* (10) (10))) addeq2i
                          ## </d 'Multiply By One'>
                          (* (7) (10)) addeq1i
                        ## </d 'Multiply By One'>
                        (4) addeq1i
                      ## </d 'Multiply By One'>
                      EqReplaceEq1
                    ## </d 'Multiply By One'>
                    ## <d 'Distributive Property'>
                      (6) (1) (* (10) (10)) distl
                      ## <d 'Commutative Property'>
                        (* (+ (6) (1)) (* (10) (10))) (+ (* (6) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                      EqReplaceEq1Add0Add0
                    ## </d 'Distributive Property'>
                  ## </d 'Group Common Digits'>
                  ## <d 'Single-digit Addition'>
                    6plus1
                    EqReplaceEq1Add0Add0Mul0
                  ## </d 'Single-digit Addition'>
                  ## <d 'Simplify'>
                    ## <d 'Associative Property'>
                      (* (7) (* (10) (10))) (* (7) (10)) (4) addass
                    ## </d 'Associative Property'>
                    EqReplaceEq1
                  ## </d 'Simplify'>
                ## </d 'Addition'>
                EqReplaceEq1
              ## </d 'Evaluate'>
            ## </d 'One-Digit times Multiple-Digits'>
            (* (10) (10)) muleq1i
          ## </d 'Multiply Significant Digits'>
          ## <d 'Multiply Base'>
            ## <d 'Distributive Property'>
              (* (7) (* (10) (10))) (+ (* (7) (10)) (4)) (* (10) (10)) distl
            ## </d 'Distributive Property'>
            ## <d 'Evaluate'>
              ## <d 'Distributive Property'>
                (* (7) (10)) (4) (* (10) (10)) distl
              ## </d 'Distributive Property'>
              ## <d 'Evaluate'>
                ## <d 'Associative Property'>
                  (7) (10) (* (10) (10)) mulass
                ## </d 'Associative Property'>
                EqReplaceEq1Add0
              ## </d 'Evaluate'>
              EqReplaceEq1Add1
            ## </d 'Evaluate'>
            ## <d 'Evaluate'>
              ## <d 'Associative Property'>
                (7) (* (10) (10)) (* (10) (10)) mulass
              ## </d 'Associative Property'>
              ## <d 'Evaluate'>
                ## <d 'Associative Property'>
                  (10) (10) (* (10) (10)) mulass
                ## </d 'Associative Property'>
                EqReplaceEq1Mul1
              ## </d 'Evaluate'>
              EqReplaceEq1Add0
            ## </d 'Evaluate'>
            EqReplaceEq1
          ## </d 'Multiply Base'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
      ## <d 'Sum the Total'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  (+ (* (7) (* (10) (* (10) (* (10) (10))))) (+ (* (7) (* (10) (* (10) (10)))) (* (4) (* (10) (10))))) (* (10) (* (10) (10))) (+ (* (10) (10)) (+ (* (6) (10)) (1))) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (+ (* (7) (* (10) (* (10) (* (10) (10))))) (+ (* (7) (* (10) (* (10) (10)))) (* (4) (* (10) (10))))) (* (10) (* (10) (10)))) (+ (* (10) (10)) (+ (* (6) (10)) (1)))) (+ (+ (* (7) (* (10) (* (10) (* (10) (10))))) (+ (* (7) (* (10) (* (10) (10)))) (* (4) (* (10) (10))))) (+ (* (10) (* (10) (10))) (+ (* (10) (10)) (+ (* (6) (10)) (1))))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
                ## <d 'Associative Property'>
                  (+ (+ (* (7) (* (10) (* (10) (* (10) (10))))) (+ (* (7) (* (10) (* (10) (10)))) (* (4) (* (10) (10))))) (* (10) (* (10) (10)))) (* (10) (10)) (+ (* (6) (10)) (1)) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (+ (+ (* (7) (* (10) (* (10) (* (10) (10))))) (+ (* (7) (* (10) (* (10) (10)))) (* (4) (* (10) (10))))) (* (10) (* (10) (10)))) (* (10) (10))) (+ (* (6) (10)) (1))) (+ (+ (+ (* (7) (* (10) (* (10) (* (10) (10))))) (+ (* (7) (* (10) (* (10) (10)))) (* (4) (* (10) (10))))) (* (10) (* (10) (10)))) (+ (* (10) (10)) (+ (* (6) (10)) (1)))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1
                ## </d 'Associative Property'>
                ## <d 'Associative Property'>
                  (+ (+ (+ (* (7) (* (10) (* (10) (* (10) (10))))) (+ (* (7) (* (10) (* (10) (10)))) (* (4) (* (10) (10))))) (* (10) (* (10) (10)))) (* (10) (10))) (* (6) (10)) (1) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (+ (+ (+ (* (7) (* (10) (* (10) (* (10) (10))))) (+ (* (7) (* (10) (* (10) (10)))) (* (4) (* (10) (10))))) (* (10) (* (10) (10)))) (* (10) (10))) (* (6) (10))) (1)) (+ (+ (+ (+ (* (7) (* (10) (* (10) (* (10) (10))))) (+ (* (7) (* (10) (* (10) (10)))) (* (4) (* (10) (10))))) (* (10) (* (10) (10)))) (* (10) (10))) (+ (* (6) (10)) (1))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1
                ## </d 'Associative Property'>
                ## <d 'Associative Property'>
                  (* (7) (* (10) (* (10) (* (10) (10))))) (* (7) (* (10) (* (10) (10)))) (* (4) (* (10) (10))) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (* (7) (* (10) (* (10) (* (10) (10))))) (* (7) (* (10) (* (10) (10))))) (* (4) (* (10) (10)))) (+ (* (7) (* (10) (* (10) (* (10) (10))))) (+ (* (7) (* (10) (* (10) (10)))) (* (4) (* (10) (10))))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0Add0Add0Add0
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
              ## <d 'Reorder Terms'>
                ## <d 'Associative Property'>
                  (+ (* (7) (* (10) (* (10) (* (10) (10))))) (* (7) (* (10) (* (10) (10))))) (* (4) (* (10) (10))) (* (10) (* (10) (10))) addass
                  (* (10) (10)) addeq1i
                  (* (6) (10)) addeq1i
                  (1) addeq1i
                ## </d 'Associative Property'>
                ## <d 'Commutative Property'>
                  (* (4) (* (10) (10))) (* (10) (* (10) (10))) addcom
                  EqReplaceEq1Add0Add0Add0Add1
                ## </d 'Commutative Property'>
                ## <d 'Associative Property'>
                  (+ (* (7) (* (10) (* (10) (* (10) (10))))) (* (7) (* (10) (* (10) (10))))) (* (10) (* (10) (10))) (* (4) (* (10) (10))) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (+ (* (7) (* (10) (* (10) (* (10) (10))))) (* (7) (* (10) (* (10) (10))))) (* (10) (* (10) (10)))) (* (4) (* (10) (10)))) (+ (+ (* (7) (* (10) (* (10) (* (10) (10))))) (* (7) (* (10) (* (10) (10))))) (+ (* (10) (* (10) (10))) (* (4) (* (10) (10))))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0Add0Add0
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Reorder Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (+ (+ (* (7) (* (10) (* (10) (* (10) (10))))) (* (7) (* (10) (* (10) (10))))) (* (10) (* (10) (10)))) (* (4) (* (10) (10))) (* (10) (10)) addass
                  (* (6) (10)) addeq1i
                  (1) addeq1i
                ## </d 'Associative Property'>
                ## <d 'Associative Property'>
                  (* (7) (* (10) (* (10) (* (10) (10))))) (* (7) (* (10) (* (10) (10)))) (* (10) (* (10) (10))) addass
                  EqReplaceEq1Add0Add0Add0
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Multiply By One'>
                      ## <d 'Multiply By One'>
                        ## <d 'Evaluate'>
                          ## <d 'Evaluate'>
                            (* (10) (* (10) (10))) mulidr
                          ## </d 'Evaluate'>
                          ## <d 'Commutative Property'>
                            (* (1) (* (10) (* (10) (10)))) (* (10) (* (10) (10))) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Evaluate'>
                        (* (7) (* (10) (* (10) (10)))) addeq2i
                      ## </d 'Multiply By One'>
                      (* (7) (* (10) (* (10) (* (10) (10))))) addeq2i
                    ## </d 'Multiply By One'>
                    (+ (* (4) (* (10) (10))) (* (10) (10))) addeq1i
                  ## </d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Multiply By One'>
                      ## <d 'Evaluate'>
                        ## <d 'Evaluate'>
                          (* (10) (10)) mulidr
                        ## </d 'Evaluate'>
                        ## <d 'Commutative Property'>
                          (* (1) (* (10) (10))) (* (10) (10)) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                      ## </d 'Evaluate'>
                      (* (4) (* (10) (10))) addeq2i
                    ## </d 'Multiply By One'>
                    EqReplaceEq1Add1
                  ## </d 'Multiply By One'>
                  (* (6) (10)) addeq1i
                ## </d 'Multiply By One'>
                (1) addeq1i
              ## </d 'Multiply By One'>
              EqReplaceEq1
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (7) (1) (* (10) (* (10) (10))) distl
              ## <d 'Commutative Property'>
                (* (+ (7) (1)) (* (10) (* (10) (10)))) (+ (* (7) (* (10) (* (10) (10)))) (* (1) (* (10) (* (10) (10))))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0Add0Add0Add1
            ## </d 'Distributive Property'>
            ## <d 'Distributive Property'>
              (4) (1) (* (10) (10)) distl
              ## <d 'Commutative Property'>
                (* (+ (4) (1)) (* (10) (10))) (+ (* (4) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0Add0Add1
            ## </d 'Distributive Property'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            4plus1
            EqReplaceEq1Add0Add0Add1Mul0
          ## </d 'Single-digit Addition'>
          ## <d 'Single-digit Addition'>
            7plus1
              EqReplaceEq1Add0Add0Add0Add1Mul0
          ## </d 'Single-digit Addition'>
          ## <d 'Simplify'>
            ## <d 'Associative Property'>
              (+ (+ (* (7) (* (10) (* (10) (* (10) (10))))) (* (8) (* (10) (* (10) (10))))) (* (5) (* (10) (10)))) (* (6) (10)) (1) addass
            ## </d 'Associative Property'>
            ## <d 'Associative Property'>
              (+ (* (7) (* (10) (* (10) (* (10) (10))))) (* (8) (* (10) (* (10) (10))))) (* (5) (* (10) (10))) (+ (* (6) (10)) (1)) addass
              EqReplaceEq1
            ## </d 'Associative Property'>
            ## <d 'Associative Property'>
              (* (7) (* (10) (* (10) (* (10) (10))))) (* (8) (* (10) (* (10) (10)))) (+ (* (5) (* (10) (10))) (+ (* (6) (10)) (1))) addass
              EqReplaceEq1
            ## </d 'Associative Property'>
            EqReplaceEq1
          ## </d 'Simplify'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Sum the Total'>
    ## </d 'Multiplication'>
  ## </d 'Evaluate'>
)

# == Modulo Tables ==

## <title> One-digit Modulo </title>
thm (2mod2 () () (= (mod (2) (2)) (0))
  0less2
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (2) mulid
      (0) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (2) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (3mod2 () () (= (mod (3) (2)) (1))
  1less2
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (2) mulid
      (1) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      2plus1
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (4mod2 () () (= (mod (4) (2)) (0))
  0less2
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times2
      (0) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (4) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (5mod2 () () (= (mod (5) (2)) (1))
  1less2
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times2
      (1) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      4plus1
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (6mod2 () () (= (mod (6) (2)) (0))
  0less2
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times3
      (0) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (6) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (7mod2 () () (= (mod (7) (2)) (1))
  1less2
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times3
      (1) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      6plus1
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (8mod2 () () (= (mod (8) (2)) (0))
  0less2
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times4
      (0) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (8) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (9mod2 () () (= (mod (9) (2)) (1))
  1less2
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times4
      (1) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      8plus1
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (10mod2 () () (= (mod (10) (2)) (0))
  0less2
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times5
      (0) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (10) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (2mod3 () () (= (mod (2) (3)) (2))
  2less3
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (3) pa_ax5
      (2) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (2) pa_ax3r
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (3mod3 () () (= (mod (3) (3)) (0))
  0less3
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (3) mulid
      (0) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (3) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (4mod3 () () (= (mod (4) (3)) (1))
  1less3
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (3) mulid
      (1) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      3plus1
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (5mod3 () () (= (mod (5) (3)) (2))
  2less3
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (3) mulid
      (2) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      3plus2
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (6mod3 () () (= (mod (6) (3)) (0))
  0less3
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times2
      (0) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (6) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (7mod3 () () (= (mod (7) (3)) (1))
  1less3
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times2
      (1) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      6plus1
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (8mod3 () () (= (mod (8) (3)) (2))
  2less3
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times2
      (2) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      6plus2
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (9mod3 () () (= (mod (9) (3)) (0))
  0less3
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times3
      (0) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (9) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (10mod3 () () (= (mod (10) (3)) (1))
  1less3
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times3
      (1) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      9plus1
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (2mod4 () () (= (mod (2) (4)) (2))
  2less4
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (4) pa_ax5
      (2) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (2) pa_ax3r
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (3mod4 () () (= (mod (3) (4)) (3))
  3less4
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (4) pa_ax5
      (3) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (3) pa_ax3r
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (4mod4 () () (= (mod (4) (4)) (0))
  0less4
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (4) mulid
      (0) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (4) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (5mod4 () () (= (mod (5) (4)) (1))
  1less4
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (4) mulid
      (1) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      4plus1
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (6mod4 () () (= (mod (6) (4)) (2))
  2less4
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (4) mulid
      (2) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      4plus2
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (7mod4 () () (= (mod (7) (4)) (3))
  3less4
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (4) mulid
      (3) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      4plus3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (8mod4 () () (= (mod (8) (4)) (0))
  0less4
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4times2
      (0) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (8) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (9mod4 () () (= (mod (9) (4)) (1))
  1less4
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4times2
      (1) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      8plus1
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (10mod4 () () (= (mod (10) (4)) (2))
  2less4
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4times2
      (2) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      8plus2
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (2mod5 () () (= (mod (2) (5)) (2))
  2less5
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (5) pa_ax5
      (2) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (2) pa_ax3r
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (3mod5 () () (= (mod (3) (5)) (3))
  3less5
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (5) pa_ax5
      (3) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (3) pa_ax3r
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (4mod5 () () (= (mod (4) (5)) (4))
  4less5
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (5) pa_ax5
      (4) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (4) pa_ax3r
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (5mod5 () () (= (mod (5) (5)) (0))
  0less5
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (5) mulid
      (0) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (5) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (6mod5 () () (= (mod (6) (5)) (1))
  1less5
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (5) mulid
      (1) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      5plus1
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (7mod5 () () (= (mod (7) (5)) (2))
  2less5
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (5) mulid
      (2) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      5plus2
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (8mod5 () () (= (mod (8) (5)) (3))
  3less5
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (5) mulid
      (3) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      5plus3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (9mod5 () () (= (mod (9) (5)) (4))
  4less5
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (5) mulid
      (4) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      5plus4
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> One-digit Modulo </title>
thm (10mod5 () () (= (mod (10) (5)) (0))
  0less5
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      5times2
      (0) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (10) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  modvali
)

## <title> Substitution </title>
## <table>
##   (< A  [ B ]   ]   ] )
##   (<    [ B ]   [ C ] )
##   (< A  [   [   [ C ] )
## </table>
thm (LtReplaceLt1 () (
     replacee (< A B)
     substitution (< B C)) 
     (< A C)
  replacee substitution
  A ltTrlt
  ax-mp
)

thm (modExample () () (= (mod (+ (* (3) (* (10) (10))) (+ (* (6) (10)) (7))) (+ (10) (5))) (7))
  ## <d 'Evaluate'>
    7less10
    ## <d 'Higher Remaining Digits'>
      ## <d 'Compare Smaller Digits'>
        ## <d 'Derive Smaller Inequality'>
          0less5
        ## </d 'Derive Smaller Inequality'>
        ## <d 'Add To Both Sides'>
          (10) ltadd2i
        ## </d 'Add To Both Sides'>
        ## <d 'Simplify Left Side'>
          (10) pa_ax3
          EqReplaceLt0
        ## </d 'Simplify Left Side'>
      ## </d 'Compare Smaller Digits'>
        LtReplaceLt1
    ## </d 'Higher Remaining Digits'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Multiplication'>
          ## <d 'Distribute Digits'>
            ## <d 'Distributive Property'>
              (+ (10) (5)) (* (2) (10)) (4) distr
            ## </d 'Distributive Property'>
          ## </d 'Distribute Digits'>
          ## <d 'Pull Out Base 10'>
            ## <d 'Associative Property'>
              (+ (10) (5)) (2) (10) mulass
              ## <d 'Commutative Property'>
                (* (* (+ (10) (5)) (2)) (10)) (* (+ (10) (5)) (* (2) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              (* (+ (10) (5)) (4)) addeq1i
            ## </d 'Associative Property'>
            EqReplaceEq1
          ## </d 'Pull Out Base 10'>
          ## <d 'Multiply Each Digit'>
            ## <d 'Multiply Two Individual Digits'>
              ## <d 'Multiply Base'>
                ## <d 'One-Digit times Multiple-Digits'>
                  ## <d 'Rearrange Digits'>
                    ## <d 'Distributive Property'>
                      (10) (5) (4) distl
                    ## </d 'Distributive Property'>
                  ## </d 'Rearrange Digits'>
                  ## <d 'Multiply Two Digits'>
                    ## <d 'Evaluate'>
                      5times4
                    ## </d 'Evaluate'>
                    EqReplaceEq1Add1
                  ## </d 'Multiply Two Digits'>
                  ## <d 'Multiply Two Digits'>
                    ## <d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (10) (4) mulcom
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    EqReplaceEq1Add0
                  ## </d 'Multiply Two Digits'>
                  ## <d 'Evaluate'>
                    ## <d 'Addition'>
                      ## <d 'Group Common Digits'>
                        ## <d 'Distributive Property'>
                          (4) (2) (10) distl
                          ## <d 'Commutative Property'>
                            (* (+ (4) (2)) (10)) (+ (* (4) (10)) (* (2) (10))) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Distributive Property'>
                      ## </d 'Group Common Digits'>
                      ## <d 'Single-digit Addition'>
                        4plus2
                        EqReplaceEq1Mul0
                      ## </d 'Single-digit Addition'>
                    ## </d 'Addition'>
                    EqReplaceEq1
                  ## </d 'Evaluate'>
                ## </d 'One-Digit times Multiple-Digits'>
              ## </d 'Multiply Base'>
              (* (* (+ (10) (5)) (2)) (10)) addeq2i
            ## </d 'Multiply Two Individual Digits'>
            ## <d 'Multiply Two Individual Digits'>
              ## <d 'Multiply Significant Digits'>
                ## <d 'One-Digit times Multiple-Digits'>
                  ## <d 'Rearrange Digits'>
                    ## <d 'Distributive Property'>
                      (10) (5) (2) distl
                    ## </d 'Distributive Property'>
                  ## </d 'Rearrange Digits'>
                  ## <d 'Multiply Two Digits'>
                    ## <d 'Evaluate'>
                      5times2
                    ## </d 'Evaluate'>
                    EqReplaceEq1Add1
                  ## </d 'Multiply Two Digits'>
                  ## <d 'Multiply Two Digits'>
                    ## <d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (10) (2) mulcom
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    EqReplaceEq1Add0
                  ## </d 'Multiply Two Digits'>
                  ## <d 'Evaluate'>
                    ## <d 'Addition'>
                      ## <d 'Group Common Digits'>
                        ## <d 'Multiply By One'>
                          ## <d 'Multiply By One'>
                            ## <d 'Evaluate'>
                              ## <d 'Evaluate'>
                                (10) mulidr
                              ## </d 'Evaluate'>
                              ## <d 'Commutative Property'>
                                (* (1) (10)) (10) eqcom
                                mpbi
                              ## </d 'Commutative Property'>
                            ## </d 'Evaluate'>
                            (* (2) (10)) addeq2i
                          ## </d 'Multiply By One'>
                        ## </d 'Multiply By One'>
                        ## <d 'Distributive Property'>
                          (2) (1) (10) distl
                          ## <d 'Commutative Property'>
                            (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                          EqReplaceEq1
                        ## </d 'Distributive Property'>
                      ## </d 'Group Common Digits'>
                      ## <d 'Single-digit Addition'>
                        2plus1
                        EqReplaceEq1Mul0
                      ## </d 'Single-digit Addition'>
                    ## </d 'Addition'>
                    EqReplaceEq1
                  ## </d 'Evaluate'>
                ## </d 'One-Digit times Multiple-Digits'>
                (10) muleq1i
              ## </d 'Multiply Significant Digits'>
              ## <d 'Multiply Base'>
                ## <d 'Associative Property'>
                  (3) (10) (10) mulass
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Multiply Base'>
              EqReplaceEq1Add0
            ## </d 'Multiply Two Individual Digits'>
            EqReplaceEq1
          ## </d 'Multiply Each Digit'>
        ## </d 'Multiplication'>
        (7) addeq1i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Simplify'>
            ## <d 'Associative Property'>
              (* (3) (* (10) (10))) (* (6) (10)) (7) addass
            ## </d 'Associative Property'>
          ## </d 'Simplify'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    modvali
  ## </d 'Evaluate'>
)

## <title> Modulo Congruence Example </title>
## <summary> 7 and 3 are congruent modulo 4. </summary>
thm (modconExample () () (=mod (7) (3) (4))
  7mod4
  ## <d>
  3mod4 eqcomi  
  EqReplaceEq1
  ## </d>
  ## <d>
    (7) (3) (4) df-modcon bicomi
    mpbi
  ## </d>
)

## <title> Modulo Congruence Example </title>
## <summary> 15 and 7 are congruent modulo 4. </summary>
thm (modconExample2 () () (=mod (+ (10) (5)) (7) (4))    
  ## <d 'Evaluate'>
    3less4
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        4times3
        (3) addeq1i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (10) (2) (3) addass
                ## </d 'Associative Property'>
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (+ (2) (3)) addeq1i
              ## </d 'Multiply By One'>
              EqReplaceEq1
            ## </d 'Multiply By One'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            2plus3
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
          ## <d 'Simplify'>
            ## <d 'Simplify'>
              ## <d 'Multiplicative Identity'>
                (10) mulidr
              ## </d 'Multiplicative Identity'>
              (5) addeq1i
            ## </d 'Simplify'>
            EqReplaceEq1
          ## </d 'Simplify'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    modvali
  ## </d 'Evaluate'>

  ## <d>
  7mod4 eqcomi  
  EqReplaceEq1
  ## </d>
  ## <d>
    (+ (10) (5))  (7) (4) df-modcon bicomi
    mpbi
  ## </d>
)  

# == Whole Number Division Tables ==

## <title> Whole Number Division </title>
thm (4div2 () () (= (div (4) (2)) (2))
  2greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times2
      (mod (4) (2)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      4mod2
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (4) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (6div2 () () (= (div (6) (2)) (3))
  2greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times3
      (mod (6) (2)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      6mod2
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (6) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (8div2 () () (= (div (8) (2)) (4))
  2greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times4
      (mod (8) (2)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      8mod2
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (8) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (10div2 () () (= (div (10) (2)) (5))
  2greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times5
      (mod (10) (2)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      10mod2
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (10) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (6div3 () () (= (div (6) (3)) (2))
  3greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times2
      (mod (6) (3)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      6mod3
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (6) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (9div3 () () (= (div (9) (3)) (3))
  3greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times3
      (mod (9) (3)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      9mod3
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (9) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (12div3 () () (= (div (+ (10) (2)) (3)) (4))
  3greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times4
      (mod (+ (10) (2)) (3)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      0less3
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          3times4
          (0) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          (+ (10) (2)) pa_ax3
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'Evaluate'>
      modvali
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (2)) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (15div3 () () (= (div (+ (10) (5)) (3)) (5))
  3greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times5
      (mod (+ (10) (5)) (3)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      0less3
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          3times5
          (0) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          (+ (10) (5)) pa_ax3
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'Evaluate'>
      modvali
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (5)) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (18div3 () () (= (div (+ (10) (8)) (3)) (6))
  3greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times6
      (mod (+ (10) (8)) (3)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      0less3
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          3times6
          (0) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          (+ (10) (8)) pa_ax3
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'Evaluate'>
      modvali
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (8)) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

thm (7div4 () () (= (div (7) (4)) (1))
  ## <d 'Evaluate'>
    4greater0
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        (4) mulid
        (mod (7) (4)) addeq1i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        7mod4
        EqReplaceEq1Add1
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        4plus3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    divval
  ## </d 'Evaluate'>
)

## <title> Whole Number Division </title>
thm (8div4 () () (= (div (8) (4)) (2))
  4greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4times2
      (mod (8) (4)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      8mod4
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (8) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (12div4 () () (= (div (+ (10) (2)) (4)) (3))
  4greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4times3
      (mod (+ (10) (2)) (4)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      0less4
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          4times3
          (0) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          (+ (10) (2)) pa_ax3
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'Evaluate'>
      modvali
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (2)) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (16div4 () () (= (div (+ (10) (6)) (4)) (4))
  4greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4times4
      (mod (+ (10) (6)) (4)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      0less4
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          4times4
          (0) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          (+ (10) (6)) pa_ax3
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'Evaluate'>
      modvali
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (6)) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (20div4 () () (= (div (* (2) (10)) (4)) (5))
  4greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4times5
      (mod (* (2) (10)) (4)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      0less4
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          4times5
          (0) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          (* (2) (10)) pa_ax3
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'Evaluate'>
      modvali
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (* (2) (10)) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (10div5 () () (= (div (10) (5)) (2))
  5greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      5times2
      (mod (10) (5)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      10mod5
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (10) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (15div5 () () (= (div (+ (10) (5)) (5)) (3))
  5greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      5times3
      (mod (+ (10) (5)) (5)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      0less5
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          5times3
          (0) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          (+ (10) (5)) pa_ax3
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'Evaluate'>
      modvali
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (5)) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (20div5 () () (= (div (* (2) (10)) (5)) (4))
  5greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      5times4
      (mod (* (2) (10)) (5)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      0less5
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          5times4
          (0) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          (* (2) (10)) pa_ax3
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'Evaluate'>
      modvali
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (* (2) (10)) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (12div6 () () (= (div (+ (10) (2)) (6)) (2))
  6greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      6times2
      (mod (+ (10) (2)) (6)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      0less6
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          6times2
          (0) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          (+ (10) (2)) pa_ax3
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'Evaluate'>
      modvali
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (2)) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (18div6 () () (= (div (+ (10) (8)) (6)) (3))
  6greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      6times3
      (mod (+ (10) (8)) (6)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      0less6
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          6times3
          (0) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          (+ (10) (8)) pa_ax3
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'Evaluate'>
      modvali
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (8)) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (14div7 () () (= (div (+ (10) (4)) (7)) (2))
  7greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      7times2
      (mod (+ (10) (4)) (7)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      0less7
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          7times2
          (0) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          (+ (10) (4)) pa_ax3
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'Evaluate'>
      modvali
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (4)) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (16div8 () () (= (div (+ (10) (6)) (8)) (2))
  8greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      8times2
      (mod (+ (10) (6)) (8)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      0less8
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          8times2
          (0) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          (+ (10) (6)) pa_ax3
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'Evaluate'>
      modvali
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (6)) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

## <title> Whole Number Division </title>
thm (18div9 () () (= (div (+ (10) (8)) (9)) (2))
  9greater0
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      9times2
      (mod (+ (10) (8)) (9)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      0less9
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          9times2
          (0) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          (+ (10) (8)) pa_ax3
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'Evaluate'>
      modvali
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (8)) pa_ax3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  divval
)

thm (divExample() () (= (div (+ (* (3) (* (10) (10))) (+ (* (9) (10)) (1))) (+ (* (2) (10)) (3))) (+ (10) (7)))
  ## <d 'Evaluate'>
    ## <d 'Number is Not Zero'>
      (+ (* (2) (10)) (2)) pa_ax1plus
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (* (2) (10)) (2) (1) addass
                ## </d 'Associative Property'>
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            2plus1
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
        ## </d 'Addition'>
        EqReplaceNot0Eq1
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (0) (+ (* (2) (10)) (3)) eqcom
        mtbi
      ## </d 'Commutative Property'>
    ## </d 'Number is Not Zero'>
    ## <d 'Greater Than Or Equal To Zero'>
      (+ (* (2) (10)) (3)) ge0
    ## </d 'Greater Than Or Equal To Zero'>
    axgrtrii
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Multiplication'>
          ## <d 'Distribute Digits'>
            ## <d 'Distributive Property'>
              (+ (* (2) (10)) (3)) (10) (7) distr
            ## </d 'Distributive Property'>
          ## </d 'Distribute Digits'>
          ## <d 'Multiply Each Digit'>
            ## <d 'Multiply Two Individual Digits'>
              ## <d 'Multiply Base'>
                ## <d 'One-Digit times Multiple-Digits'>
                  ## <d 'Rearrange Digits'>
                    ## <d 'Distributive Property'>
                      (* (2) (10)) (3) (7) distl
                    ## </d 'Distributive Property'>
                  ## </d 'Rearrange Digits'>
                  ## <d 'Multiply Two Digits'>
                    ## <d 'Evaluate'>
                      3times7
                    ## </d 'Evaluate'>
                    EqReplaceEq1Add1
                  ## </d 'Multiply Two Digits'>
                  ## <d 'Multiply Two Digits'>
                    ## <d 'Rearrange Terms'>
                      ## <d 'Reorder Terms'>
                        ## <d 'Associative Property'>
                          (2) (10) (7) mulass
                        ## </d 'Associative Property'>
                        ## <d 'Commutative Property'>
                          (10) (7) mulcom
                          EqReplaceEq1Mul1
                        ## </d 'Commutative Property'>
                        ## <d 'Associative Property'>
                          (2) (7) (10) mulass
                          ## <d 'Commutative Property'>
                            (* (* (2) (7)) (10)) (* (2) (* (7) (10))) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                          EqReplaceEq1
                        ## </d 'Associative Property'>
                      ## </d 'Reorder Terms'>
                    ## </d 'Rearrange Terms'>
                    ## <d 'Evaluate'>
                      2times7
                      EqReplaceEq1Mul0
                    ## </d 'Evaluate'>
                    ## <d 'Evaluate'>
                      ## <d 'Distributive Property'>
                        (10) (4) (10) distl
                      ## </d 'Distributive Property'>
                      EqReplaceEq1
                    ## </d 'Evaluate'>
                    EqReplaceEq1Add0
                  ## </d 'Multiply Two Digits'>
                  ## <d 'Evaluate'>
                    ## <d 'Addition'>
                      ## <d 'Group Common Digits'>
                        ## <d 'Rearrange Terms'>
                          ## <d 'Associate All Left'>
                            ## <d 'Associative Property'>
                              (+ (* (10) (10)) (* (4) (10))) (* (2) (10)) (1) addass
                              ## <d 'Commutative Property'>
                                (+ (+ (+ (* (10) (10)) (* (4) (10))) (* (2) (10))) (1)) (+ (+ (* (10) (10)) (* (4) (10))) (+ (* (2) (10)) (1))) eqcom
                                mpbi
                              ## </d 'Commutative Property'>
                            ## </d 'Associative Property'>
                          ## </d 'Associate All Left'>
                          ## <d 'Change Associations'>
                            ## <d 'Associative Property'>
                              (* (10) (10)) (* (4) (10)) (* (2) (10)) addass
                              (1) addeq1i
                            ## </d 'Associative Property'>
                            EqReplaceEq1
                          ## </d 'Change Associations'>
                        ## </d 'Rearrange Terms'>
                        ## <d 'Multiply By One'>
                          ## <d 'Multiply By One'>
                            ## <d 'Multiply By One'>
                              ## <d 'Evaluate'>
                                ## <d 'Evaluate'>
                                  (* (10) (10)) mulidr
                                ## </d 'Evaluate'>
                                ## <d 'Commutative Property'>
                                  (* (1) (* (10) (10))) (* (10) (10)) eqcom
                                  mpbi
                                ## </d 'Commutative Property'>
                              ## </d 'Evaluate'>
                              (+ (* (4) (10)) (* (2) (10))) addeq1i
                            ## </d 'Multiply By One'>
                            (1) addeq1i
                          ## </d 'Multiply By One'>
                          EqReplaceEq1
                        ## </d 'Multiply By One'>
                        ## <d 'Distributive Property'>
                          (4) (2) (10) distl
                          ## <d 'Commutative Property'>
                            (* (+ (4) (2)) (10)) (+ (* (4) (10)) (* (2) (10))) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                          EqReplaceEq1Add0Add1
                        ## </d 'Distributive Property'>
                      ## </d 'Group Common Digits'>
                      ## <d 'Single-digit Addition'>
                        4plus2
                        EqReplaceEq1Add0Add1Mul0
                      ## </d 'Single-digit Addition'>
                      ## <d 'Simplify'>
                        ## <d 'Associative Property'>
                          (* (1) (* (10) (10))) (* (6) (10)) (1) addass
                        ## </d 'Associative Property'>
                        ## <d 'Simplify'>
                          ## <d 'Multiplicative Identity'>
                            (* (10) (10)) mulidr
                          ## </d 'Multiplicative Identity'>
                          EqReplaceEq1Add0
                        ## </d 'Simplify'>
                        EqReplaceEq1
                      ## </d 'Simplify'>
                    ## </d 'Addition'>
                    EqReplaceEq1
                  ## </d 'Evaluate'>
                ## </d 'One-Digit times Multiple-Digits'>
              ## </d 'Multiply Base'>
              (* (+ (* (2) (10)) (3)) (10)) addeq2i
            ## </d 'Multiply Two Individual Digits'>
            ## <d 'Multiply Two Individual Digits'>
              ## <d 'Multiply Base'>
                ## <d 'Distributive Property'>
                  (* (2) (10)) (3) (10) distl
                ## </d 'Distributive Property'>
                ## <d 'Evaluate'>
                  ## <d 'Associative Property'>
                    (2) (10) (10) mulass
                  ## </d 'Associative Property'>
                  EqReplaceEq1Add0
                ## </d 'Evaluate'>
              ## </d 'Multiply Base'>
              EqReplaceEq1Add0
            ## </d 'Multiply Two Individual Digits'>
            EqReplaceEq1
          ## </d 'Multiply Each Digit'>
          ## <d 'Sum the Total'>
            ## <d 'Addition'>
              ## <d 'Group Common Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Associate All Left'>
                    ## <d 'Associative Property'>
                      (+ (* (2) (* (10) (10))) (* (3) (10))) (* (10) (10)) (+ (* (6) (10)) (1)) addass
                      ## <d 'Commutative Property'>
                        (+ (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (* (10) (10))) (+ (* (6) (10)) (1))) (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (+ (* (10) (10)) (+ (* (6) (10)) (1)))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Associative Property'>
                    ## <d 'Associative Property'>
                      (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (* (10) (10))) (* (6) (10)) (1) addass
                      ## <d 'Commutative Property'>
                        (+ (+ (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (* (10) (10))) (* (6) (10))) (1)) (+ (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (* (10) (10))) (+ (* (6) (10)) (1))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                      EqReplaceEq1
                    ## </d 'Associative Property'>
                  ## </d 'Associate All Left'>
                  ## <d 'Reorder Terms'>
                    ## <d 'Associative Property'>
                      (* (2) (* (10) (10))) (* (3) (10)) (* (10) (10)) addass
                      (* (6) (10)) addeq1i
                      (1) addeq1i
                    ## </d 'Associative Property'>
                    ## <d 'Commutative Property'>
                      (* (3) (10)) (* (10) (10)) addcom
                      EqReplaceEq1Add0Add0Add1
                    ## </d 'Commutative Property'>
                    ## <d 'Associative Property'>
                      (* (2) (* (10) (10))) (* (10) (10)) (* (3) (10)) addass
                      ## <d 'Commutative Property'>
                        (+ (+ (* (2) (* (10) (10))) (* (10) (10))) (* (3) (10))) (+ (* (2) (* (10) (10))) (+ (* (10) (10)) (* (3) (10)))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                      EqReplaceEq1Add0Add0
                    ## </d 'Associative Property'>
                    EqReplaceEq1
                  ## </d 'Reorder Terms'>
                  ## <d 'Change Associations'>
                    ## <d 'Associative Property'>
                      (+ (* (2) (* (10) (10))) (* (10) (10))) (* (3) (10)) (* (6) (10)) addass
                      (1) addeq1i
                    ## </d 'Associative Property'>
                    EqReplaceEq1
                  ## </d 'Change Associations'>
                ## </d 'Rearrange Terms'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Multiply By One'>
                      ## <d 'Multiply By One'>
                        ## <d 'Evaluate'>
                          ## <d 'Evaluate'>
                            (* (10) (10)) mulidr
                          ## </d 'Evaluate'>
                          ## <d 'Commutative Property'>
                            (* (1) (* (10) (10))) (* (10) (10)) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Evaluate'>
                        (* (2) (* (10) (10))) addeq2i
                      ## </d 'Multiply By One'>
                      (+ (* (3) (10)) (* (6) (10))) addeq1i
                    ## </d 'Multiply By One'>
                    (1) addeq1i
                  ## </d 'Multiply By One'>
                  EqReplaceEq1
                ## </d 'Multiply By One'>
                ## <d 'Distributive Property'>
                  (2) (1) (* (10) (10)) distl
                  ## <d 'Commutative Property'>
                    (* (+ (2) (1)) (* (10) (10))) (+ (* (2) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0Add0
                ## </d 'Distributive Property'>
                ## <d 'Distributive Property'>
                  (3) (6) (10) distl
                  ## <d 'Commutative Property'>
                    (* (+ (3) (6)) (10)) (+ (* (3) (10)) (* (6) (10))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0Add1
                ## </d 'Distributive Property'>
              ## </d 'Group Common Digits'>
              ## <d 'Single-digit Addition'>
                3plus6
                EqReplaceEq1Add0Add1Mul0
              ## </d 'Single-digit Addition'>
              ## <d 'Single-digit Addition'>
                2plus1
                EqReplaceEq1Add0Add0Mul0
              ## </d 'Single-digit Addition'>
              ## <d 'Simplify'>
                ## <d 'Associative Property'>
                  (* (3) (* (10) (10))) (* (9) (10)) (1) addass
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Simplify'>
            ## </d 'Addition'>
            EqReplaceEq1
          ## </d 'Sum the Total'>
        ## </d 'Multiplication'>
        (mod (+ (* (3) (* (10) (10))) (+ (* (9) (10)) (1))) (+ (* (2) (10)) (3))) addeq1i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        (+ (* (2) (10)) (2)) pa_ax1plus
        ## <d 'Evaluate'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Rearrange Terms'>
                ## <d 'Change Associations'>
                  ## <d 'Associative Property'>
                    (* (2) (10)) (2) (1) addass
                  ## </d 'Associative Property'>
                ## </d 'Change Associations'>
              ## </d 'Rearrange Terms'>
            ## </d 'Group Common Digits'>
            ## <d 'Single-digit Addition'>
              2plus1
              EqReplaceEq1Add1
            ## </d 'Single-digit Addition'>
          ## </d 'Addition'>
          EqReplaceNot0Eq1
        ## </d 'Evaluate'>
        ## <d 'Less Than Or Equal To Zero'>
          (+ (* (2) (10)) (3)) 0le
        ## </d 'Less Than Or Equal To Zero'>
        axlttri2i
        ## <d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Multiplication'>
              ## <d 'Distribute Digits'>
                ## <d 'Distributive Property'>
                  (+ (* (2) (10)) (3)) (10) (7) distr
                ## </d 'Distributive Property'>
              ## </d 'Distribute Digits'>
              ## <d 'Multiply Each Digit'>
                ## <d 'Multiply Two Individual Digits'>
                  ## <d 'Multiply Base'>
                    ## <d 'One-Digit times Multiple-Digits'>
                      ## <d 'Rearrange Digits'>
                        ## <d 'Distributive Property'>
                          (* (2) (10)) (3) (7) distl
                        ## </d 'Distributive Property'>
                      ## </d 'Rearrange Digits'>
                      ## <d 'Multiply Two Digits'>
                        ## <d 'Evaluate'>
                          3times7
                        ## </d 'Evaluate'>
                        EqReplaceEq1Add1
                      ## </d 'Multiply Two Digits'>
                      ## <d 'Multiply Two Digits'>
                        ## <d 'Rearrange Terms'>
                          ## <d 'Reorder Terms'>
                            ## <d 'Associative Property'>
                              (2) (10) (7) mulass
                            ## </d 'Associative Property'>
                            ## <d 'Commutative Property'>
                              (10) (7) mulcom
                              EqReplaceEq1Mul1
                            ## </d 'Commutative Property'>
                            ## <d 'Associative Property'>
                              (2) (7) (10) mulass
                              ## <d 'Commutative Property'>
                                (* (* (2) (7)) (10)) (* (2) (* (7) (10))) eqcom
                                mpbi
                              ## </d 'Commutative Property'>
                              EqReplaceEq1
                            ## </d 'Associative Property'>
                          ## </d 'Reorder Terms'>
                        ## </d 'Rearrange Terms'>
                        ## <d 'Evaluate'>
                          2times7
                          EqReplaceEq1Mul0
                        ## </d 'Evaluate'>
                        ## <d 'Evaluate'>
                          ## <d 'Distributive Property'>
                            (10) (4) (10) distl
                          ## </d 'Distributive Property'>
                          EqReplaceEq1
                        ## </d 'Evaluate'>
                        EqReplaceEq1Add0
                      ## </d 'Multiply Two Digits'>
                      ## <d 'Evaluate'>
                        ## <d 'Addition'>
                          ## <d 'Group Common Digits'>
                            ## <d 'Rearrange Terms'>
                              ## <d 'Associate All Left'>
                                ## <d 'Associative Property'>
                                  (+ (* (10) (10)) (* (4) (10))) (* (2) (10)) (1) addass
                                  ## <d 'Commutative Property'>
                                    (+ (+ (+ (* (10) (10)) (* (4) (10))) (* (2) (10))) (1)) (+ (+ (* (10) (10)) (* (4) (10))) (+ (* (2) (10)) (1))) eqcom
                                    mpbi
                                  ## </d 'Commutative Property'>
                                ## </d 'Associative Property'>
                              ## </d 'Associate All Left'>
                              ## <d 'Change Associations'>
                                ## <d 'Associative Property'>
                                  (* (10) (10)) (* (4) (10)) (* (2) (10)) addass
                                  (1) addeq1i
                                ## </d 'Associative Property'>
                                EqReplaceEq1
                              ## </d 'Change Associations'>
                            ## </d 'Rearrange Terms'>
                            ## <d 'Multiply By One'>
                              ## <d 'Multiply By One'>
                                ## <d 'Multiply By One'>
                                  ## <d 'Evaluate'>
                                    ## <d 'Evaluate'>
                                      (* (10) (10)) mulidr
                                    ## </d 'Evaluate'>
                                    ## <d 'Commutative Property'>
                                      (* (1) (* (10) (10))) (* (10) (10)) eqcom
                                      mpbi
                                    ## </d 'Commutative Property'>
                                  ## </d 'Evaluate'>
                                  (+ (* (4) (10)) (* (2) (10))) addeq1i
                                ## </d 'Multiply By One'>
                                (1) addeq1i
                              ## </d 'Multiply By One'>
                              EqReplaceEq1
                            ## </d 'Multiply By One'>
                            ## <d 'Distributive Property'>
                              (4) (2) (10) distl
                              ## <d 'Commutative Property'>
                                (* (+ (4) (2)) (10)) (+ (* (4) (10)) (* (2) (10))) eqcom
                                mpbi
                              ## </d 'Commutative Property'>
                              EqReplaceEq1Add0Add1
                            ## </d 'Distributive Property'>
                          ## </d 'Group Common Digits'>
                          ## <d 'Single-digit Addition'>
                            4plus2
                            EqReplaceEq1Add0Add1Mul0
                          ## </d 'Single-digit Addition'>
                          ## <d 'Simplify'>
                            ## <d 'Associative Property'>
                              (* (1) (* (10) (10))) (* (6) (10)) (1) addass
                            ## </d 'Associative Property'>
                            ## <d 'Simplify'>
                              ## <d 'Multiplicative Identity'>
                                (* (10) (10)) mulidr
                              ## </d 'Multiplicative Identity'>
                              EqReplaceEq1Add0
                            ## </d 'Simplify'>
                            EqReplaceEq1
                          ## </d 'Simplify'>
                        ## </d 'Addition'>
                        EqReplaceEq1
                      ## </d 'Evaluate'>
                    ## </d 'One-Digit times Multiple-Digits'>
                  ## </d 'Multiply Base'>
                  (* (+ (* (2) (10)) (3)) (10)) addeq2i
                ## </d 'Multiply Two Individual Digits'>
                ## <d 'Multiply Two Individual Digits'>
                  ## <d 'Multiply Base'>
                    ## <d 'Distributive Property'>
                      (* (2) (10)) (3) (10) distl
                    ## </d 'Distributive Property'>
                    ## <d 'Evaluate'>
                      ## <d 'Associative Property'>
                        (2) (10) (10) mulass
                      ## </d 'Associative Property'>
                      EqReplaceEq1Add0
                    ## </d 'Evaluate'>
                  ## </d 'Multiply Base'>
                  EqReplaceEq1Add0
                ## </d 'Multiply Two Individual Digits'>
                EqReplaceEq1
              ## </d 'Multiply Each Digit'>
              ## <d 'Sum the Total'>
                ## <d 'Addition'>
                  ## <d 'Group Common Digits'>
                    ## <d 'Rearrange Terms'>
                      ## <d 'Associate All Left'>
                        ## <d 'Associative Property'>
                          (+ (* (2) (* (10) (10))) (* (3) (10))) (* (10) (10)) (+ (* (6) (10)) (1)) addass
                          ## <d 'Commutative Property'>
                            (+ (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (* (10) (10))) (+ (* (6) (10)) (1))) (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (+ (* (10) (10)) (+ (* (6) (10)) (1)))) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                        ## </d 'Associative Property'>
                        ## <d 'Associative Property'>
                          (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (* (10) (10))) (* (6) (10)) (1) addass
                          ## <d 'Commutative Property'>
                            (+ (+ (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (* (10) (10))) (* (6) (10))) (1)) (+ (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (* (10) (10))) (+ (* (6) (10)) (1))) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                          EqReplaceEq1
                        ## </d 'Associative Property'>
                      ## </d 'Associate All Left'>
                      ## <d 'Reorder Terms'>
                        ## <d 'Associative Property'>
                          (* (2) (* (10) (10))) (* (3) (10)) (* (10) (10)) addass
                          (* (6) (10)) addeq1i
                          (1) addeq1i
                        ## </d 'Associative Property'>
                        ## <d 'Commutative Property'>
                          (* (3) (10)) (* (10) (10)) addcom
                          EqReplaceEq1Add0Add0Add1
                        ## </d 'Commutative Property'>
                        ## <d 'Associative Property'>
                          (* (2) (* (10) (10))) (* (10) (10)) (* (3) (10)) addass
                          ## <d 'Commutative Property'>
                            (+ (+ (* (2) (* (10) (10))) (* (10) (10))) (* (3) (10))) (+ (* (2) (* (10) (10))) (+ (* (10) (10)) (* (3) (10)))) eqcom
                            mpbi
                          ## </d 'Commutative Property'>
                          EqReplaceEq1Add0Add0
                        ## </d 'Associative Property'>
                        EqReplaceEq1
                      ## </d 'Reorder Terms'>
                      ## <d 'Change Associations'>
                        ## <d 'Associative Property'>
                          (+ (* (2) (* (10) (10))) (* (10) (10))) (* (3) (10)) (* (6) (10)) addass
                          (1) addeq1i
                        ## </d 'Associative Property'>
                        EqReplaceEq1
                      ## </d 'Change Associations'>
                    ## </d 'Rearrange Terms'>
                    ## <d 'Multiply By One'>
                      ## <d 'Multiply By One'>
                        ## <d 'Multiply By One'>
                          ## <d 'Multiply By One'>
                            ## <d 'Evaluate'>
                              ## <d 'Evaluate'>
                                (* (10) (10)) mulidr
                              ## </d 'Evaluate'>
                              ## <d 'Commutative Property'>
                                (* (1) (* (10) (10))) (* (10) (10)) eqcom
                                mpbi
                              ## </d 'Commutative Property'>
                            ## </d 'Evaluate'>
                            (* (2) (* (10) (10))) addeq2i
                          ## </d 'Multiply By One'>
                          (+ (* (3) (10)) (* (6) (10))) addeq1i
                        ## </d 'Multiply By One'>
                        (1) addeq1i
                      ## </d 'Multiply By One'>
                      EqReplaceEq1
                    ## </d 'Multiply By One'>
                    ## <d 'Distributive Property'>
                      (2) (1) (* (10) (10)) distl
                      ## <d 'Commutative Property'>
                        (* (+ (2) (1)) (* (10) (10))) (+ (* (2) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                      EqReplaceEq1Add0Add0
                    ## </d 'Distributive Property'>
                    ## <d 'Distributive Property'>
                      (3) (6) (10) distl
                      ## <d 'Commutative Property'>
                        (* (+ (3) (6)) (10)) (+ (* (3) (10)) (* (6) (10))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                      EqReplaceEq1Add0Add1
                    ## </d 'Distributive Property'>
                  ## </d 'Group Common Digits'>
                  ## <d 'Single-digit Addition'>
                    3plus6
                    EqReplaceEq1Add0Add1Mul0
                  ## </d 'Single-digit Addition'>
                  ## <d 'Single-digit Addition'>
                    2plus1
                    EqReplaceEq1Add0Add0Mul0
                  ## </d 'Single-digit Addition'>
                  ## <d 'Simplify'>
                    ## <d 'Associative Property'>
                      (* (3) (* (10) (10))) (* (9) (10)) (1) addass
                    ## </d 'Associative Property'>
                    EqReplaceEq1
                  ## </d 'Simplify'>
                ## </d 'Addition'>
                EqReplaceEq1
              ## </d 'Sum the Total'>
            ## </d 'Multiplication'>
            (0) addeq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            (+ (* (3) (* (10) (10))) (+ (* (9) (10)) (1))) pa_ax3
            EqReplaceEq1
          ## </d 'Evaluate'>
        ## </d 'Evaluate'>
        modvali
        EqReplaceEq1Add1
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        (+ (* (3) (* (10) (10))) (+ (* (9) (10)) (1))) pa_ax3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    divval
  ## </d 'Evaluate'>
)

# == Exponentiation Tables ==

## <title> Exponentiation </title>
thm (2power2 () () (= (exp (2) (2)) (4))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      1plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (1) (1)) (2) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) expeq2i
  ## </d 'Evaluate'>
  (2) (1) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    (2) expid
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2times2
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (2power3 () () (= (exp (2) (3)) (8))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (2) (1)) (3) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) expeq2i
  ## </d 'Evaluate'>
  (2) (2) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    2power2
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2times4
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (2power4 () () (= (exp (2) (4)) (+ (10) (6)) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (3) (1)) (4) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) expeq2i
  ## </d 'Evaluate'>
  (2) (3) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    2power3
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2times8
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (2power5 () () (= (exp (2) (5)) (+ (* (3) (10)) (2)) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (4) (1)) (5) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) expeq2i
  ## </d 'Evaluate'>
  (2) (4) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    2power4
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (2) (10) (6) distr
        ## </d 'Distributive Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            2times6
          ## </d 'Multiply Base'>
          (* (2) (10)) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
      ## <d 'Sum the Total'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  (* (2) (10)) (10) (2) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (* (2) (10)) (10)) (2)) (+ (* (2) (10)) (+ (10) (2))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
            ## </d 'Rearrange Terms'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Evaluate'>
                    ## <d 'Evaluate'>
                      (10) mulidr
                    ## </d 'Evaluate'>
                    ## <d 'Commutative Property'>
                      (* (1) (10)) (10) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Evaluate'>
                  (* (2) (10)) addeq2i
                ## </d 'Multiply By One'>
                (2) addeq1i
              ## </d 'Multiply By One'>
              EqReplaceEq1
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (2) (1) (10) distl
              ## <d 'Commutative Property'>
                (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0
            ## </d 'Distributive Property'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            2plus1
            EqReplaceEq1Add0Mul0
          ## </d 'Single-digit Addition'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Sum the Total'>
    ## </d 'Multiplication'>
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (2power6 () () (= (exp (2) (6)) (+ (* (6) (10)) (4)) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      5plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (5) (1)) (6) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) expeq2i
  ## </d 'Evaluate'>
  (2) (5) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    2power5
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (2) (* (3) (10)) (2) distr
        ## </d 'Distributive Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Pull Out Base 10'>
        ## <d 'Associative Property'>
          (2) (3) (10) mulass
          ## <d 'Commutative Property'>
            (* (* (2) (3)) (10)) (* (2) (* (3) (10))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (* (2) (2)) addeq1i
        ## </d 'Associative Property'>
        EqReplaceEq1
      ## </d 'Pull Out Base 10'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            2times2
          ## </d 'Multiply Base'>
          (* (* (2) (3)) (10)) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Significant Digits'>
            2times3
            (10) muleq1i
          ## </d 'Multiply Significant Digits'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
    ## </d 'Multiplication'>
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (2power7 () () (= (exp (2) (7)) (+ (* (10) (10)) (+ (* (2) (10)) (8)) ) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      6plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (6) (1)) (7) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) expeq2i
  ## </d 'Evaluate'>
  (2) (6) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    2power6
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (2) (* (6) (10)) (4) distr
        ## </d 'Distributive Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Pull Out Base 10'>
        ## <d 'Associative Property'>
          (2) (6) (10) mulass
          ## <d 'Commutative Property'>
            (* (* (2) (6)) (10)) (* (2) (* (6) (10))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (* (2) (4)) addeq1i
        ## </d 'Associative Property'>
        EqReplaceEq1
      ## </d 'Pull Out Base 10'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            2times4
          ## </d 'Multiply Base'>
          (* (* (2) (6)) (10)) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Significant Digits'>
            2times6
            (10) muleq1i
          ## </d 'Multiply Significant Digits'>
          ## <d 'Multiply Base'>
            ## <d 'Distributive Property'>
              (10) (2) (10) distl
            ## </d 'Distributive Property'>
            EqReplaceEq1
          ## </d 'Multiply Base'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
      ## <d 'Sum the Total'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Evaluate'>
                    ## <d 'Evaluate'>
                      (* (10) (10)) mulidr
                    ## </d 'Evaluate'>
                    ## <d 'Commutative Property'>
                      (* (1) (* (10) (10))) (* (10) (10)) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Evaluate'>
                  (* (2) (10)) addeq1i
                ## </d 'Multiply By One'>
                (8) addeq1i
              ## </d 'Multiply By One'>
            ## </d 'Multiply By One'>
          ## </d 'Group Common Digits'>
          ## <d 'Simplify'>
            ## <d 'Associative Property'>
              (* (1) (* (10) (10))) (* (2) (10)) (8) addass
            ## </d 'Associative Property'>
            ## <d 'Simplify'>
              ## <d 'Multiplicative Identity'>
                (* (10) (10)) mulidr
              ## </d 'Multiplicative Identity'>
              EqReplaceEq1Add0
            ## </d 'Simplify'>
            EqReplaceEq1
          ## </d 'Simplify'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Sum the Total'>
    ## </d 'Multiplication'>
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (2power8 () () (= (exp (2) (8)) (+ (* (2) (* (10) (10))) (+ (* (5) (10)) (6)) ) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      7plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (7) (1)) (8) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) expeq2i
  ## </d 'Evaluate'>
  (2) (7) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    2power7
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (2) (* (10) (10)) (+ (* (2) (10)) (8)) distr
        ## </d 'Distributive Property'>
        ## <d 'Distributive Property'>
          (2) (* (2) (10)) (8) distr
          EqReplaceEq1Add1
        ## </d 'Distributive Property'>
        ## <d 'Associative Property'>
          (* (2) (* (10) (10))) (* (2) (* (2) (10))) (* (2) (8)) addass
          ## <d 'Commutative Property'>
            (+ (+ (* (2) (* (10) (10))) (* (2) (* (2) (10)))) (* (2) (8))) (+ (* (2) (* (10) (10))) (+ (* (2) (* (2) (10))) (* (2) (8)))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1
        ## </d 'Associative Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Pull Out Base 10'>
        ## <d 'Associative Property'>
          (2) (2) (10) mulass
          ## <d 'Commutative Property'>
            (* (* (2) (2)) (10)) (* (2) (* (2) (10))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (* (2) (* (10) (10))) addeq2i
          (* (2) (8)) addeq1i
        ## </d 'Associative Property'>
        EqReplaceEq1
      ## </d 'Pull Out Base 10'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            2times8
          ## </d 'Multiply Base'>
          (+ (* (2) (* (10) (10))) (* (* (2) (2)) (10))) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Significant Digits'>
            2times2
            (10) muleq1i
          ## </d 'Multiply Significant Digits'>
          EqReplaceEq1Add0Add1
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
      ## <d 'Sum the Total'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  (+ (* (2) (* (10) (10))) (* (4) (10))) (10) (6) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (+ (* (2) (* (10) (10))) (* (4) (10))) (10)) (6)) (+ (+ (* (2) (* (10) (10))) (* (4) (10))) (+ (10) (6))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (* (2) (* (10) (10))) (* (4) (10)) (10) addass
                  (6) addeq1i
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (10) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (10)) (10) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    (* (4) (10)) addeq2i
                  ## </d 'Multiply By One'>
                  (* (2) (* (10) (10))) addeq2i
                ## </d 'Multiply By One'>
                (6) addeq1i
              ## </d 'Multiply By One'>
              EqReplaceEq1
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (4) (1) (10) distl
              ## <d 'Commutative Property'>
                (* (+ (4) (1)) (10)) (+ (* (4) (10)) (* (1) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0Add1
            ## </d 'Distributive Property'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            4plus1
            EqReplaceEq1Add0Add1Mul0
          ## </d 'Single-digit Addition'>
          ## <d 'Simplify'>
            ## <d 'Associative Property'>
              (* (2) (* (10) (10))) (* (5) (10)) (6) addass
            ## </d 'Associative Property'>
            EqReplaceEq1
          ## </d 'Simplify'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Sum the Total'>
    ## </d 'Multiplication'>
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (2power9 () () (= (exp (2) (9)) (+ (* (5) (* (10) (10))) (+ (10) (2)) ) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      8plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (8) (1)) (9) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) expeq2i
  ## </d 'Evaluate'>
  (2) (8) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    2power8
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (2) (* (2) (* (10) (10))) (+ (* (5) (10)) (6)) distr
        ## </d 'Distributive Property'>
        ## <d 'Distributive Property'>
          (2) (* (5) (10)) (6) distr
          EqReplaceEq1Add1
        ## </d 'Distributive Property'>
        ## <d 'Associative Property'>
          (* (2) (* (2) (* (10) (10)))) (* (2) (* (5) (10))) (* (2) (6)) addass
          ## <d 'Commutative Property'>
            (+ (+ (* (2) (* (2) (* (10) (10)))) (* (2) (* (5) (10)))) (* (2) (6))) (+ (* (2) (* (2) (* (10) (10)))) (+ (* (2) (* (5) (10))) (* (2) (6)))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1
        ## </d 'Associative Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Pull Out Base 10'>
        ## <d 'Associative Property'>
          (2) (5) (10) mulass
          ## <d 'Commutative Property'>
            (* (* (2) (5)) (10)) (* (2) (* (5) (10))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (* (2) (* (2) (* (10) (10)))) addeq2i
          (* (2) (6)) addeq1i
        ## </d 'Associative Property'>
        ## <d 'Associative Property'>
          (2) (2) (* (10) (10)) mulass
          ## <d 'Commutative Property'>
            (* (* (2) (2)) (* (10) (10))) (* (2) (* (2) (* (10) (10)))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0Add0
        ## </d 'Associative Property'>
        EqReplaceEq1
      ## </d 'Pull Out Base 10'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            2times6
          ## </d 'Multiply Base'>
          (+ (* (* (2) (2)) (* (10) (10))) (* (* (2) (5)) (10))) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Significant Digits'>
            2times5
            (10) muleq1i
          ## </d 'Multiply Significant Digits'>
          EqReplaceEq1Add0Add1
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Significant Digits'>
            2times2
            (* (10) (10)) muleq1i
          ## </d 'Multiply Significant Digits'>
          EqReplaceEq1Add0Add0
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
      ## <d 'Sum the Total'>
        ## <d 'Evaluate'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Evaluate'>
                    ## <d 'Evaluate'>
                      (* (10) (10)) mulidr
                    ## </d 'Evaluate'>
                    ## <d 'Commutative Property'>
                      (* (1) (* (10) (10))) (* (10) (10)) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Evaluate'>
                  (* (4) (* (10) (10))) addeq2i
                ## </d 'Multiply By One'>
              ## </d 'Multiply By One'>
              ## <d 'Distributive Property'>
                (4) (1) (* (10) (10)) distl
                ## <d 'Commutative Property'>
                  (* (+ (4) (1)) (* (10) (10))) (+ (* (4) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Distributive Property'>
            ## </d 'Group Common Digits'>
            ## <d 'Single-digit Addition'>
              4plus1
              EqReplaceEq1Mul0
            ## </d 'Single-digit Addition'>
          ## </d 'Addition'>
          (+ (10) (2)) addeq1i
        ## </d 'Evaluate'>
        EqReplaceEq1
      ## </d 'Sum the Total'>
    ## </d 'Multiplication'>
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (2power10 () () (= (exp (2) (10)) (+ (* (10) (* (10) (10))) (+ (* (2) (10)) (4)) ) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      9plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (9) (1)) (10) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) expeq2i
  ## </d 'Evaluate'>
  (2) (9) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    2power9
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (2) (* (5) (* (10) (10))) (+ (10) (2)) distr
        ## </d 'Distributive Property'>
        ## <d 'Distributive Property'>
          (2) (10) (2) distr
          EqReplaceEq1Add1
        ## </d 'Distributive Property'>
        ## <d 'Associative Property'>
          (* (2) (* (5) (* (10) (10)))) (* (2) (10)) (* (2) (2)) addass
          ## <d 'Commutative Property'>
            (+ (+ (* (2) (* (5) (* (10) (10)))) (* (2) (10))) (* (2) (2))) (+ (* (2) (* (5) (* (10) (10)))) (+ (* (2) (10)) (* (2) (2)))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1
        ## </d 'Associative Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Pull Out Base 10'>
        ## <d 'Associative Property'>
          (2) (5) (* (10) (10)) mulass
          ## <d 'Commutative Property'>
            (* (* (2) (5)) (* (10) (10))) (* (2) (* (5) (* (10) (10)))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (* (2) (10)) addeq1i
          (* (2) (2)) addeq1i
        ## </d 'Associative Property'>
        EqReplaceEq1
      ## </d 'Pull Out Base 10'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            2times2
          ## </d 'Multiply Base'>
          (+ (* (* (2) (5)) (* (10) (10))) (* (2) (10))) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Significant Digits'>
            2times5
            (* (10) (10)) muleq1i
          ## </d 'Multiply Significant Digits'>
          EqReplaceEq1Add0Add0
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
      ## <d 'Sum the Total'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Evaluate'>
                    ## <d 'Evaluate'>
                      (* (10) (* (10) (10))) mulidr
                    ## </d 'Evaluate'>
                    ## <d 'Commutative Property'>
                      (* (1) (* (10) (* (10) (10)))) (* (10) (* (10) (10))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Evaluate'>
                  (* (2) (10)) addeq1i
                ## </d 'Multiply By One'>
                (4) addeq1i
              ## </d 'Multiply By One'>
            ## </d 'Multiply By One'>
          ## </d 'Group Common Digits'>
          ## <d 'Simplify'>
            ## <d 'Associative Property'>
              (* (1) (* (10) (* (10) (10)))) (* (2) (10)) (4) addass
            ## </d 'Associative Property'>
            ## <d 'Simplify'>
              ## <d 'Multiplicative Identity'>
                (* (10) (* (10) (10))) mulidr
              ## </d 'Multiplicative Identity'>
              EqReplaceEq1Add0
            ## </d 'Simplify'>
            EqReplaceEq1
          ## </d 'Simplify'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Sum the Total'>
    ## </d 'Multiplication'>
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (3power2 () () (= (exp (3) (2)) (9))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      1plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (1) (1)) (2) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (3) expeq2i
  ## </d 'Evaluate'>
  (3) (1) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    (3) expid
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    3times3
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (3power3 () () (= (exp (3) (3)) (+ (* (2) (10)) (7)) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (2) (1)) (3) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (3) expeq2i
  ## </d 'Evaluate'>
  (3) (2) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    3power2
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    3times9
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (3power4 () () (= (exp (3) (4)) (+ (* (8) (10)) (1)) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (3) (1)) (4) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (3) expeq2i
  ## </d 'Evaluate'>
  (3) (3) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    3power3
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (3) (* (2) (10)) (7) distr
        ## </d 'Distributive Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Pull Out Base 10'>
        ## <d 'Associative Property'>
          (3) (2) (10) mulass
          ## <d 'Commutative Property'>
            (* (* (3) (2)) (10)) (* (3) (* (2) (10))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (* (3) (7)) addeq1i
        ## </d 'Associative Property'>
        EqReplaceEq1
      ## </d 'Pull Out Base 10'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            3times7
          ## </d 'Multiply Base'>
          (* (* (3) (2)) (10)) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Significant Digits'>
            3times2
            (10) muleq1i
          ## </d 'Multiply Significant Digits'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
      ## <d 'Sum the Total'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  (* (6) (10)) (* (2) (10)) (1) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (* (6) (10)) (* (2) (10))) (1)) (+ (* (6) (10)) (+ (* (2) (10)) (1))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
            ## </d 'Rearrange Terms'>
            ## <d 'Distributive Property'>
              (6) (2) (10) distl
              ## <d 'Commutative Property'>
                (* (+ (6) (2)) (10)) (+ (* (6) (10)) (* (2) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0
            ## </d 'Distributive Property'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            6plus2
            EqReplaceEq1Add0Mul0
          ## </d 'Single-digit Addition'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Sum the Total'>
    ## </d 'Multiplication'>
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (4power2 () () (= (exp (4) (2)) (+ (10) (6)) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      1plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (1) (1)) (2) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (4) expeq2i
  ## </d 'Evaluate'>
  (4) (1) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    (4) expid
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    4times4
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (4power3 () () (= (exp (4) (3)) (+ (* (6) (10)) (4)) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (2) (1)) (3) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (4) expeq2i
  ## </d 'Evaluate'>
  (4) (2) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    4power2
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (4) (10) (6) distr
        ## </d 'Distributive Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            4times6
          ## </d 'Multiply Base'>
          (* (4) (10)) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
      ## <d 'Sum the Total'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  (* (4) (10)) (* (2) (10)) (4) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (* (4) (10)) (* (2) (10))) (4)) (+ (* (4) (10)) (+ (* (2) (10)) (4))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
            ## </d 'Rearrange Terms'>
            ## <d 'Distributive Property'>
              (4) (2) (10) distl
              ## <d 'Commutative Property'>
                (* (+ (4) (2)) (10)) (+ (* (4) (10)) (* (2) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0
            ## </d 'Distributive Property'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            4plus2
            EqReplaceEq1Add0Mul0
          ## </d 'Single-digit Addition'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Sum the Total'>
    ## </d 'Multiplication'>
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (4power4 () () (= (exp (4) (4)) (+ (* (2) (* (10) (10))) (+ (* (5) (10)) (6)) ) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (3) (1)) (4) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (4) expeq2i
  ## </d 'Evaluate'>
  (4) (3) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    4power3
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (4) (* (6) (10)) (4) distr
        ## </d 'Distributive Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Pull Out Base 10'>
        ## <d 'Associative Property'>
          (4) (6) (10) mulass
          ## <d 'Commutative Property'>
            (* (* (4) (6)) (10)) (* (4) (* (6) (10))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (* (4) (4)) addeq1i
        ## </d 'Associative Property'>
        EqReplaceEq1
      ## </d 'Pull Out Base 10'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            4times4
          ## </d 'Multiply Base'>
          (* (* (4) (6)) (10)) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Significant Digits'>
            4times6
            (10) muleq1i
          ## </d 'Multiply Significant Digits'>
          ## <d 'Multiply Base'>
            ## <d 'Distributive Property'>
              (* (2) (10)) (4) (10) distl
            ## </d 'Distributive Property'>
            ## <d 'Evaluate'>
              ## <d 'Associative Property'>
                (2) (10) (10) mulass
              ## </d 'Associative Property'>
              EqReplaceEq1Add0
            ## </d 'Evaluate'>
            EqReplaceEq1
          ## </d 'Multiply Base'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
      ## <d 'Sum the Total'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  (+ (* (2) (* (10) (10))) (* (4) (10))) (10) (6) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (+ (* (2) (* (10) (10))) (* (4) (10))) (10)) (6)) (+ (+ (* (2) (* (10) (10))) (* (4) (10))) (+ (10) (6))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (* (2) (* (10) (10))) (* (4) (10)) (10) addass
                  (6) addeq1i
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (10) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (10)) (10) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    (* (4) (10)) addeq2i
                  ## </d 'Multiply By One'>
                  (* (2) (* (10) (10))) addeq2i
                ## </d 'Multiply By One'>
                (6) addeq1i
              ## </d 'Multiply By One'>
              EqReplaceEq1
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (4) (1) (10) distl
              ## <d 'Commutative Property'>
                (* (+ (4) (1)) (10)) (+ (* (4) (10)) (* (1) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0Add1
            ## </d 'Distributive Property'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            4plus1
            EqReplaceEq1Add0Add1Mul0
          ## </d 'Single-digit Addition'>
          ## <d 'Simplify'>
            ## <d 'Associative Property'>
              (* (2) (* (10) (10))) (* (5) (10)) (6) addass
            ## </d 'Associative Property'>
            EqReplaceEq1
          ## </d 'Simplify'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Sum the Total'>
    ## </d 'Multiplication'>
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (5power2 () () (= (exp (5) (2)) (+ (* (2) (10)) (5)) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      1plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (1) (1)) (2) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (5) expeq2i
  ## </d 'Evaluate'>
  (5) (1) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    (5) expid
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    5times5
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (5power3 () () (= (exp (5) (3)) (+ (* (10) (10)) (+ (* (2) (10)) (5)) ) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (2) (1)) (3) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (5) expeq2i
  ## </d 'Evaluate'>
  (5) (2) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    5power2
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (5) (* (2) (10)) (5) distr
        ## </d 'Distributive Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Pull Out Base 10'>
        ## <d 'Associative Property'>
          (5) (2) (10) mulass
          ## <d 'Commutative Property'>
            (* (* (5) (2)) (10)) (* (5) (* (2) (10))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (* (5) (5)) addeq1i
        ## </d 'Associative Property'>
        EqReplaceEq1
      ## </d 'Pull Out Base 10'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            5times5
          ## </d 'Multiply Base'>
          (* (* (5) (2)) (10)) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Significant Digits'>
            5times2
            (10) muleq1i
          ## </d 'Multiply Significant Digits'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
    ## </d 'Multiplication'>
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (5power4 () () (= (exp (5) (4)) (+ (* (6) (* (10) (10))) (+ (* (2) (10)) (5)) ) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (3) (1)) (4) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (5) expeq2i
  ## </d 'Evaluate'>
  (5) (3) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    5power3
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (5) (* (10) (10)) (+ (* (2) (10)) (5)) distr
        ## </d 'Distributive Property'>
        ## <d 'Distributive Property'>
          (5) (* (2) (10)) (5) distr
          EqReplaceEq1Add1
        ## </d 'Distributive Property'>
        ## <d 'Associative Property'>
          (* (5) (* (10) (10))) (* (5) (* (2) (10))) (* (5) (5)) addass
          ## <d 'Commutative Property'>
            (+ (+ (* (5) (* (10) (10))) (* (5) (* (2) (10)))) (* (5) (5))) (+ (* (5) (* (10) (10))) (+ (* (5) (* (2) (10))) (* (5) (5)))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1
        ## </d 'Associative Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Pull Out Base 10'>
        ## <d 'Associative Property'>
          (5) (2) (10) mulass
          ## <d 'Commutative Property'>
            (* (* (5) (2)) (10)) (* (5) (* (2) (10))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (* (5) (* (10) (10))) addeq2i
          (* (5) (5)) addeq1i
        ## </d 'Associative Property'>
        EqReplaceEq1
      ## </d 'Pull Out Base 10'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            5times5
          ## </d 'Multiply Base'>
          (+ (* (5) (* (10) (10))) (* (* (5) (2)) (10))) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Significant Digits'>
            5times2
            (10) muleq1i
          ## </d 'Multiply Significant Digits'>
          EqReplaceEq1Add0Add1
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
      ## <d 'Sum the Total'>
        ## <d 'Evaluate'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Evaluate'>
                    ## <d 'Evaluate'>
                      (* (10) (10)) mulidr
                    ## </d 'Evaluate'>
                    ## <d 'Commutative Property'>
                      (* (1) (* (10) (10))) (* (10) (10)) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Evaluate'>
                  (* (5) (* (10) (10))) addeq2i
                ## </d 'Multiply By One'>
              ## </d 'Multiply By One'>
              ## <d 'Distributive Property'>
                (5) (1) (* (10) (10)) distl
                ## <d 'Commutative Property'>
                  (* (+ (5) (1)) (* (10) (10))) (+ (* (5) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Distributive Property'>
            ## </d 'Group Common Digits'>
            ## <d 'Single-digit Addition'>
              5plus1
              EqReplaceEq1Mul0
            ## </d 'Single-digit Addition'>
          ## </d 'Addition'>
          (+ (* (2) (10)) (5)) addeq1i
        ## </d 'Evaluate'>
        EqReplaceEq1
      ## </d 'Sum the Total'>
    ## </d 'Multiplication'>
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (6power2 () () (= (exp (6) (2)) (+ (* (3) (10)) (6)) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      1plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (1) (1)) (2) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (6) expeq2i
  ## </d 'Evaluate'>
  (6) (1) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    (6) expid
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    6times6
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (6power3 () () (= (exp (6) (3)) (+ (* (2) (* (10) (10))) (+ (10) (6)) ) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (2) (1)) (3) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (6) expeq2i
  ## </d 'Evaluate'>
  (6) (2) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    6power2
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (6) (* (3) (10)) (6) distr
        ## </d 'Distributive Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Pull Out Base 10'>
        ## <d 'Associative Property'>
          (6) (3) (10) mulass
          ## <d 'Commutative Property'>
            (* (* (6) (3)) (10)) (* (6) (* (3) (10))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (* (6) (6)) addeq1i
        ## </d 'Associative Property'>
        EqReplaceEq1
      ## </d 'Pull Out Base 10'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            6times6
          ## </d 'Multiply Base'>
          (* (* (6) (3)) (10)) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Significant Digits'>
            6times3
            (10) muleq1i
          ## </d 'Multiply Significant Digits'>
          ## <d 'Multiply Base'>
            ## <d 'Distributive Property'>
              (10) (8) (10) distl
            ## </d 'Distributive Property'>
            EqReplaceEq1
          ## </d 'Multiply Base'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
      ## <d 'Sum the Total'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  (+ (* (10) (10)) (* (8) (10))) (* (3) (10)) (6) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (+ (* (10) (10)) (* (8) (10))) (* (3) (10))) (6)) (+ (+ (* (10) (10)) (* (8) (10))) (+ (* (3) (10)) (6))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (* (10) (10)) (* (8) (10)) (* (3) (10)) addass
                  (6) addeq1i
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Evaluate'>
                    ## <d 'Evaluate'>
                      (* (10) (10)) mulidr
                    ## </d 'Evaluate'>
                    ## <d 'Commutative Property'>
                      (* (1) (* (10) (10))) (* (10) (10)) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Evaluate'>
                  (+ (* (8) (10)) (* (3) (10))) addeq1i
                ## </d 'Multiply By One'>
                (6) addeq1i
              ## </d 'Multiply By One'>
              EqReplaceEq1
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (8) (3) (10) distl
              ## <d 'Commutative Property'>
                (* (+ (8) (3)) (10)) (+ (* (8) (10)) (* (3) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0Add1
            ## </d 'Distributive Property'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            8plus3
            EqReplaceEq1Add0Add1Mul0
          ## </d 'Single-digit Addition'>
          ## <d 'Carry the One'>
            ## <d 'Distributive Property'>
              (10) (1) (10) distl
              (* (1) (* (10) (10))) addeq2i
            ## </d 'Distributive Property'>
            ## <d 'Associative Property'>
              (* (1) (* (10) (10))) (* (10) (10)) (* (1) (10)) addass
              ## <d 'Commutative Property'>
                (+ (+ (* (1) (* (10) (10))) (* (10) (10))) (* (1) (10))) (+ (* (1) (* (10) (10))) (+ (* (10) (10)) (* (1) (10)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1
            ## </d 'Associative Property'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (* (10) (10)) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (* (10) (10))) (* (10) (10)) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              EqReplaceEq1Add0Add1
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (1) (1) (* (10) (10)) distl
              ## <d 'Commutative Property'>
                (* (+ (1) (1)) (* (10) (10))) (+ (* (1) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0
            ## </d 'Distributive Property'>
            EqReplaceEq1Add0
          ## </d 'Carry the One'>
          ## <d 'Single-digit Addition'>
            1plus1
            EqReplaceEq1Add0Add0Mul0
          ## </d 'Single-digit Addition'>
          ## <d 'Simplify'>
            ## <d 'Associative Property'>
              (* (2) (* (10) (10))) (* (1) (10)) (6) addass
            ## </d 'Associative Property'>
            ## <d 'Simplify'>
              ## <d 'Simplify'>
                ## <d 'Multiplicative Identity'>
                  (10) mulidr
                ## </d 'Multiplicative Identity'>
                (6) addeq1i
              ## </d 'Simplify'>
              EqReplaceEq1Add1
            ## </d 'Simplify'>
            EqReplaceEq1
          ## </d 'Simplify'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Sum the Total'>
    ## </d 'Multiplication'>
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (7power2 () () (= (exp (7) (2)) (+ (* (4) (10)) (9)) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      1plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (1) (1)) (2) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (7) expeq2i
  ## </d 'Evaluate'>
  (7) (1) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    (7) expid
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    7times7
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (7power3 () () (= (exp (7) (3)) (+ (* (3) (* (10) (10))) (+ (* (4) (10)) (3)) ) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (2) (1)) (3) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (7) expeq2i
  ## </d 'Evaluate'>
  (7) (2) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    7power2
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (7) (* (4) (10)) (9) distr
        ## </d 'Distributive Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Pull Out Base 10'>
        ## <d 'Associative Property'>
          (7) (4) (10) mulass
          ## <d 'Commutative Property'>
            (* (* (7) (4)) (10)) (* (7) (* (4) (10))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (* (7) (9)) addeq1i
        ## </d 'Associative Property'>
        EqReplaceEq1
      ## </d 'Pull Out Base 10'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            7times9
          ## </d 'Multiply Base'>
          (* (* (7) (4)) (10)) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Significant Digits'>
            7times4
            (10) muleq1i
          ## </d 'Multiply Significant Digits'>
          ## <d 'Multiply Base'>
            ## <d 'Distributive Property'>
              (* (2) (10)) (8) (10) distl
            ## </d 'Distributive Property'>
            ## <d 'Evaluate'>
              ## <d 'Associative Property'>
                (2) (10) (10) mulass
              ## </d 'Associative Property'>
              EqReplaceEq1Add0
            ## </d 'Evaluate'>
            EqReplaceEq1
          ## </d 'Multiply Base'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
      ## <d 'Sum the Total'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  (+ (* (2) (* (10) (10))) (* (8) (10))) (* (6) (10)) (3) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (+ (* (2) (* (10) (10))) (* (8) (10))) (* (6) (10))) (3)) (+ (+ (* (2) (* (10) (10))) (* (8) (10))) (+ (* (6) (10)) (3))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (* (2) (* (10) (10))) (* (8) (10)) (* (6) (10)) addass
                  (3) addeq1i
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
            ## <d 'Distributive Property'>
              (8) (6) (10) distl
              ## <d 'Commutative Property'>
                (* (+ (8) (6)) (10)) (+ (* (8) (10)) (* (6) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0Add1
            ## </d 'Distributive Property'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            8plus6
            EqReplaceEq1Add0Add1Mul0
          ## </d 'Single-digit Addition'>
          ## <d 'Carry the One'>
            ## <d 'Distributive Property'>
              (10) (4) (10) distl
              (* (2) (* (10) (10))) addeq2i
            ## </d 'Distributive Property'>
            ## <d 'Associative Property'>
              (* (2) (* (10) (10))) (* (10) (10)) (* (4) (10)) addass
              ## <d 'Commutative Property'>
                (+ (+ (* (2) (* (10) (10))) (* (10) (10))) (* (4) (10))) (+ (* (2) (* (10) (10))) (+ (* (10) (10)) (* (4) (10)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1
            ## </d 'Associative Property'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (* (10) (10)) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (* (10) (10))) (* (10) (10)) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              EqReplaceEq1Add0Add1
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (2) (1) (* (10) (10)) distl
              ## <d 'Commutative Property'>
                (* (+ (2) (1)) (* (10) (10))) (+ (* (2) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0
            ## </d 'Distributive Property'>
            EqReplaceEq1Add0
          ## </d 'Carry the One'>
          ## <d 'Single-digit Addition'>
            2plus1
            EqReplaceEq1Add0Add0Mul0
          ## </d 'Single-digit Addition'>
          ## <d 'Simplify'>
            ## <d 'Associative Property'>
              (* (3) (* (10) (10))) (* (4) (10)) (3) addass
            ## </d 'Associative Property'>
            EqReplaceEq1
          ## </d 'Simplify'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Sum the Total'>
    ## </d 'Multiplication'>
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (8power2 () () (= (exp (8) (2)) (+ (* (6) (10)) (4)) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      1plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (1) (1)) (2) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (8) expeq2i
  ## </d 'Evaluate'>
  (8) (1) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    (8) expid
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    8times8
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (8power3 () () (= (exp (8) (3)) (+ (* (5) (* (10) (10))) (+ (10) (2)) ) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (2) (1)) (3) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (8) expeq2i
  ## </d 'Evaluate'>
  (8) (2) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    8power2
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (8) (* (6) (10)) (4) distr
        ## </d 'Distributive Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Pull Out Base 10'>
        ## <d 'Associative Property'>
          (8) (6) (10) mulass
          ## <d 'Commutative Property'>
            (* (* (8) (6)) (10)) (* (8) (* (6) (10))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (* (8) (4)) addeq1i
        ## </d 'Associative Property'>
        EqReplaceEq1
      ## </d 'Pull Out Base 10'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            8times4
          ## </d 'Multiply Base'>
          (* (* (8) (6)) (10)) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Significant Digits'>
            8times6
            (10) muleq1i
          ## </d 'Multiply Significant Digits'>
          ## <d 'Multiply Base'>
            ## <d 'Distributive Property'>
              (* (4) (10)) (8) (10) distl
            ## </d 'Distributive Property'>
            ## <d 'Evaluate'>
              ## <d 'Associative Property'>
                (4) (10) (10) mulass
              ## </d 'Associative Property'>
              EqReplaceEq1Add0
            ## </d 'Evaluate'>
            EqReplaceEq1
          ## </d 'Multiply Base'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
      ## <d 'Sum the Total'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  (+ (* (4) (* (10) (10))) (* (8) (10))) (* (3) (10)) (2) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (+ (* (4) (* (10) (10))) (* (8) (10))) (* (3) (10))) (2)) (+ (+ (* (4) (* (10) (10))) (* (8) (10))) (+ (* (3) (10)) (2))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (* (4) (* (10) (10))) (* (8) (10)) (* (3) (10)) addass
                  (2) addeq1i
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
            ## <d 'Distributive Property'>
              (8) (3) (10) distl
              ## <d 'Commutative Property'>
                (* (+ (8) (3)) (10)) (+ (* (8) (10)) (* (3) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0Add1
            ## </d 'Distributive Property'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            8plus3
            EqReplaceEq1Add0Add1Mul0
          ## </d 'Single-digit Addition'>
          ## <d 'Carry the One'>
            ## <d 'Distributive Property'>
              (10) (1) (10) distl
              (* (4) (* (10) (10))) addeq2i
            ## </d 'Distributive Property'>
            ## <d 'Associative Property'>
              (* (4) (* (10) (10))) (* (10) (10)) (* (1) (10)) addass
              ## <d 'Commutative Property'>
                (+ (+ (* (4) (* (10) (10))) (* (10) (10))) (* (1) (10))) (+ (* (4) (* (10) (10))) (+ (* (10) (10)) (* (1) (10)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1
            ## </d 'Associative Property'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (* (10) (10)) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (* (10) (10))) (* (10) (10)) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              EqReplaceEq1Add0Add1
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (4) (1) (* (10) (10)) distl
              ## <d 'Commutative Property'>
                (* (+ (4) (1)) (* (10) (10))) (+ (* (4) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0
            ## </d 'Distributive Property'>
            EqReplaceEq1Add0
          ## </d 'Carry the One'>
          ## <d 'Single-digit Addition'>
            4plus1
            EqReplaceEq1Add0Add0Mul0
          ## </d 'Single-digit Addition'>
          ## <d 'Simplify'>
            ## <d 'Associative Property'>
              (* (5) (* (10) (10))) (* (1) (10)) (2) addass
            ## </d 'Associative Property'>
            ## <d 'Simplify'>
              ## <d 'Simplify'>
                ## <d 'Multiplicative Identity'>
                  (10) mulidr
                ## </d 'Multiplicative Identity'>
                (2) addeq1i
              ## </d 'Simplify'>
              EqReplaceEq1Add1
            ## </d 'Simplify'>
            EqReplaceEq1
          ## </d 'Simplify'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Sum the Total'>
    ## </d 'Multiplication'>
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (9power2 () () (= (exp (9) (2)) (+ (* (8) (10)) (1)) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      1plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (1) (1)) (2) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (9) expeq2i
  ## </d 'Evaluate'>
  (9) (1) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    (9) expid
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    9times9
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (9power3 () () (= (exp (9) (3)) (+ (* (7) (* (10) (10))) (+ (* (2) (10)) (9)) ) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (2) (1)) (3) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (9) expeq2i
  ## </d 'Evaluate'>
  (9) (2) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    9power2
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (9) (* (8) (10)) (1) distr
        ## </d 'Distributive Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Pull Out Base 10'>
        ## <d 'Associative Property'>
          (9) (8) (10) mulass
          ## <d 'Commutative Property'>
            (* (* (9) (8)) (10)) (* (9) (* (8) (10))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (* (9) (1)) addeq1i
        ## </d 'Associative Property'>
        EqReplaceEq1
      ## </d 'Pull Out Base 10'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            (9) mulid
          ## </d 'Multiply Base'>
          (* (* (9) (8)) (10)) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Significant Digits'>
            9times8
            (10) muleq1i
          ## </d 'Multiply Significant Digits'>
          ## <d 'Multiply Base'>
            ## <d 'Distributive Property'>
              (* (7) (10)) (2) (10) distl
            ## </d 'Distributive Property'>
            ## <d 'Evaluate'>
              ## <d 'Associative Property'>
                (7) (10) (10) mulass
              ## </d 'Associative Property'>
              EqReplaceEq1Add0
            ## </d 'Evaluate'>
            EqReplaceEq1
          ## </d 'Multiply Base'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
      ## <d 'Sum the Total'>
        ## <d 'Addition'>
          ## <d 'Simplify'>
            ## <d 'Associative Property'>
              (* (7) (* (10) (10))) (* (2) (10)) (9) addass
            ## </d 'Associative Property'>
          ## </d 'Simplify'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Sum the Total'>
    ## </d 'Multiplication'>
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (10power2 () () (= (exp (10) (2)) (* (10) (10)))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      1plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (1) (1)) (2) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (10) expeq2i
  ## </d 'Evaluate'>
  (10) (1) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    (10) expid
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (10power3 () () (= (exp (10) (3)) (* (10) (* (10) (10))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (2) (1)) (3) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (10) expeq2i
  ## </d 'Evaluate'>
  (10) (2) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    10power2
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
)

## <title> Exponentiation </title>
thm (10power4 () () (= (exp (10) (4)) (* (10) (* (10) (* (10) (10)))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (3) (1)) (4) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (10) expeq2i
  ## </d 'Evaluate'>
  (10) (3) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    10power3
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
)

# == Divisibility Tables ==

## <title> Divisibility </title>
thm (2notdivides3 () () (-. (| (2) (3)))
  (2) (1) (3) notDivides
  2less3
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (2) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (1)) (2) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  3less4
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (2) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        2times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (+ (1) (1))) (4) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (2divides4 () () (| (2) (4))
  ## <d 'Evaluate'>
    2times2
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (2notdivides5 () () (-. (| (2) (5)))
  (2) (2) (5) notDivides
  4less5
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (2)) (4) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  5less6
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (2) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        2times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (+ (2) (1))) (6) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (2divides6 () () (| (2) (6))
  ## <d 'Evaluate'>
    2times3
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (2notdivides7 () () (-. (| (2) (7)))
  (2) (3) (7) notDivides
  6less7
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times3
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (3)) (6) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  7less8
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        3plus1
        (2) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        2times4
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (+ (3) (1))) (8) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (2divides8 () () (| (2) (8))
  ## <d 'Evaluate'>
    2times4
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (2notdivides9 () () (-. (| (2) (9)))
  (2) (4) (9) notDivides
  8less9
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times4
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (4)) (8) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  9less10
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        4plus1
        (2) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        2times5
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (+ (4) (1))) (10) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (2divides10 () () (| (2) (10))
  ## <d 'Evaluate'>
    2times5
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (2notdivides11 () () (-. (| (2) (+ (10) (1))))
  (2) (5) (+ (10) (1)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (10) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times5
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (5)) (10) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      1less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        5plus1
        (2) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        2times6
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (+ (5) (1))) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (2divides12 () () (| (2) (+ (10) (2)))
  ## <d 'Evaluate'>
    2times6
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (2notdivides13 () () (-. (| (2) (+ (10) (3))))
  (2) (6) (+ (10) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times6
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (6)) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        6plus1
        (2) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        2times7
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (+ (6) (1))) (+ (10) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (2divides14 () () (| (2) (+ (10) (4)))
  ## <d 'Evaluate'>
    2times7
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (2notdivides15 () () (-. (| (2) (+ (10) (5))))
  (2) (7) (+ (10) (5)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      4less5
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times7
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (7)) (+ (10) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      5less6
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        7plus1
        (2) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        2times8
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (+ (7) (1))) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (2divides16 () () (| (2) (+ (10) (6)))
  ## <d 'Evaluate'>
    2times8
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (2notdivides17 () () (-. (| (2) (+ (10) (7))))
  (2) (8) (+ (10) (7)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      6less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times8
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (8)) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      7less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        8plus1
        (2) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        2times9
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (+ (8) (1))) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (2divides18 () () (| (2) (+ (10) (8)))
  ## <d 'Evaluate'>
    2times9
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (2notdivides19 () () (-. (| (2) (+ (10) (9))))
  (2) (9) (+ (10) (9)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      8less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2times9
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (9)) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        9plus1
        (2) muleq2i
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (+ (9) (1))) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (3notdivides4 () () (-. (| (3) (4)))
  (3) (1) (4) notDivides
  3less4
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (3) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (1)) (3) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  4less6
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (3) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        3times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (+ (1) (1))) (6) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (3notdivides5 () () (-. (| (3) (5)))
  (3) (1) (5) notDivides
  3less5
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (3) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (1)) (3) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  5less6
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (3) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        3times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (+ (1) (1))) (6) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (3divides6 () () (| (3) (6))
  ## <d 'Evaluate'>
    3times2
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (3notdivides7 () () (-. (| (3) (7)))
  (3) (2) (7) notDivides
  6less7
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (2)) (6) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  7less9
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (3) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        3times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (+ (2) (1))) (9) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (3notdivides8 () () (-. (| (3) (8)))
  (3) (2) (8) notDivides
  6less8
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (2)) (6) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  8less9
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (3) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        3times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (+ (2) (1))) (9) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (3divides9 () () (| (3) (9))
  ## <d 'Evaluate'>
    3times3
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (3notdivides10 () () (-. (| (3) (10)))
  (3) (3) (10) notDivides
  9less10
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times3
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (3)) (9) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (10) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        3plus1
        (3) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        3times4
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (+ (3) (1))) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (3notdivides11 () () (-. (| (3) (+ (10) (1))))
  (3) (3) (+ (10) (1)) notDivides
  9less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less1
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times3
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (3)) (9) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      1less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        3plus1
        (3) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        3times4
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (+ (3) (1))) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (3divides12 () () (| (3) (+ (10) (2)))
  ## <d 'Evaluate'>
    3times4
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (3notdivides13 () () (-. (| (3) (+ (10) (3))))
  (3) (4) (+ (10) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times4
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (4)) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less5
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        4plus1
        (3) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        3times5
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (+ (4) (1))) (+ (10) (5)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (3notdivides14 () () (-. (| (3) (+ (10) (4))))
  (3) (4) (+ (10) (4)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times4
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (4)) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      4less5
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        4plus1
        (3) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        3times5
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (+ (4) (1))) (+ (10) (5)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (3divides15 () () (| (3) (+ (10) (5)))
  ## <d 'Evaluate'>
    3times5
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (3notdivides16 () () (-. (| (3) (+ (10) (6))))
  (3) (5) (+ (10) (6)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      5less6
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times5
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (5)) (+ (10) (5)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      6less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        5plus1
        (3) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        3times6
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (+ (5) (1))) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (3notdivides17 () () (-. (| (3) (+ (10) (7))))
  (3) (5) (+ (10) (7)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      5less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times5
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (5)) (+ (10) (5)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      7less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        5plus1
        (3) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        3times6
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (+ (5) (1))) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (3divides18 () () (| (3) (+ (10) (8)))
  ## <d 'Evaluate'>
    3times6
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (3notdivides19 () () (-. (| (3) (+ (10) (9))))
  (3) (6) (+ (10) (9)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      8less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times6
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (6)) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less1
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        6plus1
        (3) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        3times7
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (+ (6) (1))) (+ (* (2) (10)) (1)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)



## <title> Divisibility </title>
thm (4notdivides5 () () (-. (| (4) (5)))
  (4) (1) (5) notDivides
  4less5
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (4) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (1)) (4) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  5less8
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (4) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        4times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (+ (1) (1))) (8) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (4notdivides6 () () (-. (| (4) (6)))
  (4) (1) (6) notDivides
  4less6
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (4) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (1)) (4) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  6less8
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (4) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        4times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (+ (1) (1))) (8) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (4notdivides7 () () (-. (| (4) (7)))
  (4) (1) (7) notDivides
  4less7
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (4) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (1)) (4) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  7less8
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (4) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        4times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (+ (1) (1))) (8) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (4divides8 () () (| (4) (8))
  ## <d 'Evaluate'>
    4times2
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (4notdivides9 () () (-. (| (4) (9)))
  (4) (2) (9) notDivides
  8less9
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (2)) (8) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  9less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (4) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        4times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (+ (2) (1))) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (4notdivides10 () () (-. (| (4) (10)))
  (4) (2) (10) notDivides
  8less10
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (2)) (8) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (10) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (4) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        4times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (+ (2) (1))) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (4notdivides11 () () (-. (| (4) (+ (10) (1))))
  (4) (2) (+ (10) (1)) notDivides
  8less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less1
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (2)) (8) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      1less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (4) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        4times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (+ (2) (1))) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (4divides12 () () (| (4) (+ (10) (2)))
  ## <d 'Evaluate'>
    4times3
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (4notdivides13 () () (-. (| (4) (+ (10) (3))))
  (4) (3) (+ (10) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4times3
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (3)) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less6
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        3plus1
        (4) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        4times4
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (+ (3) (1))) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (4notdivides14 () () (-. (| (4) (+ (10) (4))))
  (4) (3) (+ (10) (4)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4times3
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (3)) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      4less6
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        3plus1
        (4) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        4times4
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (+ (3) (1))) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (4notdivides15 () () (-. (| (4) (+ (10) (5))))
  (4) (3) (+ (10) (5)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less5
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4times3
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (3)) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      5less6
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        3plus1
        (4) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        4times4
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (+ (3) (1))) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (4divides16 () () (| (4) (+ (10) (6)))
  ## <d 'Evaluate'>
    4times4
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (4notdivides17 () () (-. (| (4) (+ (10) (7))))
  (4) (4) (+ (10) (7)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      6less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4times4
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (4)) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (7)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (7)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (7) (3) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (7) (3)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          7plus3
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        4plus1
        (4) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        4times5
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (+ (4) (1))) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (4notdivides18 () () (-. (| (4) (+ (10) (8))))
  (4) (4) (+ (10) (8)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      6less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4times4
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (4)) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (8)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (8)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (8) (2) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (8) (2)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          8plus2
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        4plus1
        (4) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        4times5
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (+ (4) (1))) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (4notdivides19 () () (-. (| (4) (+ (10) (9))))
  (4) (4) (+ (10) (9)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      6less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4times4
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (4)) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        4plus1
        (4) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        4times5
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (+ (4) (1))) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (5notdivides6 () () (-. (| (5) (6)))
  (5) (1) (6) notDivides
  5less6
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (5) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (1)) (5) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  6less10
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (5) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        5times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (+ (1) (1))) (10) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (5notdivides7 () () (-. (| (5) (7)))
  (5) (1) (7) notDivides
  5less7
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (5) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (1)) (5) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  7less10
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (5) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        5times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (+ (1) (1))) (10) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (5notdivides8 () () (-. (| (5) (8)))
  (5) (1) (8) notDivides
  5less8
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (5) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (1)) (5) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  8less10
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (5) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        5times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (+ (1) (1))) (10) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (5notdivides9 () () (-. (| (5) (9)))
  (5) (1) (9) notDivides
  5less9
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (5) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (1)) (5) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  9less10
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (5) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        5times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (+ (1) (1))) (10) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (5divides10 () () (| (5) (10))
  ## <d 'Evaluate'>
    5times2
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (5notdivides11 () () (-. (| (5) (+ (10) (1))))
  (5) (2) (+ (10) (1)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (10) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      5times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (2)) (10) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      1less5
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (5) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        5times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (+ (2) (1))) (+ (10) (5)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (5notdivides12 () () (-. (| (5) (+ (10) (2))))
  (5) (2) (+ (10) (2)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (10) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      5times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (2)) (10) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less5
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (5) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        5times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (+ (2) (1))) (+ (10) (5)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (5notdivides13 () () (-. (| (5) (+ (10) (3))))
  (5) (2) (+ (10) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (10) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      5times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (2)) (10) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less5
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (5) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        5times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (+ (2) (1))) (+ (10) (5)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (5notdivides14 () () (-. (| (5) (+ (10) (4))))
  (5) (2) (+ (10) (4)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (10) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      5times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (2)) (10) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      4less5
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (5) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        5times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (+ (2) (1))) (+ (10) (5)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (5divides15 () () (| (5) (+ (10) (5)))
  ## <d 'Evaluate'>
    5times3
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (5notdivides16 () () (-. (| (5) (+ (10) (6))))
  (5) (3) (+ (10) (6)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      5less6
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      5times3
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (3)) (+ (10) (5)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (6)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (6)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (6) (4) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (6) (4)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          6plus4
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        3plus1
        (5) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        5times4
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (+ (3) (1))) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (5notdivides17 () () (-. (| (5) (+ (10) (7))))
  (5) (3) (+ (10) (7)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      5less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      5times3
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (3)) (+ (10) (5)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (7)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (7)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (7) (3) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (7) (3)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          7plus3
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        3plus1
        (5) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        5times4
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (+ (3) (1))) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (5notdivides18 () () (-. (| (5) (+ (10) (8))))
  (5) (3) (+ (10) (8)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      5less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      5times3
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (3)) (+ (10) (5)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (8)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (8)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (8) (2) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (8) (2)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          8plus2
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        3plus1
        (5) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        5times4
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (+ (3) (1))) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (5notdivides19 () () (-. (| (5) (+ (10) (9))))
  (5) (3) (+ (10) (9)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      5less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      5times3
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (3)) (+ (10) (5)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        3plus1
        (5) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        5times4
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (+ (3) (1))) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)


## <title> Divisibility </title>
thm (6notdivides7 () () (-. (| (6) (7)))
  (6) (1) (7) notDivides
  6less7
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (6) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (1)) (6) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  7less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (6) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        6times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (+ (1) (1))) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (6notdivides8 () () (-. (| (6) (8)))
  (6) (1) (8) notDivides
  6less8
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (6) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (1)) (6) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  8less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (6) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        6times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (+ (1) (1))) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (6notdivides9 () () (-. (| (6) (9)))
  (6) (1) (9) notDivides
  6less9
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (6) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (1)) (6) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  9less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (6) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        6times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (+ (1) (1))) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (6notdivides10 () () (-. (| (6) (10)))
  (6) (1) (10) notDivides
  6less10
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (6) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (1)) (6) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (10) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (6) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        6times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (+ (1) (1))) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (6notdivides11 () () (-. (| (6) (+ (10) (1))))
  (6) (1) (+ (10) (1)) notDivides
  6less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less1
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (6) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (1)) (6) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      1less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (6) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        6times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (+ (1) (1))) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (6divides12 () () (| (6) (+ (10) (2)))
  ## <d 'Evaluate'>
    6times2
  ## </d 'Evaluate'>
  proveDivides
)

## <title> Divisibility </title>
thm (6notdivides13 () () (-. (| (6) (+ (10) (3))))
  (6) (2) (+ (10) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      6times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (2)) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (6) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        6times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (+ (2) (1))) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (7notdivides8 () () (-. (| (7) (8)))
  (7) (1) (8) notDivides
  7less8
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (7) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (1)) (7) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  8less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less4
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (7) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        7times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (+ (1) (1))) (+ (10) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (7notdivides9 () () (-. (| (7) (9)))
  (7) (1) (9) notDivides
  7less9
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (7) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (1)) (7) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  9less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less4
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (7) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        7times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (+ (1) (1))) (+ (10) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (7notdivides10 () () (-. (| (7) (10)))
  (7) (1) (10) notDivides
  7less10
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (7) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (1)) (7) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (10) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (7) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        7times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (+ (1) (1))) (+ (10) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (7notdivides11 () () (-. (| (7) (+ (10) (1))))
  (7) (1) (+ (10) (1)) notDivides
  7less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less1
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (7) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (1)) (7) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      1less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (7) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        7times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (+ (1) (1))) (+ (10) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (7notdivides12 () () (-. (| (7) (+ (10) (2))))
  (7) (1) (+ (10) (2)) notDivides
  7less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (7) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (1)) (7) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (7) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        7times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (+ (1) (1))) (+ (10) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (7notdivides13 () () (-. (| (7) (+ (10) (3))))
  (7) (1) (+ (10) (3)) notDivides
  7less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (7) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (1)) (7) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (7) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        7times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (+ (1) (1))) (+ (10) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (8notdivides9 () () (-. (| (8) (9)))
  (8) (1) (9) notDivides
  8less9
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (8) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (8) (1)) (8) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  9less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less6
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (8) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        8times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (8) (+ (1) (1))) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (8notdivides10 () () (-. (| (8) (10)))
  (8) (1) (10) notDivides
  8less10
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (8) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (8) (1)) (8) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less6
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (10) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (8) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        8times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (8) (+ (1) (1))) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (8notdivides11 () () (-. (| (8) (+ (10) (1))))
  (8) (1) (+ (10) (1)) notDivides
  8less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less1
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (8) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (8) (1)) (8) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      1less6
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (8) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        8times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (8) (+ (1) (1))) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (8notdivides12 () () (-. (| (8) (+ (10) (2))))
  (8) (1) (+ (10) (2)) notDivides
  8less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (8) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (8) (1)) (8) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less6
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (8) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        8times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (8) (+ (1) (1))) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (8notdivides13 () () (-. (| (8) (+ (10) (3))))
  (8) (1) (+ (10) (3)) notDivides
  8less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (8) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (8) (1)) (8) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less6
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (8) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        8times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (8) (+ (1) (1))) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (9notdivides10 () () (-. (| (9) (10)))
  (9) (1) (10) notDivides
  9less10
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (9) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (9) (1)) (9) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (10) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (9) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        9times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (9) (+ (1) (1))) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (9notdivides11 () () (-. (| (9) (+ (10) (1))))
  (9) (1) (+ (10) (1)) notDivides
  9less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less1
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (9) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (9) (1)) (9) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      1less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (9) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        9times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (9) (+ (1) (1))) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (9notdivides12 () () (-. (| (9) (+ (10) (2))))
  (9) (1) (+ (10) (2)) notDivides
  9less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (9) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (9) (1)) (9) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (9) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        9times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (9) (+ (1) (1))) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (9notdivides13 () () (-. (| (9) (+ (10) (3))))
  (9) (1) (+ (10) (3)) notDivides
  9less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (9) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (9) (1)) (9) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (9) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        9times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (9) (+ (1) (1))) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (10notdivides11 () () (-. (| (10) (+ (10) (1))))
  (10) (1) (+ (10) (1)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (10) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (10) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (10) (1)) (10) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (1)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (1)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (1) (9) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (1) (9)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          1plus9
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (10) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Commutative Property'>
          (10) (2) mulcom
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (10) (+ (1) (1))) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (10notdivides12 () () (-. (| (10) (+ (10) (2))))
  (10) (1) (+ (10) (2)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (10) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (10) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (10) (1)) (10) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (2)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (2)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (2) (8) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (2) (8)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          2plus8
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (10) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Commutative Property'>
          (10) (2) mulcom
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (10) (+ (1) (1))) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (10notdivides13 () () (-. (| (10) (+ (10) (3))))
  (10) (1) (+ (10) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (10) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (10) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (10) (1)) (10) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (3)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (3)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (3) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (3) (7)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (10) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Commutative Property'>
          (10) (2) mulcom
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (10) (+ (1) (1))) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (11notdivides12 () () (-. (| (+ (10) (1)) (+ (10) (2))))
  (+ (10) (1)) (1) (+ (10) (2)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      1less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (1)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (1)) (1)) (+ (10) (1)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (2)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (2)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (2) (8) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (2) (8)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          2plus8
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (1)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (1) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              (2) mulidr
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (1)) (+ (1) (1))) (+ (* (2) (10)) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (11notdivides13 () () (-. (| (+ (10) (1)) (+ (10) (3))))
  (+ (10) (1)) (1) (+ (10) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      1less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (1)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (1)) (1)) (+ (10) (1)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (3)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (3)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (3) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (3) (7)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (1)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (1) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              (2) mulidr
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (1)) (+ (1) (1))) (+ (* (2) (10)) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (12notdivides13 () () (-. (| (+ (10) (2)) (+ (10) (3))))
  (+ (10) (2)) (1) (+ (10) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (2)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (2)) (1)) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (3)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (3)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (3) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (3) (7)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less4
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (2)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (2) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              2times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (2)) (+ (1) (1))) (+ (* (2) (10)) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Substitution </title>
## <table>
##   (=_ S  [ T ]   ]   ] )
##   (=_    [ T ]   [ U ] )
##   (=_ S  [   [   [ U ] )
## </table>
thm (SeqReplaceSeq1 () (
     replacee (=_ S T)
     substitution (=_ T U)) 
     (=_ S U)
  replacee substitution
  S seqseq2i
  mpbi
)

## <title> Substitution </title>
## <table>
##   (=_ S (u. T  [ U ]   ]   ] ))
##   (=_          [ U ]   [ V ] )
##   (=_ S (u. T  [   [   [ V ] ))
## </table>
thm (SeqReplaceSeq1Un1 () (
     replacee (=_ S (u. T U))
     substitution (=_ U V)) 
     (=_ S (u. T V))
  replacee substitution
  T unseq2i
  SeqReplaceSeq1
)


## <title> Substitution </title>
## <table>
##   (=_ S (u. T ({}  [ A ]   ]   ] )))
##   (=               [ A ]   [ B ] )
##   (=_ S (u. T ({}  [   [   [ B ] )))
## </table>
thm (EqReplaceSeq1Un1Sn0 () (
     replacee (=_ S (u. T ({} A)))
     substitution (= A B)) 
     (=_ S (u. T ({} B)))
  replacee substitution
  sneqi
    SeqReplaceSeq1Un1
)

## <title> Substitution </title>
## <table>
##   (=_ S (u.  [ T ]   ]   ]  V))
##   (=_        [ T ]   [ U ] )
##   (=_ S (u.  [   [   [ U ]  V))
## </table>
thm (SeqReplaceSeq1Un0 () (
     replacee (=_ S (u. T V))
     substitution (=_ T U)) 
     (=_ S (u. U V))
  replacee substitution
  V unseq1i
  SeqReplaceSeq1
)


## <title> Interval of Natural Numbers </title>
thm (2interval3 () () (=_ ({...} (2) (3)) (u. ({} (2)) ({} (3))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      2plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (2) (1)) (3) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  (2) eqid
  ## <d 'Convert to ≤'>
    (2) (2) eqle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (2)) ({} (+ (2) (1)))) ({...} (2) (+ (2) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    2plus1
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    (2) intervalSn
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)

## <title> Interval of Natural Numbers </title>
thm (2interval4 () () (=_ ({...} (2) (4)) (u. (u. ({} (2)) ({} (3))) ({} (4))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (3) (1)) (4) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  2less3
  ## <d 'Convert to ≤'>
    (2) (3) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (3)) ({} (+ (3) (1)))) ({...} (2) (+ (3) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    3plus1
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2interval3
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)

## <title> Interval of Natural Numbers </title>
thm (2interval5 () () (=_ ({...} (2) (5)) (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (4) (1)) (5) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  2less4
  ## <d 'Convert to ≤'>
    (2) (4) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (4)) ({} (+ (4) (1)))) ({...} (2) (+ (4) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    4plus1
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2interval4
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)


## <title> Interval of Natural Numbers </title>
thm (2interval6 () () (=_ ({...} (2) (6)) (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      5plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (5) (1)) (6) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  2less5
  ## <d 'Convert to ≤'>
    (2) (5) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (5)) ({} (+ (5) (1)))) ({...} (2) (+ (5) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    5plus1
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2interval5
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)


## <title> Interval of Natural Numbers </title>
thm (2interval7 () () (=_ ({...} (2) (7)) (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      6plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (6) (1)) (7) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  2less6
  ## <d 'Convert to ≤'>
    (2) (6) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (6)) ({} (+ (6) (1)))) ({...} (2) (+ (6) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    6plus1
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2interval6
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)


## <title> Interval of Natural Numbers </title>
thm (2interval8 () () (=_ ({...} (2) (8)) (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      7plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (7) (1)) (8) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  2less7
  ## <d 'Convert to ≤'>
    (2) (7) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (7)) ({} (+ (7) (1)))) ({...} (2) (+ (7) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    7plus1
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2interval7
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)


## <title> Interval of Natural Numbers </title>
thm (2interval9 () () (=_ ({...} (2) (9)) (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      8plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (8) (1)) (9) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  2less8
  ## <d 'Convert to ≤'>
    (2) (8) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (8)) ({} (+ (8) (1)))) ({...} (2) (+ (8) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    8plus1
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2interval8
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)


## <title> Interval of Natural Numbers </title>
thm (2interval10 () () (=_ ({...} (2) (10)) (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      9plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (9) (1)) (10) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  2less9
  ## <d 'Convert to ≤'>
    (2) (9) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (9)) ({} (+ (9) (1)))) ({...} (2) (+ (9) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    9plus1
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2interval9
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)


## <title> Interval of Natural Numbers </title>
thm (2interval11 () () (=_ ({...} (2) (+ (10) (1))) (u. (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))) ({} (+ (10) (1)))))
  2less10
  ## <d 'Convert to ≤'>
    (2) (10) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (10)) ({} (+ (10) (1)))) ({...} (2) (+ (10) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  ## <d 'Evaluate'>
    2interval10
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)


## <title> Interval of Natural Numbers </title>
thm (2interval12 () () (=_ ({...} (2) (+ (10) (2))) (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))) ({} (+ (10) (1)))) ({} (+ (10) (2)))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (1) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (1) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (2) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (+ (10) (1)) (1)) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  2less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less1
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Convert to ≤'>
    (2) (+ (10) (1)) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (+ (10) (1))) ({} (+ (+ (10) (1)) (1)))) ({...} (2) (+ (+ (10) (1)) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    ## <d 'Addition'>
      ## <d 'Group Common Digits'>
        ## <d 'Rearrange Terms'>
          ## <d 'Change Associations'>
            ## <d 'Associative Property'>
              (10) (1) (1) addass
            ## </d 'Associative Property'>
          ## </d 'Change Associations'>
        ## </d 'Rearrange Terms'>
        ## <d 'Multiply By One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (+ (1) (1)) addeq1i
          ## </d 'Multiply By One'>
          EqReplaceEq1
        ## </d 'Multiply By One'>
      ## </d 'Group Common Digits'>
      ## <d 'Single-digit Addition'>
        1plus1
        EqReplaceEq1Add1
      ## </d 'Single-digit Addition'>
      ## <d 'Simplify'>
        ## <d 'Simplify'>
          ## <d 'Multiplicative Identity'>
            (10) mulidr
          ## </d 'Multiplicative Identity'>
          (2) addeq1i
        ## </d 'Simplify'>
        EqReplaceEq1
      ## </d 'Simplify'>
    ## </d 'Addition'>
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2interval11
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)


## <title> Interval of Natural Numbers </title>
thm (2interval13 () () (=_ ({...} (2) (+ (10) (3))) (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))) ({} (+ (10) (1)))) ({} (+ (10) (2)))) ({} (+ (10) (3)))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (2) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (2) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          2plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (3) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (+ (10) (2)) (1)) (+ (10) (3)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  2less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Convert to ≤'>
    (2) (+ (10) (2)) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (+ (10) (2))) ({} (+ (+ (10) (2)) (1)))) ({...} (2) (+ (+ (10) (2)) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    ## <d 'Addition'>
      ## <d 'Group Common Digits'>
        ## <d 'Rearrange Terms'>
          ## <d 'Change Associations'>
            ## <d 'Associative Property'>
              (10) (2) (1) addass
            ## </d 'Associative Property'>
          ## </d 'Change Associations'>
        ## </d 'Rearrange Terms'>
        ## <d 'Multiply By One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (+ (2) (1)) addeq1i
          ## </d 'Multiply By One'>
          EqReplaceEq1
        ## </d 'Multiply By One'>
      ## </d 'Group Common Digits'>
      ## <d 'Single-digit Addition'>
        2plus1
        EqReplaceEq1Add1
      ## </d 'Single-digit Addition'>
      ## <d 'Simplify'>
        ## <d 'Simplify'>
          ## <d 'Multiplicative Identity'>
            (10) mulidr
          ## </d 'Multiplicative Identity'>
          (3) addeq1i
        ## </d 'Simplify'>
        EqReplaceEq1
      ## </d 'Simplify'>
    ## </d 'Addition'>
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2interval12
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)


# == Prime Numbers ==

## <title> 1 Elements Inside Subset </title>
thm (1elementsInSubset () (hyp0 (e. A S) ) (C_ ({} A) S)
  hyp0
  elSubseti
)

## <title> Substitution </title>
## <table>
##   (C_  [ S ]   ]   ]  U)
##   (=_  [ S ]   [ T ] )
##   (C_  [   [   [ T ]  U)
## </table>
thm (SeqReplaceSs0 () (
     replacee (C_ S U)
     substitution (=_ S T)) 
     (C_ T U)
  replacee substitution
  U sseq1i
  mpbi
)

## <title> Prime Number Calculation </title>
thm (3prime () () (prime (3))
  2notdivides3
  x notDividesSeti
  1elementsInSubset
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus2
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (2)) (3) eqcom
        mpbi
      ## </d 'Commutative Property'>
      addhalfminusi
      (2) intervaleq2i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (2) intervalSn
      SeqReplaceSeq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  ## <d 'Commutative Property'>
    ({...} (2) (.- (3) (1))) ({} (2)) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSs0
  1less3
  provePrime2
)
## <title> Prime Number Calculation </title>
thm (4notprime () () (-. (prime (4)))
  ## <d 'Has a Divisor'>
    2divides4
  ## </d 'Has a Divisor'>
  1less2
  2less4
  pm3.2i
  notPrime
)

## <title> 3 Elements Inside Subset </title>
thm (3elementsInSubset () (hyp0 (e. A S) hyp1 (e. B S) hyp2 (e. C S) ) (C_ (u. (u. ({} A) ({} B)) ({} C)) S)
  hyp0
  elSubseti
  hyp1
  elSubseti
  unSubset
  hyp2
  elSubseti
  unSubset
)

## <title> Prime Number Calculation </title>
thm (5prime () () (prime (5))
  2notdivides5
  x notDividesSeti
  3notdivides5
  x notDividesSeti
  4notdivides5
  x notDividesSeti
  3elementsInSubset
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus4
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (4)) (5) eqcom
        mpbi
      ## </d 'Commutative Property'>
      addhalfminusi
      (2) intervaleq2i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      2interval4
      SeqReplaceSeq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  ## <d 'Commutative Property'>
    ({...} (2) (.- (5) (1))) (u. (u. ({} (2)) ({} (3))) ({} (4))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSs0
  1less5
  provePrime2
)

## <title> Prime Number Calculation </title>
thm (6notprime () () (-. (prime (6)))
  ## <d 'Has a Divisor'>
    2divides6
  ## </d 'Has a Divisor'>
  1less2
  2less6
  pm3.2i
  notPrime
)

## <title> 5 Elements Inside Subset </title>
thm (5elementsInSubset () (hyp0 (e. A S) hyp1 (e. B S) hyp2 (e. C S) hyp3 (e. D S) hyp4 (e. A' S) ) (C_ (u. (u. (u. (u. ({} A) ({} B)) ({} C)) ({} D)) ({} A')) S)
  hyp0
  elSubseti
  hyp1
  elSubseti
  unSubset
  hyp2
  elSubseti
  unSubset
  hyp3
  elSubseti
  unSubset
  hyp4
  elSubseti
  unSubset
)


## <title> Prime Number Calculation </title>
thm (7prime () () (prime (7))
  2notdivides7
  x notDividesSeti
  3notdivides7
  x notDividesSeti
  4notdivides7
  x notDividesSeti
  5notdivides7
  x notDividesSeti
  6notdivides7
  x notDividesSeti
  5elementsInSubset
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus6
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (6)) (7) eqcom
        mpbi
      ## </d 'Commutative Property'>
      addhalfminusi
      (2) intervaleq2i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      2interval6
      SeqReplaceSeq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  ## <d 'Commutative Property'>
    ({...} (2) (.- (7) (1))) (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSs0
  1less7
  provePrime2
)

## <title> Prime Number Calculation </title>
thm (8notprime () () (-. (prime (8)))
  ## <d 'Has a Divisor'>
    2divides8
  ## </d 'Has a Divisor'>
  1less2
  2less8
  pm3.2i
  notPrime
)

## <title> Prime Number Calculation </title>
thm (9notprime () () (-. (prime (9)))
  ## <d 'Has a Divisor'>
    3divides9
  ## </d 'Has a Divisor'>
  1less3
  3less9
  pm3.2i
  notPrime
)

## <title> Prime Number Calculation </title>
thm (10notprime () () (-. (prime (10)))
  ## <d 'Has a Divisor'>
    2divides10
  ## </d 'Has a Divisor'>
  1less2
  2less10
  pm3.2i
  notPrime
)

## <title> 9 Elements Inside Subset </title>
thm (9elementsInSubset () (hyp0 (e. A S) hyp1 (e. B S) hyp2 (e. C S) hyp3 (e. D S) hyp4 (e. A' S) hyp5 (e. B' S) hyp6 (e. C' S) hyp7 (e. D' S) hyp8 (e. A0 S) ) (C_ (u. (u. (u. (u. (u. (u. (u. (u. ({} A) ({} B)) ({} C)) ({} D)) ({} A')) ({} B')) ({} C')) ({} D')) ({} A0)) S)
  hyp0
  elSubseti
  hyp1
  elSubseti
  unSubset
  hyp2
  elSubseti
  unSubset
  hyp3
  elSubseti
  unSubset
  hyp4
  elSubseti
  unSubset
  hyp5
  elSubseti
  unSubset
  hyp6
  elSubseti
  unSubset
  hyp7
  elSubseti
  unSubset
  hyp8
  elSubseti
  unSubset
)


## <title> Prime Number Calculation </title>
thm (11prime () () (prime (+ (10) (1)))
  2notdivides11
  x notDividesSeti
  3notdivides11
  x notDividesSeti
  4notdivides11
  x notDividesSeti
  5notdivides11
  x notDividesSeti
  6notdivides11
  x notDividesSeti
  7notdivides11
  x notDividesSeti
  8notdivides11
  x notDividesSeti
  9notdivides11
  x notDividesSeti
  10notdivides11
  x notDividesSeti
  9elementsInSubset
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus10
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (10)) (+ (10) (1)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      addhalfminusi
      (2) intervaleq2i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      2interval10
      SeqReplaceSeq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  ## <d 'Commutative Property'>
    ({...} (2) (.- (+ (10) (1)) (1))) (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSs0
  1less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less1
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  provePrime2
)

## <title> Prime Number Calculation </title>
thm (12notprime () () (-. (prime (+ (10) (2))))
  ## <d 'Has a Divisor'>
    2divides12
  ## </d 'Has a Divisor'>
  1less2
  2less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  pm3.2i
  notPrime
)



## <title> 11 Elements Inside Subset </title>
thm (11elementsInSubset () (hyp0 (e. A S) hyp1 (e. B S) hyp2 (e. C S) hyp3 (e. D S) hyp4 (e. A' S) hyp5 (e. B' S) hyp6 (e. C' S) hyp7 (e. D' S) hyp8 (e. A0 S) hyp9 (e. A1 S) hyp10 (e. A2 S) ) (C_ (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. ({} A) ({} B)) ({} C)) ({} D)) ({} A')) ({} B')) ({} C')) ({} D')) ({} A0)) ({} A1)) ({} A2)) S)
  hyp0
  elSubseti
  hyp1
  elSubseti
  unSubset
  hyp2
  elSubseti
  unSubset
  hyp3
  elSubseti
  unSubset
  hyp4
  elSubseti
  unSubset
  hyp5
  elSubseti
  unSubset
  hyp6
  elSubseti
  unSubset
  hyp7
  elSubseti
  unSubset
  hyp8
  elSubseti
  unSubset
  hyp9
  elSubseti
  unSubset
  hyp10
  elSubseti
  unSubset
)


## <title> Prime Number Calculation </title>
thm (13prime () () (prime (+ (10) (3)))
  2notdivides13
  x notDividesSeti
  3notdivides13
  x notDividesSeti
  4notdivides13
  x notDividesSeti
  5notdivides13
  x notDividesSeti
  6notdivides13
  x notDividesSeti
  7notdivides13
  x notDividesSeti
  8notdivides13
  x notDividesSeti
  9notdivides13
  x notDividesSeti
  10notdivides13
  x notDividesSeti
  11notdivides13
  x notDividesSeti
  12notdivides13
  x notDividesSeti
  11elementsInSubset
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  (1) (10) (2) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (1) (10)) (2)) (+ (1) (+ (10) (2))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
              ## <d 'Reorder Terms'>
                ## <d 'Commutative Property'>
                  (1) (10) addcom
                  (2) addeq1i
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Reorder Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (10) (1) (2) addass
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (+ (1) (2)) addeq1i
              ## </d 'Multiply By One'>
              EqReplaceEq1
            ## </d 'Multiply By One'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            1plus2
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
          ## <d 'Simplify'>
            ## <d 'Simplify'>
              ## <d 'Multiplicative Identity'>
                (10) mulidr
              ## </d 'Multiplicative Identity'>
              (3) addeq1i
            ## </d 'Simplify'>
            EqReplaceEq1
          ## </d 'Simplify'>
        ## </d 'Addition'>
      ## </d 'Evaluate'>
      eqcomi
      addhalfminusi
      (2) intervaleq2i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      2interval12
      SeqReplaceSeq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  ## <d 'Commutative Property'>
    ({...} (2) (.- (+ (10) (3)) (1))) (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))) ({} (+ (10) (1)))) ({} (+ (10) (2)))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSs0
  1less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  provePrime2
)



## <title> Prime Number Calculation </title>
thm (14notprime () () (-. (prime (+ (10) (4))))
  ## <d 'Has a Divisor'>
    2divides14
  ## </d 'Has a Divisor'>
  1less2
  2less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less4
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  pm3.2i
  notPrime
)

## <title> Prime Number Calculation </title>
thm (15notprime () () (-. (prime (+ (10) (5))))
  ## <d 'Has a Divisor'>
    3divides15
  ## </d 'Has a Divisor'>
  1less3
  3less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less5
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  pm3.2i
  notPrime
)

## <title> Prime Number Calculation </title>
thm (16notprime () () (-. (prime (+ (10) (6))))
  ## <d 'Has a Divisor'>
    2divides16
  ## </d 'Has a Divisor'>
  1less2
  2less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less6
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  pm3.2i
  notPrime
)

#----------------------------------------------------     Sets      -------------------------------------------------#

## <title> Substitution </title>
## <table>
##   (e. A  [ S ]   ]   ] )
##   (=_    [ S ]   [ T ] )
##   (e. A  [   [   [ T ] )
## </table>
thm (SeqReplaceEl1 () (
     replacee (e. A S)
     substitution (=_ S T)) 
     (e. A T)
  replacee substitution
  A elseq2i
  mpbi
)

thm (elementOfExample() () (e. (3) (u. (u. (u. (u. ({} (1)) ({} (2))) ({} (3))) ({} (4))) ({} (5))))
  ## <d 'Element is in Singleton'>
    (3) snid
  ## </d 'Element is in Singleton'>
  ## <d 'Element is part of a Larger Set'>
    (u. ({} (4)) ({} (5))) unionAttach1
  ## </d 'Element is part of a Larger Set'>
  ## <d 'Element is part of a Larger Set'>
    (u. ({} (1)) ({} (2))) unionAttach2
  ## </d 'Element is part of a Larger Set'>
  ## <d 'Reorder elements'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Place in numeric order'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                ({} (3)) ({} (4)) ({} (5)) unass
                ## <d 'Commutative Property'>
                  (u. (u. ({} (3)) ({} (4))) ({} (5))) (u. ({} (3)) (u. ({} (4)) ({} (5)))) seqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
          ## </d 'Rearrange Terms'>
        ## </d 'Place in numeric order'>
        (u. ({} (1)) ({} (2))) unseq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Place in numeric order'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (u. ({} (1)) ({} (2))) (u. ({} (3)) ({} (4))) ({} (5)) unass
                ## <d 'Commutative Property'>
                  (u. (u. (u. ({} (1)) ({} (2))) (u. ({} (3)) ({} (4)))) ({} (5))) (u. (u. ({} (1)) ({} (2))) (u. (u. ({} (3)) ({} (4))) ({} (5)))) seqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (u. ({} (1)) ({} (2))) ({} (3)) ({} (4)) unass
                ## <d 'Commutative Property'>
                  (u. (u. (u. ({} (1)) ({} (2))) ({} (3))) ({} (4))) (u. (u. ({} (1)) ({} (2))) (u. ({} (3)) ({} (4)))) seqcom
                  mpbi
                ## </d 'Commutative Property'>
                SeqReplaceSeq1Un0
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
          ## </d 'Rearrange Terms'>
        ## </d 'Place in numeric order'>
        SeqReplaceSeq1
      ## </d 'Evaluate'>
      SeqReplaceEl1
    ## </d 'Evaluate'>
  ## </d 'Reorder elements'>
)

## <title> Element Not Inside 4-Set </title>
thm (notIn4set () (hyp0 (-. (= A B)) hyp1 (-. (= A C)) hyp2 (-. (= A D)) hyp3 (-. (= A A')) ) (-. (e. A (u. (u. (u. ({} B) ({} C)) ({} D)) ({} A'))))
  hyp0
  notInSingleton
  hyp1
  notInSingletonUnion2
  hyp2
  notInSingletonUnion2
  hyp3
  notInSingletonUnion2
)

thm (notElementOfExample() () (-. (e. (3) (u. (u. (u. ({} (1)) ({} (2))) ({} (4))) ({} (5))))) 
  3notEqual1
  3notEqual2
  3notEqual4
  3notEqual5
  notIn4set
)



## <title> Substitution </title>
## <table>
##   (=_ S (u. (u.  [ T ]   ]   ]  V) S0))
##   (=_            [ T ]   [ U ] )
##   (=_ S (u. (u.  [   [   [ U ]  V) S0))
## </table>
thm (SeqReplaceSeq1Un0Un0 () (
     replacee (=_ S (u. (u. T V) S0))
     substitution (=_ T U)) 
     (=_ S (u. (u. U V) S0))
  replacee substitution
  V unseq1i
  SeqReplaceSeq1Un0
)


## <title> Substitution </title>
## <table>
##   (=_ S (u. (u. (u.  [ T ]   ]   ]  V) S0) S1))
##   (=_                [ T ]   [ U ] )
##   (=_ S (u. (u. (u.  [   [   [ U ]  V) S0) S1))
## </table>
thm (SeqReplaceSeq1Un0Un0Un0 () (
     replacee (=_ S (u. (u. (u. T V) S0) S1))
     substitution (=_ T U)) 
     (=_ S (u. (u. (u. U V) S0) S1))
  replacee substitution
  V unseq1i
    SeqReplaceSeq1Un0Un0
)

## <title> Substitution </title>
## <table>
##   (=_ S (u. (u. (u. T  [ U ]   ]   ] ) S0) S1))
##   (=_                  [ U ]   [ V ] )
##   (=_ S (u. (u. (u. T  [   [   [ V ] ) S0) S1))
## </table>
thm (SeqReplaceSeq1Un0Un0Un1 () (
     replacee (=_ S (u. (u. (u. T U) S0) S1))
     substitution (=_ U V)) 
     (=_ S (u. (u. (u. T V) S0) S1))
  replacee substitution
  T unseq2i
  SeqReplaceSeq1Un0Un0
)

## <title> Substitution </title>
## <table>
##   (=_ S (u. (u. T  [ U ]   ]   ] ) S0))
##   (=_              [ U ]   [ V ] )
##   (=_ S (u. (u. T  [   [   [ V ] ) S0))
## </table>
thm (SeqReplaceSeq1Un0Un1 () (
     replacee (=_ S (u. (u. T U) S0))
     substitution (=_ U V)) 
     (=_ S (u. (u. T V) S0))
  replacee substitution
  T unseq2i
  SeqReplaceSeq1Un0
)

## <title> Substitution </title>
## <table>
##   (=_ S (u. (u. (u. (u. T  [ U ]   ]   ] ) S0) S1) S2))
##   (=_                      [ U ]   [ V ] )
##   (=_ S (u. (u. (u. (u. T  [   [   [ V ] ) S0) S1) S2))
## </table>
thm (SeqReplaceSeq1Un0Un0Un0Un1 () (
     replacee (=_ S (u. (u. (u. (u. T U) S0) S1) S2))
     substitution (=_ U V)) 
     (=_ S (u. (u. (u. (u. T V) S0) S1) S2))
  replacee substitution
  T unseq2i
  SeqReplaceSeq1Un0Un0Un0
)

## <title> Substitution </title>
## <table>
##   (=_ S (u. T (u. U  [ V ]   ]    ] )))
##   (=_                [ V ]   [ S0 ] )
##   (=_ S (u. T (u. U  [   [   [ S0 ] )))
## </table>
thm (SeqReplaceSeq1Un1Un1 () (
     replacee (=_ S (u. T (u. U V)))
     substitution (=_ V S0)) 
     (=_ S (u. T (u. U S0)))
  replacee substitution
  U unseq2i
  SeqReplaceSeq1Un1
)

## <title> Substitution </title>
## <table>
##   (=_ S (u. T (u. U (u.  [ V ]   ]    ]  S1))))
##   (=_                    [ V ]   [ S0 ] )
##   (=_ S (u. T (u. U (u.  [   [   [ S0 ]  S1))))
## </table>
thm (SeqReplaceSeq1Un1Un1Un0 () (
     replacee (=_ S (u. T (u. U (u. V S1))))
     substitution (=_ V S0)) 
     (=_ S (u. T (u. U (u. S0 S1))))
  replacee substitution
  S1 unseq1i
  SeqReplaceSeq1Un1Un1
)


thm (unionExample () () (=_ (u. (u. (u. ({} (1)) ({} (4))) ({} (5))) (u. (u. ({} (2)) ({} (4))) ({} (8)))) (u. (u. (u. (u. ({} (1)) ({} (2))) ({} (4))) ({} (5))) ({} (8))))    
  ## <d 'Evaluate'>
    ## <d 'Place in numeric order'>
      ## <d 'Rearrange Terms'>
        ## <d 'Associate All Left'>
          ## <d 'Associative Property'>
            (u. (u. ({} (1)) ({} (4))) ({} (5))) (u. ({} (2)) ({} (4))) ({} (8)) unass
            ## <d 'Commutative Property'>
              (u. (u. (u. (u. ({} (1)) ({} (4))) ({} (5))) (u. ({} (2)) ({} (4)))) ({} (8))) (u. (u. (u. ({} (1)) ({} (4))) ({} (5))) (u. (u. ({} (2)) ({} (4))) ({} (8)))) seqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Associative Property'>
            (u. (u. ({} (1)) ({} (4))) ({} (5))) ({} (2)) ({} (4)) unass
            ## <d 'Commutative Property'>
              (u. (u. (u. (u. ({} (1)) ({} (4))) ({} (5))) ({} (2))) ({} (4))) (u. (u. (u. ({} (1)) ({} (4))) ({} (5))) (u. ({} (2)) ({} (4)))) seqcom
              mpbi
            ## </d 'Commutative Property'>
            SeqReplaceSeq1Un0
          ## </d 'Associative Property'>
        ## </d 'Associate All Left'>
        ## <d 'Reorder Terms'>
          ## <d 'Associative Property'>
            (u. ({} (1)) ({} (4))) ({} (5)) ({} (2)) unass
            ({} (4)) unseq1i
            ({} (8)) unseq1i
          ## </d 'Associative Property'>
          ## <d 'Commutative Property'>
            ({} (5)) ({} (2)) uncom
            SeqReplaceSeq1Un0Un0Un1
          ## </d 'Commutative Property'>
          ## <d 'Associative Property'>
            (u. ({} (1)) ({} (4))) ({} (2)) ({} (5)) unass
            ## <d 'Commutative Property'>
              (u. (u. (u. ({} (1)) ({} (4))) ({} (2))) ({} (5))) (u. (u. ({} (1)) ({} (4))) (u. ({} (2)) ({} (5)))) seqcom
              mpbi
            ## </d 'Commutative Property'>
            SeqReplaceSeq1Un0Un0
          ## </d 'Associative Property'>
          ## <d 'Associative Property'>
            (u. (u. ({} (1)) ({} (4))) ({} (2))) ({} (5)) ({} (4)) unass
            SeqReplaceSeq1Un0
          ## </d 'Associative Property'>
          ## <d 'Commutative Property'>
            ({} (5)) ({} (4)) uncom
            SeqReplaceSeq1Un0Un1
          ## </d 'Commutative Property'>
          ## <d 'Associative Property'>
            (u. (u. ({} (1)) ({} (4))) ({} (2))) ({} (4)) ({} (5)) unass
            ## <d 'Commutative Property'>
              (u. (u. (u. (u. ({} (1)) ({} (4))) ({} (2))) ({} (4))) ({} (5))) (u. (u. (u. ({} (1)) ({} (4))) ({} (2))) (u. ({} (4)) ({} (5)))) seqcom
              mpbi
            ## </d 'Commutative Property'>
            SeqReplaceSeq1Un0
          ## </d 'Associative Property'>
          ## <d 'Associative Property'>
            ({} (1)) ({} (4)) ({} (2)) unass
            SeqReplaceSeq1Un0Un0Un0
          ## </d 'Associative Property'>
          ## <d 'Commutative Property'>
            ({} (4)) ({} (2)) uncom
            SeqReplaceSeq1Un0Un0Un0Un1
          ## </d 'Commutative Property'>
          ## <d 'Associative Property'>
            ({} (1)) ({} (2)) ({} (4)) unass
            ## <d 'Commutative Property'>
              (u. (u. ({} (1)) ({} (2))) ({} (4))) (u. ({} (1)) (u. ({} (2)) ({} (4)))) seqcom
              mpbi
            ## </d 'Commutative Property'>
            SeqReplaceSeq1Un0Un0Un0
          ## </d 'Associative Property'>
          SeqReplaceSeq1
        ## </d 'Reorder Terms'>
      ## </d 'Rearrange Terms'>
    ## </d 'Place in numeric order'>
    ## <d 'Remove Duplicates'>
      ## <d 'Associative Property'>
        (u. ({} (1)) ({} (2))) ({} (4)) ({} (4)) unass
        SeqReplaceSeq1Un0Un0
      ## </d 'Associative Property'>
      ## <d 'Union is Idempotent'>
        ({} (4)) unidm
        SeqReplaceSeq1Un0Un0Un1
      ## </d 'Union is Idempotent'>
    ## </d 'Remove Duplicates'>
  ## </d 'Evaluate'>
)





## <title> Substitution </title>
## <table>
##   (= (!  [ A ]   ]   ] ) C)
##   (=     [ A ]   [ B ] )
##   (= (!  [   [   [ B ] ) C)
## </table>
thm (EqReplaceEq0Fact0 () (
     replacee (= (! A) C)
     substitution (= A B)) 
     (= (! B) C)
  replacee substitution
  factorialeqi
  EqReplaceEq0
)

## <title> Factorial </title>
thm (factorial2 () () (= (! (2)) (2))
  ## <d 'Evaluate Factorial'>
    (1) factorialrecurse
    ## <d 'Evaluate'>
      1plus1
      EqReplaceEq0Fact0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      1plus1
      EqReplaceEq1Mul1
    ## </d 'Evaluate'>
  ## </d 'Evaluate Factorial'>
  ## <d 'Evaluate Factorial'>
    ## <d 'Evaluate'>
      factorial1
      EqReplaceEq1Mul0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (2) mulidr
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate Factorial'>
)


## <title> Factorial </title>
thm (factorial3 () () (= (! (3)) (6))
  ## <d 'Evaluate Factorial'>
    (2) factorialrecurse
    ## <d 'Evaluate'>
      2plus1
      EqReplaceEq0Fact0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      2plus1
      EqReplaceEq1Mul1
    ## </d 'Evaluate'>
  ## </d 'Evaluate Factorial'>
  ## <d 'Evaluate Factorial'>
    ## <d 'Evaluate'>
      factorial2
      EqReplaceEq1Mul0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      2times3
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate Factorial'>
)


## <title> Factorial </title>
thm (factorial4 () () (= (! (4)) (+ (* (2) (10)) (4)) )
  ## <d 'Evaluate Factorial'>
    (3) factorialrecurse
    ## <d 'Evaluate'>
      3plus1
      EqReplaceEq0Fact0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      3plus1
      EqReplaceEq1Mul1
    ## </d 'Evaluate'>
  ## </d 'Evaluate Factorial'>
  ## <d 'Evaluate Factorial'>
    ## <d 'Evaluate'>
      factorial3
      EqReplaceEq1Mul0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      6times4
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate Factorial'>
)


## <title> Factorial </title>
thm (factorial5 () () (= (! (5)) (+ (* (10) (10)) (* (2) (10))) )
  ## <d 'Evaluate Factorial'>
    (4) factorialrecurse
    ## <d 'Evaluate'>
      4plus1
      EqReplaceEq0Fact0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      4plus1
      EqReplaceEq1Mul1
    ## </d 'Evaluate'>
  ## </d 'Evaluate Factorial'>
  ## <d 'Evaluate Factorial'>
    ## <d 'Evaluate'>
      factorial4
      EqReplaceEq1Mul0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'One-Digit times Multiple-Digits'>
        ## <d 'Rearrange Digits'>
          ## <d 'Distributive Property'>
            (* (2) (10)) (4) (5) distl
          ## </d 'Distributive Property'>
        ## </d 'Rearrange Digits'>
        ## <d 'Multiply Two Digits'>
          ## <d 'Evaluate'>
            4times5
          ## </d 'Evaluate'>
          EqReplaceEq1Add1
        ## </d 'Multiply Two Digits'>
        ## <d 'Multiply Two Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (2) (10) (5) mulass
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (10) (5) mulcom
                EqReplaceEq1Mul1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (2) (5) (10) mulass
                ## <d 'Commutative Property'>
                  (* (* (2) (5)) (10)) (* (2) (* (5) (10))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Reorder Terms'>
          ## </d 'Rearrange Terms'>
          ## <d 'Evaluate'>
            2times5
            EqReplaceEq1Mul0
          ## </d 'Evaluate'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Digits'>
      ## </d 'One-Digit times Multiple-Digits'>
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate Factorial'>
)


## <title> Factorial </title>
thm (factorial6 () () (= (! (6)) (+ (* (7) (* (10) (10))) (* (2) (10))) )
  ## <d 'Evaluate Factorial'>
    (5) factorialrecurse
    ## <d 'Evaluate'>
      5plus1
      EqReplaceEq0Fact0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      5plus1
      EqReplaceEq1Mul1
    ## </d 'Evaluate'>
  ## </d 'Evaluate Factorial'>
  ## <d 'Evaluate Factorial'>
    ## <d 'Evaluate'>
      factorial5
      EqReplaceEq1Mul0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'One-Digit times Multiple-Digits'>
        ## <d 'Rearrange Digits'>
          ## <d 'Distributive Property'>
            (* (10) (10)) (* (2) (10)) (6) distl
          ## </d 'Distributive Property'>
        ## </d 'Rearrange Digits'>
        ## <d 'Multiply Two Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (2) (10) (6) mulass
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (10) (6) mulcom
                EqReplaceEq1Mul1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (2) (6) (10) mulass
                ## <d 'Commutative Property'>
                  (* (* (2) (6)) (10)) (* (2) (* (6) (10))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Reorder Terms'>
          ## </d 'Rearrange Terms'>
          ## <d 'Evaluate'>
            2times6
            EqReplaceEq1Mul0
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Distributive Property'>
              (10) (2) (10) distl
            ## </d 'Distributive Property'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add1
        ## </d 'Multiply Two Digits'>
        ## <d 'Multiply Two Digits'>
          ## <d 'Commutative Property'>
            (* (10) (10)) (6) mulcom
          ## </d 'Commutative Property'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Digits'>
        ## <d 'Evaluate'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Rearrange Terms'>
                ## <d 'Associate All Left'>
                  ## <d 'Associative Property'>
                    (* (6) (* (10) (10))) (* (10) (10)) (* (2) (10)) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (* (6) (* (10) (10))) (* (10) (10))) (* (2) (10))) (+ (* (6) (* (10) (10))) (+ (* (10) (10)) (* (2) (10)))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Associative Property'>
                ## </d 'Associate All Left'>
              ## </d 'Rearrange Terms'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (* (10) (10)) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (* (10) (10))) (* (10) (10)) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    (* (6) (* (10) (10))) addeq2i
                  ## </d 'Multiply By One'>
                  (* (2) (10)) addeq1i
                ## </d 'Multiply By One'>
                EqReplaceEq1
              ## </d 'Multiply By One'>
              ## <d 'Distributive Property'>
                (6) (1) (* (10) (10)) distl
                ## <d 'Commutative Property'>
                  (* (+ (6) (1)) (* (10) (10))) (+ (* (6) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Distributive Property'>
            ## </d 'Group Common Digits'>
            ## <d 'Single-digit Addition'>
              6plus1
              EqReplaceEq1Add0Mul0
            ## </d 'Single-digit Addition'>
          ## </d 'Addition'>
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'One-Digit times Multiple-Digits'>
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate Factorial'>
)


## <title> Factorial </title>
thm (factorial7 () () (= (! (7)) (+ (* (5) (* (10) (* (10) (10)))) (* (4) (10))) )
  ## <d 'Evaluate Factorial'>
    (6) factorialrecurse
    ## <d 'Evaluate'>
      6plus1
      EqReplaceEq0Fact0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      6plus1
      EqReplaceEq1Mul1
    ## </d 'Evaluate'>
  ## </d 'Evaluate Factorial'>
  ## <d 'Evaluate Factorial'>
    ## <d 'Evaluate'>
      factorial6
      EqReplaceEq1Mul0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'One-Digit times Multiple-Digits'>
        ## <d 'Rearrange Digits'>
          ## <d 'Distributive Property'>
            (* (7) (* (10) (10))) (* (2) (10)) (7) distl
          ## </d 'Distributive Property'>
        ## </d 'Rearrange Digits'>
        ## <d 'Multiply Two Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (2) (10) (7) mulass
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (10) (7) mulcom
                EqReplaceEq1Mul1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (2) (7) (10) mulass
                ## <d 'Commutative Property'>
                  (* (* (2) (7)) (10)) (* (2) (* (7) (10))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Reorder Terms'>
          ## </d 'Rearrange Terms'>
          ## <d 'Evaluate'>
            2times7
            EqReplaceEq1Mul0
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Distributive Property'>
              (10) (4) (10) distl
            ## </d 'Distributive Property'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add1
        ## </d 'Multiply Two Digits'>
        ## <d 'Multiply Two Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (7) (* (10) (10)) (7) mulass
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (* (10) (10)) (7) mulcom
                EqReplaceEq1Mul1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (7) (7) (* (10) (10)) mulass
                ## <d 'Commutative Property'>
                  (* (* (7) (7)) (* (10) (10))) (* (7) (* (7) (* (10) (10)))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Reorder Terms'>
          ## </d 'Rearrange Terms'>
          ## <d 'Evaluate'>
            7times7
            EqReplaceEq1Mul0
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Distributive Property'>
              (* (4) (10)) (9) (* (10) (10)) distl
            ## </d 'Distributive Property'>
            ## <d 'Evaluate'>
              ## <d 'Associative Property'>
                (4) (10) (* (10) (10)) mulass
              ## </d 'Associative Property'>
              EqReplaceEq1Add0
            ## </d 'Evaluate'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Digits'>
        ## <d 'Evaluate'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Rearrange Terms'>
                ## <d 'Associate All Left'>
                  ## <d 'Associative Property'>
                    (+ (* (4) (* (10) (* (10) (10)))) (* (9) (* (10) (10)))) (* (10) (10)) (* (4) (10)) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (+ (* (4) (* (10) (* (10) (10)))) (* (9) (* (10) (10)))) (* (10) (10))) (* (4) (10))) (+ (+ (* (4) (* (10) (* (10) (10)))) (* (9) (* (10) (10)))) (+ (* (10) (10)) (* (4) (10)))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Associative Property'>
                ## </d 'Associate All Left'>
                ## <d 'Change Associations'>
                  ## <d 'Associative Property'>
                    (* (4) (* (10) (* (10) (10)))) (* (9) (* (10) (10))) (* (10) (10)) addass
                    (* (4) (10)) addeq1i
                  ## </d 'Associative Property'>
                  EqReplaceEq1
                ## </d 'Change Associations'>
              ## </d 'Rearrange Terms'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Multiply By One'>
                      ## <d 'Evaluate'>
                        ## <d 'Evaluate'>
                          (* (10) (10)) mulidr
                        ## </d 'Evaluate'>
                        ## <d 'Commutative Property'>
                          (* (1) (* (10) (10))) (* (10) (10)) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                      ## </d 'Evaluate'>
                      (* (9) (* (10) (10))) addeq2i
                    ## </d 'Multiply By One'>
                    (* (4) (* (10) (* (10) (10)))) addeq2i
                  ## </d 'Multiply By One'>
                  (* (4) (10)) addeq1i
                ## </d 'Multiply By One'>
                EqReplaceEq1
              ## </d 'Multiply By One'>
              ## <d 'Distributive Property'>
                (9) (1) (* (10) (10)) distl
                ## <d 'Commutative Property'>
                  (* (+ (9) (1)) (* (10) (10))) (+ (* (9) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0Add1
              ## </d 'Distributive Property'>
            ## </d 'Group Common Digits'>
            ## <d 'Single-digit Addition'>
              9plus1
              EqReplaceEq1Add0Add1Mul0
            ## </d 'Single-digit Addition'>
            ## <d 'Carry the One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (* (10) (* (10) (10))) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (* (10) (* (10) (10)))) (* (10) (* (10) (10))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (* (4) (* (10) (* (10) (10)))) addeq2i
              ## </d 'Multiply By One'>
              ## <d 'Distributive Property'>
                (4) (1) (* (10) (* (10) (10))) distl
                ## <d 'Commutative Property'>
                  (* (+ (4) (1)) (* (10) (* (10) (10)))) (+ (* (4) (* (10) (* (10) (10)))) (* (1) (* (10) (* (10) (10))))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Distributive Property'>
              EqReplaceEq1Add0
            ## </d 'Carry the One'>
            ## <d 'Single-digit Addition'>
              4plus1
              EqReplaceEq1Add0Mul0
            ## </d 'Single-digit Addition'>
          ## </d 'Addition'>
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'One-Digit times Multiple-Digits'>
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate Factorial'>
)


## <title> Factorial </title>
thm (factorial8 () () (= (! (8)) (+ (* (4) (* (10) (* (10) (* (10) (10))))) (+ (* (3) (* (10) (10))) (* (2) (10))) ) )
  ## <d 'Evaluate Factorial'>
    (7) factorialrecurse
    ## <d 'Evaluate'>
      7plus1
      EqReplaceEq0Fact0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      7plus1
      EqReplaceEq1Mul1
    ## </d 'Evaluate'>
  ## </d 'Evaluate Factorial'>
  ## <d 'Evaluate Factorial'>
    ## <d 'Evaluate'>
      factorial7
      EqReplaceEq1Mul0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'One-Digit times Multiple-Digits'>
        ## <d 'Rearrange Digits'>
          ## <d 'Distributive Property'>
            (* (5) (* (10) (* (10) (10)))) (* (4) (10)) (8) distl
          ## </d 'Distributive Property'>
        ## </d 'Rearrange Digits'>
        ## <d 'Multiply Two Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (4) (10) (8) mulass
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (10) (8) mulcom
                EqReplaceEq1Mul1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (4) (8) (10) mulass
                ## <d 'Commutative Property'>
                  (* (* (4) (8)) (10)) (* (4) (* (8) (10))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Reorder Terms'>
          ## </d 'Rearrange Terms'>
          ## <d 'Evaluate'>
            4times8
            EqReplaceEq1Mul0
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Distributive Property'>
              (* (3) (10)) (2) (10) distl
            ## </d 'Distributive Property'>
            ## <d 'Evaluate'>
              ## <d 'Associative Property'>
                (3) (10) (10) mulass
              ## </d 'Associative Property'>
              EqReplaceEq1Add0
            ## </d 'Evaluate'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add1
        ## </d 'Multiply Two Digits'>
        ## <d 'Multiply Two Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (5) (* (10) (* (10) (10))) (8) mulass
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (* (10) (* (10) (10))) (8) mulcom
                EqReplaceEq1Mul1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (5) (8) (* (10) (* (10) (10))) mulass
                ## <d 'Commutative Property'>
                  (* (* (5) (8)) (* (10) (* (10) (10)))) (* (5) (* (8) (* (10) (* (10) (10))))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Reorder Terms'>
          ## </d 'Rearrange Terms'>
          ## <d 'Evaluate'>
            5times8
            EqReplaceEq1Mul0
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Associative Property'>
              (4) (10) (* (10) (* (10) (10))) mulass
            ## </d 'Associative Property'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Digits'>
      ## </d 'One-Digit times Multiple-Digits'>
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate Factorial'>
)



thm (notDividesExample() () (-. (| (7) (+ (* (2) (10)) (2))))
  (7) (3) (+ (* (2) (10)) (2)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      1less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      7times3
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (3)) (+ (* (2) (10)) (1)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        3plus1
        (7) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        7times4
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (+ (3) (1))) (+ (* (2) (10)) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

thm (dividesExample() () (| (7) (+ (* (3) (* (10) (10))) (+ (* (4) (10)) (3))))
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (7) (* (4) (10)) (9) distr
        ## </d 'Distributive Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Pull Out Base 10'>
        ## <d 'Associative Property'>
          (7) (4) (10) mulass
          ## <d 'Commutative Property'>
            (* (* (7) (4)) (10)) (* (7) (* (4) (10))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (* (7) (9)) addeq1i
        ## </d 'Associative Property'>
        EqReplaceEq1
      ## </d 'Pull Out Base 10'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            7times9
          ## </d 'Multiply Base'>
          (* (* (7) (4)) (10)) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Significant Digits'>
            7times4
            (10) muleq1i
          ## </d 'Multiply Significant Digits'>
          ## <d 'Multiply Base'>
            ## <d 'Distributive Property'>
              (* (2) (10)) (8) (10) distl
            ## </d 'Distributive Property'>
            ## <d 'Evaluate'>
              ## <d 'Associative Property'>
                (2) (10) (10) mulass
              ## </d 'Associative Property'>
              EqReplaceEq1Add0
            ## </d 'Evaluate'>
            EqReplaceEq1
          ## </d 'Multiply Base'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
      ## <d 'Sum the Total'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  (+ (* (2) (* (10) (10))) (* (8) (10))) (* (6) (10)) (3) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (+ (* (2) (* (10) (10))) (* (8) (10))) (* (6) (10))) (3)) (+ (+ (* (2) (* (10) (10))) (* (8) (10))) (+ (* (6) (10)) (3))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (* (2) (* (10) (10))) (* (8) (10)) (* (6) (10)) addass
                  (3) addeq1i
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
            ## <d 'Distributive Property'>
              (8) (6) (10) distl
              ## <d 'Commutative Property'>
                (* (+ (8) (6)) (10)) (+ (* (8) (10)) (* (6) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0Add1
            ## </d 'Distributive Property'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            8plus6
            EqReplaceEq1Add0Add1Mul0
          ## </d 'Single-digit Addition'>
          ## <d 'Carry the One'>
            ## <d 'Distributive Property'>
              (10) (4) (10) distl
              (* (2) (* (10) (10))) addeq2i
            ## </d 'Distributive Property'>
            ## <d 'Associative Property'>
              (* (2) (* (10) (10))) (* (10) (10)) (* (4) (10)) addass
              ## <d 'Commutative Property'>
                (+ (+ (* (2) (* (10) (10))) (* (10) (10))) (* (4) (10))) (+ (* (2) (* (10) (10))) (+ (* (10) (10)) (* (4) (10)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1
            ## </d 'Associative Property'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (* (10) (10)) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (* (10) (10))) (* (10) (10)) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              EqReplaceEq1Add0Add1
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (2) (1) (* (10) (10)) distl
              ## <d 'Commutative Property'>
                (* (+ (2) (1)) (* (10) (10))) (+ (* (2) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0
            ## </d 'Distributive Property'>
            EqReplaceEq1Add0
          ## </d 'Carry the One'>
          ## <d 'Single-digit Addition'>
            2plus1
            EqReplaceEq1Add0Add0Mul0
          ## </d 'Single-digit Addition'>
          ## <d 'Simplify'>
            ## <d 'Associative Property'>
              (* (3) (* (10) (10))) (* (4) (10)) (3) addass
            ## </d 'Associative Property'>
            EqReplaceEq1
          ## </d 'Simplify'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Sum the Total'>
    ## </d 'Multiplication'>
  ## </d 'Evaluate'>
  proveDivides
)

thm (notEqualExample() () (-. (= (+ (10) (8)) (+ (* (6) (10)) (7))))
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (8)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (8)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (8) (2) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (8) (2)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          8plus2
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      2less6
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less7
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (6) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (6) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Convert to ≠'>
    (+ (10) (8)) (+ (* (6) (10)) (7)) ltneq
    ax-mp
  ## </d 'Convert to ≠'>
)

## <title> Exponentiation </title>
thm (exponentExample() () (= (exp (6) (4)) (+ (* (10) (* (10) (10))) (+ (* (2) (* (10) (10))) (+ (* (9) (10)) (6)) ) ) )
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3plus1
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (3) (1)) (4) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (6) expeq2i
  ## </d 'Evaluate'>
  (6) (3) expplus1
  EqReplaceEq1
  ## <d 'Evaluate'>
    6power3
    EqReplaceEq1Mul1
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (6) (* (2) (* (10) (10))) (+ (10) (6)) distr
        ## </d 'Distributive Property'>
        ## <d 'Distributive Property'>
          (6) (10) (6) distr
          EqReplaceEq1Add1
        ## </d 'Distributive Property'>
        ## <d 'Associative Property'>
          (* (6) (* (2) (* (10) (10)))) (* (6) (10)) (* (6) (6)) addass
          ## <d 'Commutative Property'>
            (+ (+ (* (6) (* (2) (* (10) (10)))) (* (6) (10))) (* (6) (6))) (+ (* (6) (* (2) (* (10) (10)))) (+ (* (6) (10)) (* (6) (6)))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1
        ## </d 'Associative Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Pull Out Base 10'>
        ## <d 'Associative Property'>
          (6) (2) (* (10) (10)) mulass
          ## <d 'Commutative Property'>
            (* (* (6) (2)) (* (10) (10))) (* (6) (* (2) (* (10) (10)))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          (* (6) (10)) addeq1i
          (* (6) (6)) addeq1i
        ## </d 'Associative Property'>
        EqReplaceEq1
      ## </d 'Pull Out Base 10'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            6times6
          ## </d 'Multiply Base'>
          (+ (* (* (6) (2)) (* (10) (10))) (* (6) (10))) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Significant Digits'>
            6times2
            (* (10) (10)) muleq1i
          ## </d 'Multiply Significant Digits'>
          ## <d 'Multiply Base'>
            ## <d 'Distributive Property'>
              (10) (2) (* (10) (10)) distl
            ## </d 'Distributive Property'>
            EqReplaceEq1
          ## </d 'Multiply Base'>
          EqReplaceEq1Add0Add0
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
      ## <d 'Sum the Total'>
        ## <d 'Evaluate'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (* (10) (* (10) (10))) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (* (10) (* (10) (10)))) (* (10) (* (10) (10))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    (* (2) (* (10) (10))) addeq1i
                  ## </d 'Multiply By One'>
                  (* (6) (10)) addeq1i
                ## </d 'Multiply By One'>
              ## </d 'Multiply By One'>
            ## </d 'Group Common Digits'>
            ## <d 'Simplify'>
              ## <d 'Associative Property'>
                (* (1) (* (10) (* (10) (10)))) (* (2) (* (10) (10))) (* (6) (10)) addass
              ## </d 'Associative Property'>
              ## <d 'Simplify'>
                ## <d 'Multiplicative Identity'>
                  (* (10) (* (10) (10))) mulidr
                ## </d 'Multiplicative Identity'>
                EqReplaceEq1Add0
              ## </d 'Simplify'>
              EqReplaceEq1
            ## </d 'Simplify'>
          ## </d 'Addition'>
          (+ (* (3) (10)) (6)) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Rearrange Terms'>
                ## <d 'Associate All Left'>
                  ## <d 'Associative Property'>
                    (+ (* (10) (* (10) (10))) (+ (* (2) (* (10) (10))) (* (6) (10)))) (* (3) (10)) (6) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (+ (* (10) (* (10) (10))) (+ (* (2) (* (10) (10))) (* (6) (10)))) (* (3) (10))) (6)) (+ (+ (* (10) (* (10) (10))) (+ (* (2) (* (10) (10))) (* (6) (10)))) (+ (* (3) (10)) (6))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Associative Property'>
                  ## <d 'Associative Property'>
                    (* (10) (* (10) (10))) (* (2) (* (10) (10))) (* (6) (10)) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (* (10) (* (10) (10))) (* (2) (* (10) (10)))) (* (6) (10))) (+ (* (10) (* (10) (10))) (+ (* (2) (* (10) (10))) (* (6) (10)))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1Add0Add0
                  ## </d 'Associative Property'>
                ## </d 'Associate All Left'>
                ## <d 'Change Associations'>
                  ## <d 'Associative Property'>
                    (+ (* (10) (* (10) (10))) (* (2) (* (10) (10)))) (* (6) (10)) (* (3) (10)) addass
                    (6) addeq1i
                  ## </d 'Associative Property'>
                  EqReplaceEq1
                ## </d 'Change Associations'>
              ## </d 'Rearrange Terms'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Multiply By One'>
                      ## <d 'Evaluate'>
                        ## <d 'Evaluate'>
                          (* (10) (* (10) (10))) mulidr
                        ## </d 'Evaluate'>
                        ## <d 'Commutative Property'>
                          (* (1) (* (10) (* (10) (10)))) (* (10) (* (10) (10))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                      ## </d 'Evaluate'>
                      (* (2) (* (10) (10))) addeq1i
                    ## </d 'Multiply By One'>
                    (+ (* (6) (10)) (* (3) (10))) addeq1i
                  ## </d 'Multiply By One'>
                  (6) addeq1i
                ## </d 'Multiply By One'>
                EqReplaceEq1
              ## </d 'Multiply By One'>
              ## <d 'Distributive Property'>
                (6) (3) (10) distl
                ## <d 'Commutative Property'>
                  (* (+ (6) (3)) (10)) (+ (* (6) (10)) (* (3) (10))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0Add1
              ## </d 'Distributive Property'>
            ## </d 'Group Common Digits'>
            ## <d 'Single-digit Addition'>
              6plus3
              EqReplaceEq1Add0Add1Mul0
            ## </d 'Single-digit Addition'>
            ## <d 'Simplify'>
              ## <d 'Associative Property'>
                (+ (* (1) (* (10) (* (10) (10)))) (* (2) (* (10) (10)))) (* (9) (10)) (6) addass
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (* (1) (* (10) (* (10) (10)))) (* (2) (* (10) (10))) (+ (* (9) (10)) (6)) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
              ## <d 'Simplify'>
                ## <d 'Multiplicative Identity'>
                  (* (10) (* (10) (10))) mulidr
                ## </d 'Multiplicative Identity'>
                EqReplaceEq1Add0
              ## </d 'Simplify'>
              EqReplaceEq1
            ## </d 'Simplify'>
          ## </d 'Addition'>
          EqReplaceEq1
        ## </d 'Evaluate'>
        EqReplaceEq1
      ## </d 'Sum the Total'>
    ## </d 'Multiplication'>
    EqReplaceEq1
  ## </d 'Evaluate'>
)

## <title> Factorial </title>
thm (factorialExample () () (= (! (9)) (+ (* (3) (* (10) (* (10) (* (10) (* (10) (10)))))) (+ (* (6) (* (10) (* (10) (* (10) (10))))) (+ (* (2) (* (10) (* (10) (10)))) (+ (* (8) (* (10) (10))) (* (8) (10))) ) ) ) )
  ## <d 'Evaluate Factorial'>
    (8) factorialrecurse
    ## <d 'Evaluate'>
      8plus1
      EqReplaceEq0Fact0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      8plus1
      EqReplaceEq1Mul1
    ## </d 'Evaluate'>
  ## </d 'Evaluate Factorial'>
  ## <d 'Evaluate Factorial'>
    ## <d 'Evaluate'>
      factorial8
      EqReplaceEq1Mul0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'One-Digit times Multiple-Digits'>
        ## <d 'Rearrange Digits'>
          ## <d 'Distributive Property'>
            (* (4) (* (10) (* (10) (* (10) (10))))) (+ (* (3) (* (10) (10))) (* (2) (10))) (9) distl
          ## </d 'Distributive Property'>
          ## <d 'Distributive Property'>
            (* (3) (* (10) (10))) (* (2) (10)) (9) distl
            EqReplaceEq1Add1
          ## </d 'Distributive Property'>
        ## </d 'Rearrange Digits'>
        ## <d 'Multiply Two Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (2) (10) (9) mulass
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (10) (9) mulcom
                EqReplaceEq1Mul1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (2) (9) (10) mulass
                ## <d 'Commutative Property'>
                  (* (* (2) (9)) (10)) (* (2) (* (9) (10))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Reorder Terms'>
          ## </d 'Rearrange Terms'>
          ## <d 'Evaluate'>
            2times9
            EqReplaceEq1Mul0
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Distributive Property'>
              (10) (8) (10) distl
            ## </d 'Distributive Property'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add1Add1
        ## </d 'Multiply Two Digits'>
        ## <d 'Multiply Two Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (3) (* (10) (10)) (9) mulass
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (* (10) (10)) (9) mulcom
                EqReplaceEq1Mul1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (3) (9) (* (10) (10)) mulass
                ## <d 'Commutative Property'>
                  (* (* (3) (9)) (* (10) (10))) (* (3) (* (9) (* (10) (10)))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Reorder Terms'>
          ## </d 'Rearrange Terms'>
          ## <d 'Evaluate'>
            3times9
            EqReplaceEq1Mul0
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Distributive Property'>
              (* (2) (10)) (7) (* (10) (10)) distl
            ## </d 'Distributive Property'>
            ## <d 'Evaluate'>
              ## <d 'Associative Property'>
                (2) (10) (* (10) (10)) mulass
              ## </d 'Associative Property'>
              EqReplaceEq1Add0
            ## </d 'Evaluate'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add1Add0
        ## </d 'Multiply Two Digits'>
        ## <d 'Evaluate'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Rearrange Terms'>
                ## <d 'Associate All Left'>
                  ## <d 'Associative Property'>
                    (+ (* (2) (* (10) (* (10) (10)))) (* (7) (* (10) (10)))) (* (10) (10)) (* (8) (10)) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (+ (* (2) (* (10) (* (10) (10)))) (* (7) (* (10) (10)))) (* (10) (10))) (* (8) (10))) (+ (+ (* (2) (* (10) (* (10) (10)))) (* (7) (* (10) (10)))) (+ (* (10) (10)) (* (8) (10)))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Associative Property'>
                ## </d 'Associate All Left'>
                ## <d 'Change Associations'>
                  ## <d 'Associative Property'>
                    (* (2) (* (10) (* (10) (10)))) (* (7) (* (10) (10))) (* (10) (10)) addass
                    (* (8) (10)) addeq1i
                  ## </d 'Associative Property'>
                  EqReplaceEq1
                ## </d 'Change Associations'>
              ## </d 'Rearrange Terms'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Multiply By One'>
                      ## <d 'Evaluate'>
                        ## <d 'Evaluate'>
                          (* (10) (10)) mulidr
                        ## </d 'Evaluate'>
                        ## <d 'Commutative Property'>
                          (* (1) (* (10) (10))) (* (10) (10)) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                      ## </d 'Evaluate'>
                      (* (7) (* (10) (10))) addeq2i
                    ## </d 'Multiply By One'>
                    (* (2) (* (10) (* (10) (10)))) addeq2i
                  ## </d 'Multiply By One'>
                  (* (8) (10)) addeq1i
                ## </d 'Multiply By One'>
                EqReplaceEq1
              ## </d 'Multiply By One'>
              ## <d 'Distributive Property'>
                (7) (1) (* (10) (10)) distl
                ## <d 'Commutative Property'>
                  (* (+ (7) (1)) (* (10) (10))) (+ (* (7) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0Add1
              ## </d 'Distributive Property'>
            ## </d 'Group Common Digits'>
            ## <d 'Single-digit Addition'>
              7plus1
              EqReplaceEq1Add0Add1Mul0
            ## </d 'Single-digit Addition'>
            ## <d 'Simplify'>
              ## <d 'Associative Property'>
                (* (2) (* (10) (* (10) (10)))) (* (8) (* (10) (10))) (* (8) (10)) addass
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Simplify'>
          ## </d 'Addition'>
          EqReplaceEq1Add1
        ## </d 'Evaluate'>
        ## <d 'Multiply Two Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (4) (* (10) (* (10) (* (10) (10)))) (9) mulass
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (* (10) (* (10) (* (10) (10)))) (9) mulcom
                EqReplaceEq1Mul1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (4) (9) (* (10) (* (10) (* (10) (10)))) mulass
                ## <d 'Commutative Property'>
                  (* (* (4) (9)) (* (10) (* (10) (* (10) (10))))) (* (4) (* (9) (* (10) (* (10) (* (10) (10)))))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Reorder Terms'>
          ## </d 'Rearrange Terms'>
          ## <d 'Evaluate'>
            4times9
            EqReplaceEq1Mul0
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Distributive Property'>
              (* (3) (10)) (6) (* (10) (* (10) (* (10) (10)))) distl
            ## </d 'Distributive Property'>
            ## <d 'Evaluate'>
              ## <d 'Associative Property'>
                (3) (10) (* (10) (* (10) (* (10) (10)))) mulass
              ## </d 'Associative Property'>
              EqReplaceEq1Add0
            ## </d 'Evaluate'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Digits'>
        ## <d 'Evaluate'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Rearrange Terms'>
                ## <d 'Associate All Left'>
                  ## <d 'Associative Property'>
                    (+ (* (3) (* (10) (* (10) (* (10) (* (10) (10)))))) (* (6) (* (10) (* (10) (* (10) (10)))))) (* (2) (* (10) (* (10) (10)))) (+ (* (8) (* (10) (10))) (* (8) (10))) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (+ (* (3) (* (10) (* (10) (* (10) (* (10) (10)))))) (* (6) (* (10) (* (10) (* (10) (10)))))) (* (2) (* (10) (* (10) (10))))) (+ (* (8) (* (10) (10))) (* (8) (10)))) (+ (+ (* (3) (* (10) (* (10) (* (10) (* (10) (10)))))) (* (6) (* (10) (* (10) (* (10) (10)))))) (+ (* (2) (* (10) (* (10) (10)))) (+ (* (8) (* (10) (10))) (* (8) (10))))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Associative Property'>
                  ## <d 'Associative Property'>
                    (+ (+ (* (3) (* (10) (* (10) (* (10) (* (10) (10)))))) (* (6) (* (10) (* (10) (* (10) (10)))))) (* (2) (* (10) (* (10) (10))))) (* (8) (* (10) (10))) (* (8) (10)) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (+ (+ (* (3) (* (10) (* (10) (* (10) (* (10) (10)))))) (* (6) (* (10) (* (10) (* (10) (10)))))) (* (2) (* (10) (* (10) (10))))) (* (8) (* (10) (10)))) (* (8) (10))) (+ (+ (+ (* (3) (* (10) (* (10) (* (10) (* (10) (10)))))) (* (6) (* (10) (* (10) (* (10) (10)))))) (* (2) (* (10) (* (10) (10))))) (+ (* (8) (* (10) (10))) (* (8) (10)))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1
                  ## </d 'Associative Property'>
                ## </d 'Associate All Left'>
              ## </d 'Rearrange Terms'>
            ## </d 'Group Common Digits'>
            ## <d 'Simplify'>
              ## <d 'Associative Property'>
                (+ (+ (* (3) (* (10) (* (10) (* (10) (* (10) (10)))))) (* (6) (* (10) (* (10) (* (10) (10)))))) (* (2) (* (10) (* (10) (10))))) (* (8) (* (10) (10))) (* (8) (10)) addass
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (+ (* (3) (* (10) (* (10) (* (10) (* (10) (10)))))) (* (6) (* (10) (* (10) (* (10) (10)))))) (* (2) (* (10) (* (10) (10)))) (+ (* (8) (* (10) (10))) (* (8) (10))) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (* (3) (* (10) (* (10) (* (10) (* (10) (10)))))) (* (6) (* (10) (* (10) (* (10) (10))))) (+ (* (2) (* (10) (* (10) (10)))) (+ (* (8) (* (10) (10))) (* (8) (10)))) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Simplify'>
          ## </d 'Addition'>
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'One-Digit times Multiple-Digits'>
      EqReplaceEq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate Factorial'>
)

thm (halfMinusExample() () (= (.- (+ (* (2) (* (10) (10))) (+ (* (4) (10)) (3))) (+ (* (10) (10)) (+ (* (8) (10)) (6)))) (+ (* (5) (10)) (7)))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (* (10) (10)) (+ (* (8) (10)) (6))) (* (5) (10)) (7) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (10) (10)) (+ (* (8) (10)) (6))) (* (5) (10))) (7)) (+ (+ (* (10) (10)) (+ (* (8) (10)) (6))) (+ (* (5) (10)) (7))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (* (10) (10)) (* (8) (10)) (6) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (10) (10)) (* (8) (10))) (6)) (+ (* (10) (10)) (+ (* (8) (10)) (6))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0Add0
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (+ (* (10) (10)) (* (8) (10))) (6) (* (5) (10)) addass
                (7) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (6) (* (5) (10)) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (+ (* (10) (10)) (* (8) (10))) (* (5) (10)) (6) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (10) (10)) (* (8) (10))) (* (5) (10))) (6)) (+ (+ (* (10) (10)) (* (8) (10))) (+ (* (5) (10)) (6))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (+ (* (10) (10)) (* (8) (10))) (* (5) (10))) (6) (7) addass
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (* (10) (10)) (* (8) (10)) (* (5) (10)) addass
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (* (10) (10)) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (* (10) (10))) (* (10) (10)) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (+ (* (8) (10)) (* (5) (10))) addeq1i
              ## </d 'Multiply By One'>
              (+ (6) (7)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (8) (5) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (8) (5)) (10)) (+ (* (8) (10)) (* (5) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0Add1
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          6plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (+ (* (1) (* (10) (10))) (* (+ (8) (5)) (10))) (10) (3) addass
            ## <d 'Commutative Property'>
              (+ (+ (+ (* (1) (* (10) (10))) (* (+ (8) (5)) (10))) (10)) (3)) (+ (+ (* (1) (* (10) (10))) (* (+ (8) (5)) (10))) (+ (10) (3))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Associative Property'>
            (* (1) (* (10) (10))) (* (+ (8) (5)) (10)) (* (1) (10)) addass
            EqReplaceEq1Add0
          ## </d 'Associative Property'>
          ## <d 'Distributive Property'>
            (+ (8) (5)) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (+ (8) (5)) (1)) (10)) (+ (* (+ (8) (5)) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0Add1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          ## <d 'Evaluate'>
            8plus5
            (1) addeq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Addition'>
              ## <d 'Group Common Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Change Associations'>
                    ## <d 'Associative Property'>
                      (10) (3) (1) addass
                    ## </d 'Associative Property'>
                  ## </d 'Change Associations'>
                ## </d 'Rearrange Terms'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (10) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (10)) (10) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    (+ (3) (1)) addeq1i
                  ## </d 'Multiply By One'>
                  EqReplaceEq1
                ## </d 'Multiply By One'>
              ## </d 'Group Common Digits'>
              ## <d 'Single-digit Addition'>
                3plus1
                EqReplaceEq1Add1
              ## </d 'Single-digit Addition'>
              ## <d 'Simplify'>
                ## <d 'Simplify'>
                  ## <d 'Multiplicative Identity'>
                    (10) mulidr
                  ## </d 'Multiplicative Identity'>
                  (4) addeq1i
                ## </d 'Simplify'>
                EqReplaceEq1
              ## </d 'Simplify'>
            ## </d 'Addition'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add0Add1Mul0
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Distributive Property'>
            (10) (4) (10) distl
            (* (1) (* (10) (10))) addeq2i
          ## </d 'Distributive Property'>
          ## <d 'Associative Property'>
            (* (1) (* (10) (10))) (* (10) (10)) (* (4) (10)) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (1) (* (10) (10))) (* (10) (10))) (* (4) (10))) (+ (* (1) (* (10) (10))) (+ (* (10) (10)) (* (4) (10)))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (* (10) (10)) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (* (10) (10))) (* (10) (10)) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (* (10) (10)) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (* (10) (10))) (+ (* (1) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1Add0
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Add0Add0Mul0
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Associative Property'>
            (* (2) (* (10) (10))) (* (4) (10)) (3) addass
          ## </d 'Associative Property'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (+ (* (10) (10)) (+ (* (8) (10)) (6))) (+ (* (5) (10)) (7))) (+ (* (2) (* (10) (10))) (+ (* (4) (10)) (3))) eqcom
      mpbi
    ## </d 'Commutative Property'>
    addhalfminusi
  ## </d 'Evaluate'>
)



## <title> Substitution </title>
## <table>
##   (= A (+ B (*  [ C ]   ]   ]  A')))
##   (=            [ C ]   [ D ] )
##   (= A (+ B (*  [   [   [ D ]  A')))
## </table>
thm (EqReplaceEq1Add1Mul0 () (
     replacee (= A (+ B (* C A')))
     substitution (= C D)) 
     (= A (+ B (* D A')))
  replacee substitution
  A' muleq1i
  EqReplaceEq1Add1
)

thm (halfMinusExample2() () (= (.- (+ (* (10) (10)) (+ (* (8) (10)) (6))) (+ (* (2) (* (10) (10))) (+ (* (4) (10)) (3)))) (0)) 
  ## <d 'Evaluate'>
    ## <d 'Numbers Get Higher Rounding Up'>
      ## <d 'Derive Smaller Inequality'>
        (+ (10) (3)) pa_ax1plus
        ## <d 'Evaluate'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Rearrange Terms'>
                ## <d 'Change Associations'>
                  ## <d 'Associative Property'>
                    (10) (3) (1) addass
                  ## </d 'Associative Property'>
                ## </d 'Change Associations'>
              ## </d 'Rearrange Terms'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Evaluate'>
                    ## <d 'Evaluate'>
                      (10) mulidr
                    ## </d 'Evaluate'>
                    ## <d 'Commutative Property'>
                      (* (1) (10)) (10) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Evaluate'>
                  (+ (3) (1)) addeq1i
                ## </d 'Multiply By One'>
                EqReplaceEq1
              ## </d 'Multiply By One'>
            ## </d 'Group Common Digits'>
            ## <d 'Single-digit Addition'>
              3plus1
              EqReplaceEq1Add1
            ## </d 'Single-digit Addition'>
            ## <d 'Simplify'>
              ## <d 'Simplify'>
                ## <d 'Multiplicative Identity'>
                  (10) mulidr
                ## </d 'Multiplicative Identity'>
                (4) addeq1i
              ## </d 'Simplify'>
              EqReplaceEq1
            ## </d 'Simplify'>
          ## </d 'Addition'>
          EqReplaceNot0Eq1
        ## </d 'Evaluate'>
        ## <d 'Less Than Or Equal To Zero'>
          (+ (10) (4)) 0le
        ## </d 'Less Than Or Equal To Zero'>
        axlttri2i
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (+ (* (10) (10)) (+ (* (8) (10)) (6))) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (+ (* (10) (10)) (+ (* (8) (10)) (6))) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
      ## <d 'Simplify Right Side'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  (+ (* (10) (10)) (+ (* (8) (10)) (6))) (10) (4) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (+ (* (10) (10)) (+ (* (8) (10)) (6))) (10)) (4)) (+ (+ (* (10) (10)) (+ (* (8) (10)) (6))) (+ (10) (4))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
                ## <d 'Associative Property'>
                  (* (10) (10)) (* (8) (10)) (6) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (* (10) (10)) (* (8) (10))) (6)) (+ (* (10) (10)) (+ (* (8) (10)) (6))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0Add0
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
              ## <d 'Reorder Terms'>
                ## <d 'Associative Property'>
                  (+ (* (10) (10)) (* (8) (10))) (6) (10) addass
                  (4) addeq1i
                ## </d 'Associative Property'>
                ## <d 'Commutative Property'>
                  (6) (10) addcom
                  EqReplaceEq1Add0Add1
                ## </d 'Commutative Property'>
                ## <d 'Associative Property'>
                  (+ (* (10) (10)) (* (8) (10))) (10) (6) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (+ (* (10) (10)) (* (8) (10))) (10)) (6)) (+ (+ (* (10) (10)) (* (8) (10))) (+ (10) (6))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Reorder Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (+ (+ (* (10) (10)) (* (8) (10))) (10)) (6) (4) addass
                ## </d 'Associative Property'>
                ## <d 'Associative Property'>
                  (* (10) (10)) (* (8) (10)) (10) addass
                  EqReplaceEq1Add0
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Evaluate'>
                    ## <d 'Evaluate'>
                      (* (10) (10)) mulidr
                    ## </d 'Evaluate'>
                    ## <d 'Commutative Property'>
                      (* (1) (* (10) (10))) (* (10) (10)) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Evaluate'>
                  (+ (* (8) (10)) (10)) addeq1i
                ## </d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (10) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (10)) (10) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    (* (8) (10)) addeq2i
                  ## </d 'Multiply By One'>
                  EqReplaceEq1Add1
                ## </d 'Multiply By One'>
                (+ (6) (4)) addeq1i
              ## </d 'Multiply By One'>
              EqReplaceEq1
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (8) (1) (10) distl
              ## <d 'Commutative Property'>
                (* (+ (8) (1)) (10)) (+ (* (8) (10)) (* (1) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0Add1
            ## </d 'Distributive Property'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            6plus4
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
          ## <d 'Carry the One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (* (1) (* (10) (10))) (* (+ (8) (1)) (10))) addeq2i
            ## </d 'Multiply By One'>
            ## <d 'Associative Property'>
              (* (1) (* (10) (10))) (* (+ (8) (1)) (10)) (* (1) (10)) addass
              EqReplaceEq1
            ## </d 'Associative Property'>
            ## <d 'Distributive Property'>
              (+ (8) (1)) (1) (10) distl
              ## <d 'Commutative Property'>
                (* (+ (+ (8) (1)) (1)) (10)) (+ (* (+ (8) (1)) (10)) (* (1) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add1
            ## </d 'Distributive Property'>
            EqReplaceEq1
          ## </d 'Carry the One'>
          ## <d 'Single-digit Addition'>
            ## <d 'Evaluate'>
              8plus1
              (1) addeq1i
            ## </d 'Evaluate'>
            ## <d 'Evaluate'>
              9plus1
              EqReplaceEq1
            ## </d 'Evaluate'>
            EqReplaceEq1Add1Mul0
          ## </d 'Single-digit Addition'>
          ## <d 'Carry the One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (* (10) (10)) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (* (10) (10))) (* (10) (10)) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (* (1) (* (10) (10))) addeq2i
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (1) (1) (* (10) (10)) distl
              ## <d 'Commutative Property'>
                (* (+ (1) (1)) (* (10) (10))) (+ (* (1) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1
            ## </d 'Distributive Property'>
            EqReplaceEq1
          ## </d 'Carry the One'>
          ## <d 'Single-digit Addition'>
            1plus1
            EqReplaceEq1Mul0
          ## </d 'Single-digit Addition'>
        ## </d 'Addition'>
        EqReplaceLt1
      ## </d 'Simplify Right Side'>
    ## </d 'Numbers Get Higher Rounding Up'>
    ## <d 'Higher Remaining Digits'>
      ## <d 'Compare Smaller Digits'>
        ## <d 'Derive Smaller Inequality'>
          (+ (* (4) (10)) (2)) pa_ax1plus
          ## <d 'Evaluate'>
            ## <d 'Addition'>
              ## <d 'Group Common Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Change Associations'>
                    ## <d 'Associative Property'>
                      (* (4) (10)) (2) (1) addass
                    ## </d 'Associative Property'>
                  ## </d 'Change Associations'>
                ## </d 'Rearrange Terms'>
              ## </d 'Group Common Digits'>
              ## <d 'Single-digit Addition'>
                2plus1
                EqReplaceEq1Add1
              ## </d 'Single-digit Addition'>
            ## </d 'Addition'>
            EqReplaceNot0Eq1
          ## </d 'Evaluate'>
          ## <d 'Less Than Or Equal To Zero'>
            (+ (* (4) (10)) (3)) 0le
          ## </d 'Less Than Or Equal To Zero'>
          axlttri2i
        ## </d 'Derive Smaller Inequality'>
        ## <d 'Add To Both Sides'>
          (* (2) (* (10) (10))) ltadd2i
        ## </d 'Add To Both Sides'>
        ## <d 'Simplify Left Side'>
          (* (2) (* (10) (10))) pa_ax3
          EqReplaceLt0
        ## </d 'Simplify Left Side'>
      ## </d 'Compare Smaller Digits'>
      LtReplaceLt1
    ## </d 'Higher Remaining Digits'>
    ## <d 'Convert to ≤'>
      (+ (* (10) (10)) (+ (* (8) (10)) (6))) (+ (* (2) (* (10) (10))) (+ (* (4) (10)) (3))) ltle
      ax-mp
    ## </d 'Convert to ≤'>
    halfminus-negi
  ## </d 'Evaluate'>
)

thm (lessThanEqualExample() () (<= (+ (* (4) (10)) (2)) (+ (* (6) (* (10) (10))) (+ (* (3) (10)) (9))))
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (* (4) (10)) (2)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (* (4) (10)) (2)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (4) (10)) (2) (8) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          2plus8
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (4) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (4) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (4) (1)) (10)) (+ (* (4) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          4plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'More Digits'>
    ## <d 'Compare First Digits'>
      5less10
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    LtReplaceLt1
  ## </d 'More Digits'>
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      1less6
    ## </d 'Compare First Digits'>
    (+ (* (9) (10)) (9)) pa_ax1plus
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (9) (10)) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (9) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (9) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (9) (1)) (10)) (+ (* (9) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceNot0Eq1
    ## </d 'Evaluate'>
    ## <d 'Less Than Or Equal To Zero'>
      (* (10) (10)) 0le
    ## </d 'Less Than Or Equal To Zero'>
    axlttri2i
    ltmul2i
    ## <d 'Evaluate'>
      (* (10) (10)) mulidr
      EqReplaceLt0
    ## </d 'Evaluate'>
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        (+ (* (3) (10)) (8)) pa_ax1plus
        ## <d 'Evaluate'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Rearrange Terms'>
                ## <d 'Change Associations'>
                  ## <d 'Associative Property'>
                    (* (3) (10)) (8) (1) addass
                  ## </d 'Associative Property'>
                ## </d 'Change Associations'>
              ## </d 'Rearrange Terms'>
            ## </d 'Group Common Digits'>
            ## <d 'Single-digit Addition'>
              8plus1
              EqReplaceEq1Add1
            ## </d 'Single-digit Addition'>
          ## </d 'Addition'>
          EqReplaceNot0Eq1
        ## </d 'Evaluate'>
        ## <d 'Less Than Or Equal To Zero'>
          (+ (* (3) (10)) (9)) 0le
        ## </d 'Less Than Or Equal To Zero'>
        axlttri2i
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (6) (* (10) (10))) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (6) (* (10) (10))) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Convert to ≤'>
    (+ (* (4) (10)) (2)) (+ (* (6) (* (10) (10))) (+ (* (3) (10)) (9))) ltle
    ax-mp
  ## </d 'Convert to ≤'>
)

thm (lessThanExample() () (< (+ (* (2) (10)) (6)) (+ (* (7) (* (10) (10))) (+ (* (3) (10)) (9))))
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (* (2) (10)) (6)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (* (2) (10)) (6)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (2) (10)) (6) (4) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          6plus4
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (2) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (2) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          2plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'More Digits'>
    ## <d 'Compare First Digits'>
      3less10
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    LtReplaceLt1
  ## </d 'More Digits'>
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      1less7
    ## </d 'Compare First Digits'>
    (+ (* (9) (10)) (9)) pa_ax1plus
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (9) (10)) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (9) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (9) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (9) (1)) (10)) (+ (* (9) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceNot0Eq1
    ## </d 'Evaluate'>
    ## <d 'Less Than Or Equal To Zero'>
      (* (10) (10)) 0le
    ## </d 'Less Than Or Equal To Zero'>
    axlttri2i
    ltmul2i
    ## <d 'Evaluate'>
      (* (10) (10)) mulidr
      EqReplaceLt0
    ## </d 'Evaluate'>
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        (+ (* (3) (10)) (8)) pa_ax1plus
        ## <d 'Evaluate'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Rearrange Terms'>
                ## <d 'Change Associations'>
                  ## <d 'Associative Property'>
                    (* (3) (10)) (8) (1) addass
                  ## </d 'Associative Property'>
                ## </d 'Change Associations'>
              ## </d 'Rearrange Terms'>
            ## </d 'Group Common Digits'>
            ## <d 'Single-digit Addition'>
              8plus1
              EqReplaceEq1Add1
            ## </d 'Single-digit Addition'>
          ## </d 'Addition'>
          EqReplaceNot0Eq1
        ## </d 'Evaluate'>
        ## <d 'Less Than Or Equal To Zero'>
          (+ (* (3) (10)) (9)) 0le
        ## </d 'Less Than Or Equal To Zero'>
        axlttri2i
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (7) (* (10) (10))) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (7) (* (10) (10))) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
)




## <title> Substitution </title>
## <table>
##   (> A  [ B ]   ]   ] )
##   (>    [ B ]   [ C ] )
##   (> A  [   [   [ C ] )
## </table>
thm (GtReplaceGt1 () (
     replacee (> A B)
     substitution (> B C)) 
     (> A C)
  replacee substitution
  A gtTrgt
  ax-mp
)

## <title> One-Digit Inequality </title>
thm (10greater0 () () (> (10) (0))
  10notEqual0
  ## <d 'Greater Than Or Equal To Zero'>
    (10) ge0
  ## </d 'Greater Than Or Equal To Zero'>
  axgrtrii
)

thm (greaterThanExample() () (> (+ (* (3) (* (10) (10))) (* (4) (10))) (+ (* (8) (10)) (1)))
        ## <d 'Add To Both Sides'>
          ## <d 'Derive Smaller Inequality'>
            ## <d 'Number is Not Zero'>
              (+ (* (3) (10)) (9)) pa_ax1plus
              ## <d 'Evaluate'>
                ## <d 'Addition'>
                  ## <d 'Group Common Digits'>
                    ## <d 'Rearrange Terms'>
                      ## <d 'Change Associations'>
                        ## <d 'Associative Property'>
                          (* (3) (10)) (9) (1) addass
                        ## </d 'Associative Property'>
                      ## </d 'Change Associations'>
                    ## </d 'Rearrange Terms'>
                  ## </d 'Group Common Digits'>
                  ## <d 'Single-digit Addition'>
                    9plus1
                    EqReplaceEq1Add1
                  ## </d 'Single-digit Addition'>
                  ## <d 'Carry the One'>
                    ## <d 'Multiply By One'>
                      ## <d 'Evaluate'>
                        ## <d 'Evaluate'>
                          (10) mulidr
                        ## </d 'Evaluate'>
                        ## <d 'Commutative Property'>
                          (* (1) (10)) (10) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                      ## </d 'Evaluate'>
                      (* (3) (10)) addeq2i
                    ## </d 'Multiply By One'>
                    ## <d 'Distributive Property'>
                      (3) (1) (10) distl
                      ## <d 'Commutative Property'>
                        (* (+ (3) (1)) (10)) (+ (* (3) (10)) (* (1) (10))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                      EqReplaceEq1
                    ## </d 'Distributive Property'>
                    EqReplaceEq1
                  ## </d 'Carry the One'>
                  ## <d 'Single-digit Addition'>
                    3plus1
                    EqReplaceEq1Mul0
                  ## </d 'Single-digit Addition'>
                ## </d 'Addition'>
                EqReplaceNot0Eq1
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (0) (* (4) (10)) eqcom
                mtbi
              ## </d 'Commutative Property'>
            ## </d 'Number is Not Zero'>
            ## <d 'Greater Than Or Equal To Zero'>
              (* (4) (10)) ge0
            ## </d 'Greater Than Or Equal To Zero'>
            axgrtrii
          ## </d 'Derive Smaller Inequality'>
          ## <d 'Add To Both Sides'>
            (* (3) (* (10) (10))) gtadd2i
          ## </d 'Add To Both Sides'>
          ## <d 'Simplify Right Side'>
            (* (3) (* (10) (10))) pa_ax3
            EqReplaceGt1
          ## </d 'Simplify Right Side'>
        ## </d 'Add To Both Sides'>
        ## <d 'First Digit is Lower'>
          ## <d 'Highest Digit Inequality'>
            3greater1
          ## </d 'Highest Digit Inequality'>
          ## <d 'Number is Not Zero'>
            (+ (* (9) (10)) (9)) pa_ax1plus
            ## <d 'Evaluate'>
              ## <d 'Addition'>
                ## <d 'Group Common Digits'>
                  ## <d 'Rearrange Terms'>
                    ## <d 'Change Associations'>
                      ## <d 'Associative Property'>
                        (* (9) (10)) (9) (1) addass
                      ## </d 'Associative Property'>
                    ## </d 'Change Associations'>
                  ## </d 'Rearrange Terms'>
                ## </d 'Group Common Digits'>
                ## <d 'Single-digit Addition'>
                  9plus1
                  EqReplaceEq1Add1
                ## </d 'Single-digit Addition'>
                ## <d 'Carry the One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (10) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (10)) (10) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    (* (9) (10)) addeq2i
                  ## </d 'Multiply By One'>
                  ## <d 'Distributive Property'>
                    (9) (1) (10) distl
                    ## <d 'Commutative Property'>
                      (* (+ (9) (1)) (10)) (+ (* (9) (10)) (* (1) (10))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1
                  ## </d 'Distributive Property'>
                  EqReplaceEq1
                ## </d 'Carry the One'>
                ## <d 'Single-digit Addition'>
                  9plus1
                  EqReplaceEq1Mul0
                ## </d 'Single-digit Addition'>
              ## </d 'Addition'>
              EqReplaceNot0Eq1
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (0) (* (10) (10)) eqcom
              mtbi
            ## </d 'Commutative Property'>
          ## </d 'Number is Not Zero'>
          ## <d 'Greater Than Or Equal To Zero'>
            (* (10) (10)) ge0
          ## </d 'Greater Than Or Equal To Zero'>
          axgrtrii
          gtmul2i
          ## <d 'Evaluate'>
            (* (10) (10)) mulidr
            EqReplaceGt1
          ## </d 'Evaluate'>
          GtReplaceGt1
        ## </d 'First Digit is Lower'>
        ## <d 'First Digit is Lower'>
          ## <d 'Add To Both Sides'>
            ## <d 'Derive Smaller Inequality'>
              10greater0
            ## </d 'Derive Smaller Inequality'>
            ## <d 'Add To Both Sides'>
              (* (9) (10)) gtadd2i
            ## </d 'Add To Both Sides'>
            ## <d 'Simplify Left Side'>
              ## <d 'Addition'>
                ## <d 'Group Common Digits'>
                  ## <d 'Multiply By One'>
                    ## <d 'Multiply By One'>
                      ## <d 'Evaluate'>
                        ## <d 'Evaluate'>
                          (10) mulidr
                        ## </d 'Evaluate'>
                        ## <d 'Commutative Property'>
                          (* (1) (10)) (10) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                      ## </d 'Evaluate'>
                      (* (9) (10)) addeq2i
                    ## </d 'Multiply By One'>
                  ## </d 'Multiply By One'>
                  ## <d 'Distributive Property'>
                    (9) (1) (10) distl
                    ## <d 'Commutative Property'>
                      (* (+ (9) (1)) (10)) (+ (* (9) (10)) (* (1) (10))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1
                  ## </d 'Distributive Property'>
                ## </d 'Group Common Digits'>
                ## <d 'Single-digit Addition'>
                  9plus1
                  EqReplaceEq1Mul0
                ## </d 'Single-digit Addition'>
              ## </d 'Addition'>
              EqReplaceGt0
            ## </d 'Simplify Left Side'>
            ## <d 'Simplify Right Side'>
              (* (9) (10)) pa_ax3
              EqReplaceGt1
            ## </d 'Simplify Right Side'>
          ## </d 'Add To Both Sides'>
          GtReplaceGt1
        ## </d 'First Digit is Lower'>
        ## <d 'Lower Remaining Digits'>
          ## <d 'Add To Both Sides'>
            ## <d 'Derive Smaller Inequality'>
              9greater0
            ## </d 'Derive Smaller Inequality'>
            ## <d 'Add To Both Sides'>
              (+ (* (8) (10)) (1)) gtadd2i
            ## </d 'Add To Both Sides'>
            ## <d 'Simplify Left Side'>
              ## <d 'Addition'>
                ## <d 'Group Common Digits'>
                  ## <d 'Rearrange Terms'>
                    ## <d 'Change Associations'>
                      ## <d 'Associative Property'>
                        (* (8) (10)) (1) (9) addass
                      ## </d 'Associative Property'>
                    ## </d 'Change Associations'>
                  ## </d 'Rearrange Terms'>
                ## </d 'Group Common Digits'>
                ## <d 'Single-digit Addition'>
                  1plus9
                  EqReplaceEq1Add1
                ## </d 'Single-digit Addition'>
                ## <d 'Carry the One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (10) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (10)) (10) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    (* (8) (10)) addeq2i
                  ## </d 'Multiply By One'>
                  ## <d 'Distributive Property'>
                    (8) (1) (10) distl
                    ## <d 'Commutative Property'>
                      (* (+ (8) (1)) (10)) (+ (* (8) (10)) (* (1) (10))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1
                  ## </d 'Distributive Property'>
                  EqReplaceEq1
                ## </d 'Carry the One'>
                ## <d 'Single-digit Addition'>
                  8plus1
                  EqReplaceEq1Mul0
                ## </d 'Single-digit Addition'>
              ## </d 'Addition'>
              EqReplaceGt0
            ## </d 'Simplify Left Side'>
            ## <d 'Simplify Right Side'>
              (+ (* (8) (10)) (1)) pa_ax3
              EqReplaceGt1
            ## </d 'Simplify Right Side'>
          ## </d 'Add To Both Sides'>
          GtReplaceGt1
        ## </d 'Lower Remaining Digits'>
)



## <title> Substitution </title>
## <table>
##   (= A (* (product B  [ C ]   ]   ]  S) A'))
##   (=                  [ C ]   [ D ] )
##   (= A (* (product B  [   [   [ D ]  S) A'))
## </table>
thm (EqReplaceEq1Mul0Product1 () (
     replacee (= A (* (product B C S) A'))
     substitution (= C D)) 
     (= A (* (product B D S) A'))
  replacee substitution
  B S producteq2i
  EqReplaceEq1Mul0
)

## <title> Substitution </title>
## <table>
##   (= A (* (*  [ B ]   ]   ]  D) A'))
##   (=          [ B ]   [ C ] )
##   (= A (* (*  [   [   [ C ]  D) A'))
## </table>
thm (EqReplaceEq1Mul0Mul0 () (
     replacee (= A (* (* B D) A'))
     substitution (= B C)) 
     (= A (* (* C D) A'))
  replacee substitution
  D muleq1i
  EqReplaceEq1Mul0
)

## <title> Substitution </title>
## <table>
##   (= A (* (* B  [ C ]   ]   ] ) A'))
##   (=            [ C ]   [ D ] )
##   (= A (* (* B  [   [   [ D ] ) A'))
## </table>
thm (EqReplaceEq1Mul0Mul1 () (
     replacee (= A (* (* B C) A'))
     substitution (= C D)) 
     (= A (* (* B D) A'))
  replacee substitution
  B muleq2i
  EqReplaceEq1Mul0
)


thm (productExample() () (= (product (1) (3) (lambda x (+ (* (2) x) (3)))) (+ (* (3) (* (10) (10))) (+ (10) (5))))
  ## <d 'Evaluate'>
    ## <d 'Expand the product'>
      ## <d 'Detach number from product'>
        1less3
        (lambda x (+ (* (2) x) (3))) productdetachi
        ## <d 'Evaluate'>
          x y (2) muleq2
          (3) addeq1d
          x (3) (2) muleq2
          (3) addeq1d
          applylambda
          EqReplaceEq1Mul1
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          ## <d 'Evaluate'>
            1plus2
          ## </d 'Evaluate'>
          ## <d 'Commutative Property'>
            (+ (1) (2)) (3) eqcom
            mpbi
          ## </d 'Commutative Property'>
          addhalfminusi
          EqReplaceEq1Mul0Product1
        ## </d 'Evaluate'>
      ## </d 'Detach number from product'>
      ## <d 'Detach number from product'>
        1less2
        (lambda x (+ (* (2) x) (3))) productdetachi
        ## <d 'Evaluate'>
          x y (2) muleq2
          (3) addeq1d
          x (2) (2) muleq2
          (3) addeq1d
          applylambda
          EqReplaceEq1Mul1
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          ## <d 'Evaluate'>
            1plus1
          ## </d 'Evaluate'>
          ## <d 'Commutative Property'>
            (+ (1) (1)) (2) eqcom
            mpbi
          ## </d 'Commutative Property'>
          addhalfminusi
          EqReplaceEq1Mul0Product1
        ## </d 'Evaluate'>
        EqReplaceEq1Mul0
      ## </d 'Detach number from product'>
      ## <d 'Detach number from product'>
        (1) (lambda x (+ (* (2) x) (3))) product1
        ## <d 'Evaluate'>
          x y (2) muleq2
          (3) addeq1d
          x (1) (2) muleq2
          (3) addeq1d
          applylambda
          EqReplaceEq1
        ## </d 'Evaluate'>
        EqReplaceEq1Mul0Mul0
      ## </d 'Detach number from product'>
    ## </d 'Expand the product'>
    ## <d 'Evaluate each term'>
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          (2) mulid
          (3) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          2plus3
          EqReplaceEq1
        ## </d 'Evaluate'>
        (+ (* (2) (2)) (3)) muleq1i
        (+ (* (2) (3)) (3)) muleq1i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          2times2
          (3) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          4plus3
          EqReplaceEq1
        ## </d 'Evaluate'>
        EqReplaceEq1Mul0Mul1
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          2times3
          (3) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          6plus3
          EqReplaceEq1
        ## </d 'Evaluate'>
        EqReplaceEq1Mul1
      ## </d 'Evaluate'>
      EqReplaceEq1
    ## </d 'Evaluate each term'>
    ## <d 'Multiply all terms'>
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          5times7
          (9) muleq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          ## <d 'One-Digit times Multiple-Digits'>
            ## <d 'Rearrange Digits'>
              ## <d 'Distributive Property'>
                (* (3) (10)) (5) (9) distl
              ## </d 'Distributive Property'>
            ## </d 'Rearrange Digits'>
            ## <d 'Multiply Two Digits'>
              ## <d 'Evaluate'>
                5times9
              ## </d 'Evaluate'>
              EqReplaceEq1Add1
            ## </d 'Multiply Two Digits'>
            ## <d 'Multiply Two Digits'>
              ## <d 'Rearrange Terms'>
                ## <d 'Reorder Terms'>
                  ## <d 'Associative Property'>
                    (3) (10) (9) mulass
                  ## </d 'Associative Property'>
                  ## <d 'Commutative Property'>
                    (10) (9) mulcom
                    EqReplaceEq1Mul1
                  ## </d 'Commutative Property'>
                  ## <d 'Associative Property'>
                    (3) (9) (10) mulass
                    ## <d 'Commutative Property'>
                      (* (* (3) (9)) (10)) (* (3) (* (9) (10))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1
                  ## </d 'Associative Property'>
                ## </d 'Reorder Terms'>
              ## </d 'Rearrange Terms'>
              ## <d 'Evaluate'>
                3times9
                EqReplaceEq1Mul0
              ## </d 'Evaluate'>
              ## <d 'Evaluate'>
                ## <d 'Distributive Property'>
                  (* (2) (10)) (7) (10) distl
                ## </d 'Distributive Property'>
                ## <d 'Evaluate'>
                  ## <d 'Associative Property'>
                    (2) (10) (10) mulass
                  ## </d 'Associative Property'>
                  EqReplaceEq1Add0
                ## </d 'Evaluate'>
                EqReplaceEq1
              ## </d 'Evaluate'>
              EqReplaceEq1Add0
            ## </d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Addition'>
                ## <d 'Group Common Digits'>
                  ## <d 'Rearrange Terms'>
                    ## <d 'Associate All Left'>
                      ## <d 'Associative Property'>
                        (+ (* (2) (* (10) (10))) (* (7) (10))) (* (4) (10)) (5) addass
                        ## <d 'Commutative Property'>
                          (+ (+ (+ (* (2) (* (10) (10))) (* (7) (10))) (* (4) (10))) (5)) (+ (+ (* (2) (* (10) (10))) (* (7) (10))) (+ (* (4) (10)) (5))) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                      ## </d 'Associative Property'>
                    ## </d 'Associate All Left'>
                    ## <d 'Change Associations'>
                      ## <d 'Associative Property'>
                        (* (2) (* (10) (10))) (* (7) (10)) (* (4) (10)) addass
                        (5) addeq1i
                      ## </d 'Associative Property'>
                      EqReplaceEq1
                    ## </d 'Change Associations'>
                  ## </d 'Rearrange Terms'>
                  ## <d 'Distributive Property'>
                    (7) (4) (10) distl
                    ## <d 'Commutative Property'>
                      (* (+ (7) (4)) (10)) (+ (* (7) (10)) (* (4) (10))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1Add0Add1
                  ## </d 'Distributive Property'>
                ## </d 'Group Common Digits'>
                ## <d 'Single-digit Addition'>
                  7plus4
                  EqReplaceEq1Add0Add1Mul0
                ## </d 'Single-digit Addition'>
                ## <d 'Carry the One'>
                  ## <d 'Distributive Property'>
                    (10) (1) (10) distl
                    (* (2) (* (10) (10))) addeq2i
                  ## </d 'Distributive Property'>
                  ## <d 'Associative Property'>
                    (* (2) (* (10) (10))) (* (10) (10)) (* (1) (10)) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (* (2) (* (10) (10))) (* (10) (10))) (* (1) (10))) (+ (* (2) (* (10) (10))) (+ (* (10) (10)) (* (1) (10)))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1
                  ## </d 'Associative Property'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (* (10) (10)) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (* (10) (10))) (* (10) (10)) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    EqReplaceEq1Add0Add1
                  ## </d 'Multiply By One'>
                  ## <d 'Distributive Property'>
                    (2) (1) (* (10) (10)) distl
                    ## <d 'Commutative Property'>
                      (* (+ (2) (1)) (* (10) (10))) (+ (* (2) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1Add0
                  ## </d 'Distributive Property'>
                  EqReplaceEq1Add0
                ## </d 'Carry the One'>
                ## <d 'Single-digit Addition'>
                  2plus1
                  EqReplaceEq1Add0Add0Mul0
                ## </d 'Single-digit Addition'>
                ## <d 'Simplify'>
                  ## <d 'Associative Property'>
                    (* (3) (* (10) (10))) (* (1) (10)) (5) addass
                  ## </d 'Associative Property'>
                  ## <d 'Simplify'>
                    ## <d 'Simplify'>
                      ## <d 'Multiplicative Identity'>
                        (10) mulidr
                      ## </d 'Multiplicative Identity'>
                      (5) addeq1i
                    ## </d 'Simplify'>
                    EqReplaceEq1Add1
                  ## </d 'Simplify'>
                  EqReplaceEq1
                ## </d 'Simplify'>
              ## </d 'Addition'>
              EqReplaceEq1
            ## </d 'Evaluate'>
          ## </d 'One-Digit times Multiple-Digits'>
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'Evaluate'>
      EqReplaceEq1
    ## </d 'Multiply all terms'>
  ## </d 'Evaluate'>
)



## <title> Substitution </title>
## <table>
##   (= A (+ (sum B  [ C ]   ]   ]  S) A'))
##   (=              [ C ]   [ D ] )
##   (= A (+ (sum B  [   [   [ D ]  S) A'))
## </table>
thm (EqReplaceEq1Add0Sum1 () (
     replacee (= A (+ (sum B C S) A'))
     substitution (= C D)) 
     (= A (+ (sum B D S) A'))
  replacee substitution
  B S sumeq2i
  EqReplaceEq1Add0
)

thm (sumExample() () (= (sum (5) (7) (lambda x (+ (exp x (2)) (* (3) x)))) (+ (* (10) (10)) (+ (* (6) (10)) (4))))
  ## <d 'Evaluate'>
    ## <d 'Expand the sum'>
      ## <d 'Detach number from sum'>
        5less7
        (lambda x (+ (exp x (2)) (* (3) x))) sumdetachi
        ## <d 'Evaluate'>
          x y (2) expeq1
          x y (3) muleq2
          addeq12d
          x (7) (2) expeq1
          x (7) (3) muleq2
          addeq12d
          applylambda
          EqReplaceEq1Add1
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          ## <d 'Evaluate'>
            1plus6
          ## </d 'Evaluate'>
          ## <d 'Commutative Property'>
            (+ (1) (6)) (7) eqcom
            mpbi
          ## </d 'Commutative Property'>
          addhalfminusi
          EqReplaceEq1Add0Sum1
        ## </d 'Evaluate'>
      ## </d 'Detach number from sum'>
      ## <d 'Detach number from sum'>
        5less6
        (lambda x (+ (exp x (2)) (* (3) x))) sumdetachi
        ## <d 'Evaluate'>
          x y (2) expeq1
          x y (3) muleq2
          addeq12d
          x (6) (2) expeq1
          x (6) (3) muleq2
          addeq12d
          applylambda
          EqReplaceEq1Add1
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          ## <d 'Evaluate'>
            1plus5
          ## </d 'Evaluate'>
          ## <d 'Commutative Property'>
            (+ (1) (5)) (6) eqcom
            mpbi
          ## </d 'Commutative Property'>
          addhalfminusi
          EqReplaceEq1Add0Sum1
        ## </d 'Evaluate'>
        EqReplaceEq1Add0
      ## </d 'Detach number from sum'>
      ## <d 'Detach number from sum'>
        (5) (lambda x (+ (exp x (2)) (* (3) x))) sum1
        ## <d 'Evaluate'>
          x y (2) expeq1
          x y (3) muleq2
          addeq12d
          x (5) (2) expeq1
          x (5) (3) muleq2
          addeq12d
          applylambda
          EqReplaceEq1
        ## </d 'Evaluate'>
        EqReplaceEq1Add0Add0
      ## </d 'Detach number from sum'>
    ## </d 'Expand the sum'>
    ## <d 'Evaluate each term'>
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          5power2
          (* (3) (5)) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          3times5
          EqReplaceEq1Add1
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Rearrange Terms'>
                ## <d 'Associate All Left'>
                  ## <d 'Associative Property'>
                    (+ (* (2) (10)) (5)) (10) (5) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (+ (* (2) (10)) (5)) (10)) (5)) (+ (+ (* (2) (10)) (5)) (+ (10) (5))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Associative Property'>
                ## </d 'Associate All Left'>
                ## <d 'Reorder Terms'>
                  ## <d 'Associative Property'>
                    (* (2) (10)) (5) (10) addass
                    (5) addeq1i
                  ## </d 'Associative Property'>
                  ## <d 'Commutative Property'>
                    (5) (10) addcom
                    EqReplaceEq1Add0Add1
                  ## </d 'Commutative Property'>
                  ## <d 'Associative Property'>
                    (* (2) (10)) (10) (5) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (* (2) (10)) (10)) (5)) (+ (* (2) (10)) (+ (10) (5))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1Add0
                  ## </d 'Associative Property'>
                  EqReplaceEq1
                ## </d 'Reorder Terms'>
                ## <d 'Change Associations'>
                  ## <d 'Associative Property'>
                    (+ (* (2) (10)) (10)) (5) (5) addass
                  ## </d 'Associative Property'>
                  EqReplaceEq1
                ## </d 'Change Associations'>
              ## </d 'Rearrange Terms'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (10) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (10)) (10) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    (* (2) (10)) addeq2i
                  ## </d 'Multiply By One'>
                  (+ (5) (5)) addeq1i
                ## </d 'Multiply By One'>
                EqReplaceEq1
              ## </d 'Multiply By One'>
              ## <d 'Distributive Property'>
                (2) (1) (10) distl
                ## <d 'Commutative Property'>
                  (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Distributive Property'>
            ## </d 'Group Common Digits'>
            ## <d 'Single-digit Addition'>
              5plus5
              EqReplaceEq1Add1
            ## </d 'Single-digit Addition'>
            ## <d 'Carry the One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (* (+ (2) (1)) (10)) addeq2i
              ## </d 'Multiply By One'>
              ## <d 'Distributive Property'>
                (+ (2) (1)) (1) (10) distl
                ## <d 'Commutative Property'>
                  (* (+ (+ (2) (1)) (1)) (10)) (+ (* (+ (2) (1)) (10)) (* (1) (10))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Distributive Property'>
              EqReplaceEq1
            ## </d 'Carry the One'>
            ## <d 'Single-digit Addition'>
              ## <d 'Evaluate'>
                2plus1
                (1) addeq1i
              ## </d 'Evaluate'>
              ## <d 'Evaluate'>
                3plus1
                EqReplaceEq1
              ## </d 'Evaluate'>
              EqReplaceEq1Mul0
            ## </d 'Single-digit Addition'>
          ## </d 'Addition'>
          EqReplaceEq1
        ## </d 'Evaluate'>
        (+ (exp (6) (2)) (* (3) (6))) addeq1i
        (+ (exp (7) (2)) (* (3) (7))) addeq1i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          6power2
          (* (3) (6)) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          3times6
          EqReplaceEq1Add1
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Rearrange Terms'>
                ## <d 'Associate All Left'>
                  ## <d 'Associative Property'>
                    (+ (* (3) (10)) (6)) (10) (8) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (+ (* (3) (10)) (6)) (10)) (8)) (+ (+ (* (3) (10)) (6)) (+ (10) (8))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Associative Property'>
                ## </d 'Associate All Left'>
                ## <d 'Reorder Terms'>
                  ## <d 'Associative Property'>
                    (* (3) (10)) (6) (10) addass
                    (8) addeq1i
                  ## </d 'Associative Property'>
                  ## <d 'Commutative Property'>
                    (6) (10) addcom
                    EqReplaceEq1Add0Add1
                  ## </d 'Commutative Property'>
                  ## <d 'Associative Property'>
                    (* (3) (10)) (10) (6) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (* (3) (10)) (10)) (6)) (+ (* (3) (10)) (+ (10) (6))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1Add0
                  ## </d 'Associative Property'>
                  EqReplaceEq1
                ## </d 'Reorder Terms'>
                ## <d 'Change Associations'>
                  ## <d 'Associative Property'>
                    (+ (* (3) (10)) (10)) (6) (8) addass
                  ## </d 'Associative Property'>
                  EqReplaceEq1
                ## </d 'Change Associations'>
              ## </d 'Rearrange Terms'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (10) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (10)) (10) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    (* (3) (10)) addeq2i
                  ## </d 'Multiply By One'>
                  (+ (6) (8)) addeq1i
                ## </d 'Multiply By One'>
                EqReplaceEq1
              ## </d 'Multiply By One'>
              ## <d 'Distributive Property'>
                (3) (1) (10) distl
                ## <d 'Commutative Property'>
                  (* (+ (3) (1)) (10)) (+ (* (3) (10)) (* (1) (10))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Distributive Property'>
            ## </d 'Group Common Digits'>
            ## <d 'Single-digit Addition'>
              6plus8
              EqReplaceEq1Add1
            ## </d 'Single-digit Addition'>
            ## <d 'Carry the One'>
              ## <d 'Associative Property'>
                (* (+ (3) (1)) (10)) (10) (4) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (+ (3) (1)) (10)) (10)) (4)) (+ (* (+ (3) (1)) (10)) (+ (10) (4))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                EqReplaceEq1Add0Add1
              ## </d 'Multiply By One'>
              ## <d 'Distributive Property'>
                (+ (3) (1)) (1) (10) distl
                ## <d 'Commutative Property'>
                  (* (+ (+ (3) (1)) (1)) (10)) (+ (* (+ (3) (1)) (10)) (* (1) (10))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Distributive Property'>
              EqReplaceEq1
            ## </d 'Carry the One'>
            ## <d 'Single-digit Addition'>
              ## <d 'Evaluate'>
                3plus1
                (1) addeq1i
              ## </d 'Evaluate'>
              ## <d 'Evaluate'>
                4plus1
                EqReplaceEq1
              ## </d 'Evaluate'>
              EqReplaceEq1Add0Mul0
            ## </d 'Single-digit Addition'>
          ## </d 'Addition'>
          EqReplaceEq1
        ## </d 'Evaluate'>
        EqReplaceEq1Add0Add1
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          7power2
          (* (3) (7)) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          3times7
          EqReplaceEq1Add1
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Rearrange Terms'>
                ## <d 'Associate All Left'>
                  ## <d 'Associative Property'>
                    (+ (* (4) (10)) (9)) (* (2) (10)) (1) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (+ (* (4) (10)) (9)) (* (2) (10))) (1)) (+ (+ (* (4) (10)) (9)) (+ (* (2) (10)) (1))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Associative Property'>
                ## </d 'Associate All Left'>
                ## <d 'Reorder Terms'>
                  ## <d 'Associative Property'>
                    (* (4) (10)) (9) (* (2) (10)) addass
                    (1) addeq1i
                  ## </d 'Associative Property'>
                  ## <d 'Commutative Property'>
                    (9) (* (2) (10)) addcom
                    EqReplaceEq1Add0Add1
                  ## </d 'Commutative Property'>
                  ## <d 'Associative Property'>
                    (* (4) (10)) (* (2) (10)) (9) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (* (4) (10)) (* (2) (10))) (9)) (+ (* (4) (10)) (+ (* (2) (10)) (9))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1Add0
                  ## </d 'Associative Property'>
                  EqReplaceEq1
                ## </d 'Reorder Terms'>
                ## <d 'Change Associations'>
                  ## <d 'Associative Property'>
                    (+ (* (4) (10)) (* (2) (10))) (9) (1) addass
                  ## </d 'Associative Property'>
                  EqReplaceEq1
                ## </d 'Change Associations'>
              ## </d 'Rearrange Terms'>
              ## <d 'Distributive Property'>
                (4) (2) (10) distl
                ## <d 'Commutative Property'>
                  (* (+ (4) (2)) (10)) (+ (* (4) (10)) (* (2) (10))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Distributive Property'>
            ## </d 'Group Common Digits'>
            ## <d 'Single-digit Addition'>
              9plus1
              EqReplaceEq1Add1
            ## </d 'Single-digit Addition'>
            ## <d 'Carry the One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (* (+ (4) (2)) (10)) addeq2i
              ## </d 'Multiply By One'>
              ## <d 'Distributive Property'>
                (+ (4) (2)) (1) (10) distl
                ## <d 'Commutative Property'>
                  (* (+ (+ (4) (2)) (1)) (10)) (+ (* (+ (4) (2)) (10)) (* (1) (10))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Distributive Property'>
              EqReplaceEq1
            ## </d 'Carry the One'>
            ## <d 'Single-digit Addition'>
              ## <d 'Evaluate'>
                4plus2
                (1) addeq1i
              ## </d 'Evaluate'>
              ## <d 'Evaluate'>
                6plus1
                EqReplaceEq1
              ## </d 'Evaluate'>
              EqReplaceEq1Mul0
            ## </d 'Single-digit Addition'>
          ## </d 'Addition'>
          EqReplaceEq1
        ## </d 'Evaluate'>
        EqReplaceEq1Add1
      ## </d 'Evaluate'>
      EqReplaceEq1
    ## </d 'Evaluate each term'>
    ## <d 'Sum the total'>
      ## <d 'Evaluate'>
        ## <d 'Evaluate'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Rearrange Terms'>
                ## <d 'Associate All Left'>
                  ## <d 'Associative Property'>
                    (* (4) (10)) (* (5) (10)) (4) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (* (4) (10)) (* (5) (10))) (4)) (+ (* (4) (10)) (+ (* (5) (10)) (4))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Associative Property'>
                ## </d 'Associate All Left'>
              ## </d 'Rearrange Terms'>
              ## <d 'Distributive Property'>
                (4) (5) (10) distl
                ## <d 'Commutative Property'>
                  (* (+ (4) (5)) (10)) (+ (* (4) (10)) (* (5) (10))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Distributive Property'>
            ## </d 'Group Common Digits'>
            ## <d 'Single-digit Addition'>
              4plus5
              EqReplaceEq1Add0Mul0
            ## </d 'Single-digit Addition'>
          ## </d 'Addition'>
          (* (7) (10)) addeq1i
        ## </d 'Evaluate'>
        ## <d 'Evaluate'>
          ## <d 'Addition'>
            ## <d 'Group Common Digits'>
              ## <d 'Rearrange Terms'>
                ## <d 'Reorder Terms'>
                  ## <d 'Associative Property'>
                    (* (9) (10)) (4) (* (7) (10)) addass
                  ## </d 'Associative Property'>
                  ## <d 'Commutative Property'>
                    (4) (* (7) (10)) addcom
                    EqReplaceEq1Add1
                  ## </d 'Commutative Property'>
                  ## <d 'Associative Property'>
                    (* (9) (10)) (* (7) (10)) (4) addass
                    ## <d 'Commutative Property'>
                      (+ (+ (* (9) (10)) (* (7) (10))) (4)) (+ (* (9) (10)) (+ (* (7) (10)) (4))) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                    EqReplaceEq1
                  ## </d 'Associative Property'>
                ## </d 'Reorder Terms'>
              ## </d 'Rearrange Terms'>
              ## <d 'Distributive Property'>
                (9) (7) (10) distl
                ## <d 'Commutative Property'>
                  (* (+ (9) (7)) (10)) (+ (* (9) (10)) (* (7) (10))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Distributive Property'>
            ## </d 'Group Common Digits'>
            ## <d 'Single-digit Addition'>
              9plus7
              EqReplaceEq1Add0Mul0
            ## </d 'Single-digit Addition'>
            ## <d 'Carry the One'>
              ## <d 'Distributive Property'>
                (10) (6) (10) distl
                (4) addeq1i
              ## </d 'Distributive Property'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Evaluate'>
                    ## <d 'Evaluate'>
                      (* (10) (10)) mulidr
                    ## </d 'Evaluate'>
                    ## <d 'Commutative Property'>
                      (* (1) (* (10) (10))) (* (10) (10)) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Evaluate'>
                  (* (6) (10)) addeq1i
                ## </d 'Multiply By One'>
                EqReplaceEq1Add0
              ## </d 'Multiply By One'>
              ## <d 'Associative Property'>
                (* (1) (* (10) (10))) (* (6) (10)) (4) addass
                EqReplaceEq1
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Carry the One'>
            ## <d 'Simplify'>
              ## <d 'Simplify'>
                ## <d 'Multiplicative Identity'>
                  (* (10) (10)) mulidr
                ## </d 'Multiplicative Identity'>
                (+ (* (6) (10)) (4)) addeq1i
              ## </d 'Simplify'>
              EqReplaceEq1
            ## </d 'Simplify'>
          ## </d 'Addition'>
          EqReplaceEq1
        ## </d 'Evaluate'>
      ## </d 'Evaluate'>
      EqReplaceEq1
    ## </d 'Sum the total'>
  ## </d 'Evaluate'>
)

## <title> Prime Number Calculation </title>
thm (notPrimeExample () () (-. (prime (+ (* (4) (10)) (2))))
  ## <d 'Has a Divisor'>
    ## <d 'Evaluate'>
      ## <d 'Multiplication'>
        ## <d 'Distribute Digits'>
          ## <d 'Distributive Property'>
            (2) (* (2) (10)) (1) distr
          ## </d 'Distributive Property'>
        ## </d 'Distribute Digits'>
        ## <d 'Pull Out Base 10'>
          ## <d 'Associative Property'>
            (2) (2) (10) mulass
            ## <d 'Commutative Property'>
              (* (* (2) (2)) (10)) (* (2) (* (2) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            (* (2) (1)) addeq1i
          ## </d 'Associative Property'>
          EqReplaceEq1
        ## </d 'Pull Out Base 10'>
        ## <d 'Multiply Each Digit'>
          ## <d 'Multiply Two Individual Digits'>
            ## <d 'Multiply Base'>
              (2) mulid
            ## </d 'Multiply Base'>
            (* (* (2) (2)) (10)) addeq2i
          ## </d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Two Individual Digits'>
            ## <d 'Multiply Significant Digits'>
              2times2
              (10) muleq1i
            ## </d 'Multiply Significant Digits'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Individual Digits'>
          EqReplaceEq1
        ## </d 'Multiply Each Digit'>
      ## </d 'Multiplication'>
    ## </d 'Evaluate'>
    proveDivides
  ## </d 'Has a Divisor'>
  1less2
  2less10
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      1less4
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    ## <d 'Evaluate'>
      (10) mulidr
      EqReplaceLt0
    ## </d 'Evaluate'>
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (4) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (4) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  pm3.2i
  notPrime
)


## <title> Substitution </title>
## <table>
##   (C_ S  [ T ]   ]   ] )
##   (=_    [ T ]   [ U ] )
##   (C_ S  [   [   [ U ] )
## </table>
thm (SeqReplaceSs1 () (
     replacee (C_ S T)
     substitution (=_ T U)) 
     (C_ S U)
  replacee substitution
  S sseq2i
  mpbi
)

## <title> Element Not Inside 2-Set </title>
thm (notIn2set () (hyp0 (-. (= A B)) hyp1 (-. (= A C)) ) (-. (e. A (u. ({} B) ({} C))))
  hyp0
  hyp1
  notInSingleton
  notInSingletonUnion
)

thm (properSubsetExample() () (C. (u. ({} (2)) ({} (4))) (u. (u. (u. ({} (1)) ({} (2))) ({} (4))) ({} (5))))   
  ## <d 'Subset'>
    (u. ({} (2)) ({} (4))) (u. ({} (1)) ({} (5))) ssUnion
    ## <d 'Reorder Elements'>
      ## <d 'Place in numeric order'>
        ## <d 'Rearrange Terms'>
          ## <d 'Associate All Left'>
            ## <d 'Associative Property'>
              (u. ({} (2)) ({} (4))) ({} (1)) ({} (5)) unass
              ## <d 'Commutative Property'>
                (u. (u. (u. ({} (2)) ({} (4))) ({} (1))) ({} (5))) (u. (u. ({} (2)) ({} (4))) (u. ({} (1)) ({} (5)))) seqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Associative Property'>
          ## </d 'Associate All Left'>
          ## <d 'Reorder Terms'>
            ## <d 'Associative Property'>
              ({} (2)) ({} (4)) ({} (1)) unass
              ({} (5)) unseq1i
            ## </d 'Associative Property'>
            ## <d 'Commutative Property'>
              ({} (4)) ({} (1)) uncom
              SeqReplaceSeq1Un0Un1
            ## </d 'Commutative Property'>
            ## <d 'Associative Property'>
              ({} (2)) ({} (1)) ({} (4)) unass
              ## <d 'Commutative Property'>
                (u. (u. ({} (2)) ({} (1))) ({} (4))) (u. ({} (2)) (u. ({} (1)) ({} (4)))) seqcom
                mpbi
              ## </d 'Commutative Property'>
              SeqReplaceSeq1Un0
            ## </d 'Associative Property'>
            ## <d 'Commutative Property'>
              ({} (2)) ({} (1)) uncom
              SeqReplaceSeq1Un0Un0
            ## </d 'Commutative Property'>
            SeqReplaceSeq1
          ## </d 'Reorder Terms'>
        ## </d 'Rearrange Terms'>
      ## </d 'Place in numeric order'>
      SeqReplaceSs1
    ## </d 'Reorder Elements'>
  ## </d 'Subset'>
  ## <d 'Not equal'>
    ## <d 'Outside Right Set'>
      1notEqual2
      1notEqual4
      notIn2set
    ## </d 'Outside Right Set'>
    ## <d 'Inside Left Set'>
      ## <d 'Element is in Singleton'>
        (1) snid
      ## </d 'Element is in Singleton'>
      ## <d 'Element is part of a Larger Set'>
        (u. (u. ({} (2)) ({} (4))) ({} (5))) unionAttach1
      ## </d 'Element is part of a Larger Set'>
      ## <d 'Reorder elements'>
        ## <d 'Evaluate'>
          ## <d 'Place in numeric order'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  ({} (1)) (u. ({} (2)) ({} (4))) ({} (5)) unass
                  ## <d 'Commutative Property'>
                    (u. (u. ({} (1)) (u. ({} (2)) ({} (4)))) ({} (5))) (u. ({} (1)) (u. (u. ({} (2)) ({} (4))) ({} (5)))) seqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
                ## <d 'Associative Property'>
                  ({} (1)) ({} (2)) ({} (4)) unass
                  ## <d 'Commutative Property'>
                    (u. (u. ({} (1)) ({} (2))) ({} (4))) (u. ({} (1)) (u. ({} (2)) ({} (4)))) seqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  SeqReplaceSeq1Un0
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
            ## </d 'Rearrange Terms'>
          ## </d 'Place in numeric order'>
          SeqReplaceEl1
        ## </d 'Evaluate'>
      ## </d 'Reorder elements'>
    ## </d 'Inside Left Set'>
    notSeq2
  ## </d 'Not equal'>
  dfpssi
)

thm (notSubsetExample () () (-. (C_ (u. (u. ({} (1)) ({} (3))) ({} (4))) (u. (u. (u. ({} (1)) ({} (2))) ({} (3))) ({} (5)))))  
  ## <d 'Inside Left Set'>
    ## <d 'Element is in Singleton'>
      (4) snid
    ## </d 'Element is in Singleton'>
    ## <d 'Element is part of a Larger Set'>
      (u. ({} (1)) ({} (3))) unionAttach2
    ## </d 'Element is part of a Larger Set'>
  ## </d 'Inside Left Set'>
  ## <d 'Outside Right Set'>
    4notEqual1
    4notEqual2
    4notEqual3
    4notEqual5
    notIn4set
  ## </d 'Outside Right Set'>
  notSs
)

## <title> Divisibility </title>
thm (6notdivides17 () () (-. (| (6) (+ (10) (7))))
  (6) (2) (+ (10) (7)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      6times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (2)) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      7less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (6) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        6times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (+ (2) (1))) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (7notdivides17 () () (-. (| (7) (+ (10) (7))))
  (7) (2) (+ (10) (7)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      4less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      7times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (2)) (+ (10) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (7)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (7)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (7) (3) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (7) (3)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          7plus3
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less1
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (7) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        7times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (+ (2) (1))) (+ (* (2) (10)) (1)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (8notdivides17 () () (-. (| (8) (+ (10) (7))))
  (8) (2) (+ (10) (7)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      6less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      8times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (8) (2)) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (7)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (7)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (7) (3) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (7) (3)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          7plus3
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less4
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (8) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        8times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (8) (+ (2) (1))) (+ (* (2) (10)) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (9notdivides17 () () (-. (| (9) (+ (10) (7))))
  (9) (1) (+ (10) (7)) notDivides
  9less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less7
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (9) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (9) (1)) (9) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      7less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (9) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        9times2
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (9) (+ (1) (1))) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (10notdivides17 () () (-. (| (10) (+ (10) (7))))
  (10) (1) (+ (10) (7)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (10) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (10) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (10) (1)) (10) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (7)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (7)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (7) (3) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (7) (3)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          7plus3
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (10) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Commutative Property'>
          (10) (2) mulcom
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (10) (+ (1) (1))) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (11notdivides17 () () (-. (| (+ (10) (1)) (+ (10) (7))))
  (+ (10) (1)) (1) (+ (10) (7)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      1less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (1)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (1)) (1)) (+ (10) (1)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (7)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (7)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (7) (3) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (7) (3)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          7plus3
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (1)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (1) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              (2) mulidr
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (1)) (+ (1) (1))) (+ (* (2) (10)) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (12notdivides17 () () (-. (| (+ (10) (2)) (+ (10) (7))))
  (+ (10) (2)) (1) (+ (10) (7)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (2)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (2)) (1)) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (7)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (7)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (7) (3) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (7) (3)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          7plus3
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less4
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (2)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (2) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              2times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (2)) (+ (1) (1))) (+ (* (2) (10)) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (13notdivides17 () () (-. (| (+ (10) (3)) (+ (10) (7))))
  (+ (10) (3)) (1) (+ (10) (7)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (3)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (3)) (1)) (+ (10) (3)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (7)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (7)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (7) (3) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (7) (3)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          7plus3
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less6
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (3)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (3) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              3times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (3)) (+ (1) (1))) (+ (* (2) (10)) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (14notdivides17 () () (-. (| (+ (10) (4)) (+ (10) (7))))
  (+ (10) (4)) (1) (+ (10) (7)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      4less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (4)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (4)) (1)) (+ (10) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (7)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (7)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (7) (3) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (7) (3)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          7plus3
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less8
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (4)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (4) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              4times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (4)) (+ (1) (1))) (+ (* (2) (10)) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (15notdivides17 () () (-. (| (+ (10) (5)) (+ (10) (7))))
  (+ (10) (5)) (1) (+ (10) (7)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      5less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (5)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (5)) (1)) (+ (10) (5)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (7)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (7)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (7) (3) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (7) (3)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          7plus3
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      2less3
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (5)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (5) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              5times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
          ## <d 'Evaluate'>
            ## <d 'Addition'>
              ## <d 'Group Common Digits'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (10) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (10)) (10) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    (* (2) (10)) addeq2i
                  ## </d 'Multiply By One'>
                ## </d 'Multiply By One'>
                ## <d 'Distributive Property'>
                  (2) (1) (10) distl
                  ## <d 'Commutative Property'>
                    (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1
                ## </d 'Distributive Property'>
              ## </d 'Group Common Digits'>
              ## <d 'Single-digit Addition'>
                2plus1
                EqReplaceEq1Mul0
              ## </d 'Single-digit Addition'>
            ## </d 'Addition'>
            EqReplaceEq1
          ## </d 'Evaluate'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (5)) (+ (1) (1))) (* (3) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (16notdivides17 () () (-. (| (+ (10) (6)) (+ (10) (7))))
  (+ (10) (6)) (1) (+ (10) (7)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      6less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (6)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (6)) (1)) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (7)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (7)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (7) (3) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (7) (3)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          7plus3
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      2less3
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (3) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (3) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (6)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (6) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              6times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
          ## <d 'Evaluate'>
            ## <d 'Addition'>
              ## <d 'Group Common Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Associate All Left'>
                    ## <d 'Associative Property'>
                      (* (2) (10)) (10) (2) addass
                      ## <d 'Commutative Property'>
                        (+ (+ (* (2) (10)) (10)) (2)) (+ (* (2) (10)) (+ (10) (2))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Associative Property'>
                  ## </d 'Associate All Left'>
                ## </d 'Rearrange Terms'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Multiply By One'>
                      ## <d 'Evaluate'>
                        ## <d 'Evaluate'>
                          (10) mulidr
                        ## </d 'Evaluate'>
                        ## <d 'Commutative Property'>
                          (* (1) (10)) (10) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                      ## </d 'Evaluate'>
                      (* (2) (10)) addeq2i
                    ## </d 'Multiply By One'>
                    (2) addeq1i
                  ## </d 'Multiply By One'>
                  EqReplaceEq1
                ## </d 'Multiply By One'>
                ## <d 'Distributive Property'>
                  (2) (1) (10) distl
                  ## <d 'Commutative Property'>
                    (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0
                ## </d 'Distributive Property'>
              ## </d 'Group Common Digits'>
              ## <d 'Single-digit Addition'>
                2plus1
                EqReplaceEq1Add0Mul0
              ## </d 'Single-digit Addition'>
            ## </d 'Addition'>
            EqReplaceEq1
          ## </d 'Evaluate'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (6)) (+ (1) (1))) (+ (* (3) (10)) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)



## <title> Interval of Natural Numbers </title>
thm (2interval14 () () (=_ ({...} (2) (+ (10) (4))) (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))) ({} (+ (10) (1)))) ({} (+ (10) (2)))) ({} (+ (10) (3)))) ({} (+ (10) (4)))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (3) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (3) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (4) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (+ (10) (3)) (1)) (+ (10) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  2less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Convert to ≤'>
    (2) (+ (10) (3)) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (+ (10) (3))) ({} (+ (+ (10) (3)) (1)))) ({...} (2) (+ (+ (10) (3)) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    ## <d 'Addition'>
      ## <d 'Group Common Digits'>
        ## <d 'Rearrange Terms'>
          ## <d 'Change Associations'>
            ## <d 'Associative Property'>
              (10) (3) (1) addass
            ## </d 'Associative Property'>
          ## </d 'Change Associations'>
        ## </d 'Rearrange Terms'>
        ## <d 'Multiply By One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (+ (3) (1)) addeq1i
          ## </d 'Multiply By One'>
          EqReplaceEq1
        ## </d 'Multiply By One'>
      ## </d 'Group Common Digits'>
      ## <d 'Single-digit Addition'>
        3plus1
        EqReplaceEq1Add1
      ## </d 'Single-digit Addition'>
      ## <d 'Simplify'>
        ## <d 'Simplify'>
          ## <d 'Multiplicative Identity'>
            (10) mulidr
          ## </d 'Multiplicative Identity'>
          (4) addeq1i
        ## </d 'Simplify'>
        EqReplaceEq1
      ## </d 'Simplify'>
    ## </d 'Addition'>
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2interval13
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)


## <title> Interval of Natural Numbers </title>
thm (2interval15 () () (=_ ({...} (2) (+ (10) (5))) (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))) ({} (+ (10) (1)))) ({} (+ (10) (2)))) ({} (+ (10) (3)))) ({} (+ (10) (4)))) ({} (+ (10) (5)))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (4) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (4) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          4plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (5) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (+ (10) (4)) (1)) (+ (10) (5)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  2less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less4
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Convert to ≤'>
    (2) (+ (10) (4)) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (+ (10) (4))) ({} (+ (+ (10) (4)) (1)))) ({...} (2) (+ (+ (10) (4)) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    ## <d 'Addition'>
      ## <d 'Group Common Digits'>
        ## <d 'Rearrange Terms'>
          ## <d 'Change Associations'>
            ## <d 'Associative Property'>
              (10) (4) (1) addass
            ## </d 'Associative Property'>
          ## </d 'Change Associations'>
        ## </d 'Rearrange Terms'>
        ## <d 'Multiply By One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (+ (4) (1)) addeq1i
          ## </d 'Multiply By One'>
          EqReplaceEq1
        ## </d 'Multiply By One'>
      ## </d 'Group Common Digits'>
      ## <d 'Single-digit Addition'>
        4plus1
        EqReplaceEq1Add1
      ## </d 'Single-digit Addition'>
      ## <d 'Simplify'>
        ## <d 'Simplify'>
          ## <d 'Multiplicative Identity'>
            (10) mulidr
          ## </d 'Multiplicative Identity'>
          (5) addeq1i
        ## </d 'Simplify'>
        EqReplaceEq1
      ## </d 'Simplify'>
    ## </d 'Addition'>
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2interval14
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)


## <title> Interval of Natural Numbers </title>
thm (2interval16 () () (=_ ({...} (2) (+ (10) (6))) (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))) ({} (+ (10) (1)))) ({} (+ (10) (2)))) ({} (+ (10) (3)))) ({} (+ (10) (4)))) ({} (+ (10) (5)))) ({} (+ (10) (6)))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (5) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (5) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          5plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (6) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (+ (10) (5)) (1)) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  2less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less5
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Convert to ≤'>
    (2) (+ (10) (5)) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (+ (10) (5))) ({} (+ (+ (10) (5)) (1)))) ({...} (2) (+ (+ (10) (5)) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    ## <d 'Addition'>
      ## <d 'Group Common Digits'>
        ## <d 'Rearrange Terms'>
          ## <d 'Change Associations'>
            ## <d 'Associative Property'>
              (10) (5) (1) addass
            ## </d 'Associative Property'>
          ## </d 'Change Associations'>
        ## </d 'Rearrange Terms'>
        ## <d 'Multiply By One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (+ (5) (1)) addeq1i
          ## </d 'Multiply By One'>
          EqReplaceEq1
        ## </d 'Multiply By One'>
      ## </d 'Group Common Digits'>
      ## <d 'Single-digit Addition'>
        5plus1
        EqReplaceEq1Add1
      ## </d 'Single-digit Addition'>
      ## <d 'Simplify'>
        ## <d 'Simplify'>
          ## <d 'Multiplicative Identity'>
            (10) mulidr
          ## </d 'Multiplicative Identity'>
          (6) addeq1i
        ## </d 'Simplify'>
        EqReplaceEq1
      ## </d 'Simplify'>
    ## </d 'Addition'>
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2interval15
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)


## <title> Prime Number Calculation </title>
thm (17prime () () (prime (+ (10) (7)))
  2notdivides17
  x notDividesSeti
  elSubseti
  3notdivides17
  x notDividesSeti
  elSubseti
  unSubset
  4notdivides17
  x notDividesSeti
  elSubseti
  unSubset
  5notdivides17
  x notDividesSeti
  elSubseti
  unSubset
  6notdivides17
  x notDividesSeti
  elSubseti
  unSubset
  7notdivides17
  x notDividesSeti
  elSubseti
  unSubset
  8notdivides17
  x notDividesSeti
  elSubseti
  unSubset
  9notdivides17
  x notDividesSeti
  elSubseti
  unSubset
  10notdivides17
  x notDividesSeti
  elSubseti
  unSubset
  11notdivides17
  x notDividesSeti
  elSubseti
  unSubset
  12notdivides17
  x notDividesSeti
  elSubseti
  unSubset
  13notdivides17
  x notDividesSeti
  elSubseti
  unSubset
  14notdivides17
  x notDividesSeti
  elSubseti
  unSubset
  15notdivides17
  x notDividesSeti
  elSubseti
  unSubset
  16notdivides17
  x notDividesSeti
  elSubseti
  unSubset
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  (1) (10) (6) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (1) (10)) (6)) (+ (1) (+ (10) (6))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
              ## <d 'Reorder Terms'>
                ## <d 'Commutative Property'>
                  (1) (10) addcom
                  (6) addeq1i
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Reorder Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (10) (1) (6) addass
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (+ (1) (6)) addeq1i
              ## </d 'Multiply By One'>
              EqReplaceEq1
            ## </d 'Multiply By One'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            1plus6
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
          ## <d 'Simplify'>
            ## <d 'Simplify'>
              ## <d 'Multiplicative Identity'>
                (10) mulidr
              ## </d 'Multiplicative Identity'>
              (7) addeq1i
            ## </d 'Simplify'>
            EqReplaceEq1
          ## </d 'Simplify'>
        ## </d 'Addition'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (+ (10) (6))) (+ (10) (7)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      addhalfminusi
      (2) intervaleq2i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      2interval16
      SeqReplaceSeq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  ## <d 'Commutative Property'>
    ({...} (2) (.- (+ (10) (7)) (1))) (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))) ({} (+ (10) (1)))) ({} (+ (10) (2)))) ({} (+ (10) (3)))) ({} (+ (10) (4)))) ({} (+ (10) (5)))) ({} (+ (10) (6)))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSs0
  1less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less7
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  provePrime2
)

## <title> Prime Number Calculation </title>
thm (18notprime () () (-. (prime (+ (10) (8))))
  ## <d 'Has a Divisor'>
    2divides18
  ## </d 'Has a Divisor'>
  1less2
  2less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less8
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  pm3.2i
  notPrime
)



## <title> Divisibility </title>
thm (6notdivides19 () () (-. (| (6) (+ (10) (9))))
  (6) (3) (+ (10) (9)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      8less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      6times3
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (3)) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less4
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        3plus1
        (6) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        6times4
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (+ (3) (1))) (+ (* (2) (10)) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (7notdivides19 () () (-. (| (7) (+ (10) (9))))
  (7) (2) (+ (10) (9)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      4less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      7times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (2)) (+ (10) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less1
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (7) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        7times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (+ (2) (1))) (+ (* (2) (10)) (1)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (8notdivides19 () () (-. (| (8) (+ (10) (9))))
  (8) (2) (+ (10) (9)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      6less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      8times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (8) (2)) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less4
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (8) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        8times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (8) (+ (2) (1))) (+ (* (2) (10)) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (9notdivides19 () () (-. (| (9) (+ (10) (9))))
  (9) (2) (+ (10) (9)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      8less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      9times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (9) (2)) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less7
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (9) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        9times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (9) (+ (2) (1))) (+ (* (2) (10)) (7)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (10notdivides19 () () (-. (| (10) (+ (10) (9))))
  (10) (1) (+ (10) (9)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (10) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (10) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (10) (1)) (10) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (10) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Commutative Property'>
          (10) (2) mulcom
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (10) (+ (1) (1))) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (11notdivides19 () () (-. (| (+ (10) (1)) (+ (10) (9))))
  (+ (10) (1)) (1) (+ (10) (9)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      1less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (1)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (1)) (1)) (+ (10) (1)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (1)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (1) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              (2) mulidr
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (1)) (+ (1) (1))) (+ (* (2) (10)) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (12notdivides19 () () (-. (| (+ (10) (2)) (+ (10) (9))))
  (+ (10) (2)) (1) (+ (10) (9)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (2)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (2)) (1)) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less4
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (2)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (2) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              2times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (2)) (+ (1) (1))) (+ (* (2) (10)) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (13notdivides19 () () (-. (| (+ (10) (3)) (+ (10) (9))))
  (+ (10) (3)) (1) (+ (10) (9)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (3)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (3)) (1)) (+ (10) (3)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less6
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (3)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (3) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              3times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (3)) (+ (1) (1))) (+ (* (2) (10)) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (14notdivides19 () () (-. (| (+ (10) (4)) (+ (10) (9))))
  (+ (10) (4)) (1) (+ (10) (9)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      4less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (4)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (4)) (1)) (+ (10) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less8
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (4)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (4) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              4times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (4)) (+ (1) (1))) (+ (* (2) (10)) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (15notdivides19 () () (-. (| (+ (10) (5)) (+ (10) (9))))
  (+ (10) (5)) (1) (+ (10) (9)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      5less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (5)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (5)) (1)) (+ (10) (5)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      2less3
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (5)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (5) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              5times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
          ## <d 'Evaluate'>
            ## <d 'Addition'>
              ## <d 'Group Common Digits'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (10) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (10)) (10) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    (* (2) (10)) addeq2i
                  ## </d 'Multiply By One'>
                ## </d 'Multiply By One'>
                ## <d 'Distributive Property'>
                  (2) (1) (10) distl
                  ## <d 'Commutative Property'>
                    (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1
                ## </d 'Distributive Property'>
              ## </d 'Group Common Digits'>
              ## <d 'Single-digit Addition'>
                2plus1
                EqReplaceEq1Mul0
              ## </d 'Single-digit Addition'>
            ## </d 'Addition'>
            EqReplaceEq1
          ## </d 'Evaluate'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (5)) (+ (1) (1))) (* (3) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (16notdivides19 () () (-. (| (+ (10) (6)) (+ (10) (9))))
  (+ (10) (6)) (1) (+ (10) (9)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      6less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (6)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (6)) (1)) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      2less3
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (3) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (3) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (6)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (6) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              6times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
          ## <d 'Evaluate'>
            ## <d 'Addition'>
              ## <d 'Group Common Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Associate All Left'>
                    ## <d 'Associative Property'>
                      (* (2) (10)) (10) (2) addass
                      ## <d 'Commutative Property'>
                        (+ (+ (* (2) (10)) (10)) (2)) (+ (* (2) (10)) (+ (10) (2))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Associative Property'>
                  ## </d 'Associate All Left'>
                ## </d 'Rearrange Terms'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Multiply By One'>
                      ## <d 'Evaluate'>
                        ## <d 'Evaluate'>
                          (10) mulidr
                        ## </d 'Evaluate'>
                        ## <d 'Commutative Property'>
                          (* (1) (10)) (10) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                      ## </d 'Evaluate'>
                      (* (2) (10)) addeq2i
                    ## </d 'Multiply By One'>
                    (2) addeq1i
                  ## </d 'Multiply By One'>
                  EqReplaceEq1
                ## </d 'Multiply By One'>
                ## <d 'Distributive Property'>
                  (2) (1) (10) distl
                  ## <d 'Commutative Property'>
                    (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0
                ## </d 'Distributive Property'>
              ## </d 'Group Common Digits'>
              ## <d 'Single-digit Addition'>
                2plus1
                EqReplaceEq1Add0Mul0
              ## </d 'Single-digit Addition'>
            ## </d 'Addition'>
            EqReplaceEq1
          ## </d 'Evaluate'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (6)) (+ (1) (1))) (+ (* (3) (10)) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (17notdivides19 () () (-. (| (+ (10) (7)) (+ (10) (9))))
  (+ (10) (7)) (1) (+ (10) (9)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      7less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (7)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (7)) (1)) (+ (10) (7)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      2less3
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less4
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (3) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (3) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (7)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (7) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              7times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
          ## <d 'Evaluate'>
            ## <d 'Addition'>
              ## <d 'Group Common Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Associate All Left'>
                    ## <d 'Associative Property'>
                      (* (2) (10)) (10) (4) addass
                      ## <d 'Commutative Property'>
                        (+ (+ (* (2) (10)) (10)) (4)) (+ (* (2) (10)) (+ (10) (4))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Associative Property'>
                  ## </d 'Associate All Left'>
                ## </d 'Rearrange Terms'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Multiply By One'>
                      ## <d 'Evaluate'>
                        ## <d 'Evaluate'>
                          (10) mulidr
                        ## </d 'Evaluate'>
                        ## <d 'Commutative Property'>
                          (* (1) (10)) (10) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                      ## </d 'Evaluate'>
                      (* (2) (10)) addeq2i
                    ## </d 'Multiply By One'>
                    (4) addeq1i
                  ## </d 'Multiply By One'>
                  EqReplaceEq1
                ## </d 'Multiply By One'>
                ## <d 'Distributive Property'>
                  (2) (1) (10) distl
                  ## <d 'Commutative Property'>
                    (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0
                ## </d 'Distributive Property'>
              ## </d 'Group Common Digits'>
              ## <d 'Single-digit Addition'>
                2plus1
                EqReplaceEq1Add0Mul0
              ## </d 'Single-digit Addition'>
            ## </d 'Addition'>
            EqReplaceEq1
          ## </d 'Evaluate'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (7)) (+ (1) (1))) (+ (* (3) (10)) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (18notdivides19 () () (-. (| (+ (10) (8)) (+ (10) (9))))
  (+ (10) (8)) (1) (+ (10) (9)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      8less9
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (10) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (8)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (8)) (1)) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      2less3
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less6
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (3) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (3) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (8)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (8) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              8times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
          ## <d 'Evaluate'>
            ## <d 'Addition'>
              ## <d 'Group Common Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Associate All Left'>
                    ## <d 'Associative Property'>
                      (* (2) (10)) (10) (6) addass
                      ## <d 'Commutative Property'>
                        (+ (+ (* (2) (10)) (10)) (6)) (+ (* (2) (10)) (+ (10) (6))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Associative Property'>
                  ## </d 'Associate All Left'>
                ## </d 'Rearrange Terms'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Multiply By One'>
                      ## <d 'Evaluate'>
                        ## <d 'Evaluate'>
                          (10) mulidr
                        ## </d 'Evaluate'>
                        ## <d 'Commutative Property'>
                          (* (1) (10)) (10) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                      ## </d 'Evaluate'>
                      (* (2) (10)) addeq2i
                    ## </d 'Multiply By One'>
                    (6) addeq1i
                  ## </d 'Multiply By One'>
                  EqReplaceEq1
                ## </d 'Multiply By One'>
                ## <d 'Distributive Property'>
                  (2) (1) (10) distl
                  ## <d 'Commutative Property'>
                    (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0
                ## </d 'Distributive Property'>
              ## </d 'Group Common Digits'>
              ## <d 'Single-digit Addition'>
                2plus1
                EqReplaceEq1Add0Mul0
              ## </d 'Single-digit Addition'>
            ## </d 'Addition'>
            EqReplaceEq1
          ## </d 'Evaluate'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (8)) (+ (1) (1))) (+ (* (3) (10)) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Interval of Natural Numbers </title>
thm (2interval17 () () (=_ ({...} (2) (+ (10) (7))) (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))) ({} (+ (10) (1)))) ({} (+ (10) (2)))) ({} (+ (10) (3)))) ({} (+ (10) (4)))) ({} (+ (10) (5)))) ({} (+ (10) (6)))) ({} (+ (10) (7)))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (6) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (6) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          6plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (7) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (+ (10) (6)) (1)) (+ (10) (7)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  2less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less6
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Convert to ≤'>
    (2) (+ (10) (6)) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (+ (10) (6))) ({} (+ (+ (10) (6)) (1)))) ({...} (2) (+ (+ (10) (6)) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    ## <d 'Addition'>
      ## <d 'Group Common Digits'>
        ## <d 'Rearrange Terms'>
          ## <d 'Change Associations'>
            ## <d 'Associative Property'>
              (10) (6) (1) addass
            ## </d 'Associative Property'>
          ## </d 'Change Associations'>
        ## </d 'Rearrange Terms'>
        ## <d 'Multiply By One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (+ (6) (1)) addeq1i
          ## </d 'Multiply By One'>
          EqReplaceEq1
        ## </d 'Multiply By One'>
      ## </d 'Group Common Digits'>
      ## <d 'Single-digit Addition'>
        6plus1
        EqReplaceEq1Add1
      ## </d 'Single-digit Addition'>
      ## <d 'Simplify'>
        ## <d 'Simplify'>
          ## <d 'Multiplicative Identity'>
            (10) mulidr
          ## </d 'Multiplicative Identity'>
          (7) addeq1i
        ## </d 'Simplify'>
        EqReplaceEq1
      ## </d 'Simplify'>
    ## </d 'Addition'>
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2interval16
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)


## <title> Interval of Natural Numbers </title>
thm (2interval18 () () (=_ ({...} (2) (+ (10) (8))) (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))) ({} (+ (10) (1)))) ({} (+ (10) (2)))) ({} (+ (10) (3)))) ({} (+ (10) (4)))) ({} (+ (10) (5)))) ({} (+ (10) (6)))) ({} (+ (10) (7)))) ({} (+ (10) (8)))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (7) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (7) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          7plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (8) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (+ (10) (7)) (1)) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  2less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less7
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Convert to ≤'>
    (2) (+ (10) (7)) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (+ (10) (7))) ({} (+ (+ (10) (7)) (1)))) ({...} (2) (+ (+ (10) (7)) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    ## <d 'Addition'>
      ## <d 'Group Common Digits'>
        ## <d 'Rearrange Terms'>
          ## <d 'Change Associations'>
            ## <d 'Associative Property'>
              (10) (7) (1) addass
            ## </d 'Associative Property'>
          ## </d 'Change Associations'>
        ## </d 'Rearrange Terms'>
        ## <d 'Multiply By One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (+ (7) (1)) addeq1i
          ## </d 'Multiply By One'>
          EqReplaceEq1
        ## </d 'Multiply By One'>
      ## </d 'Group Common Digits'>
      ## <d 'Single-digit Addition'>
        7plus1
        EqReplaceEq1Add1
      ## </d 'Single-digit Addition'>
      ## <d 'Simplify'>
        ## <d 'Simplify'>
          ## <d 'Multiplicative Identity'>
            (10) mulidr
          ## </d 'Multiplicative Identity'>
          (8) addeq1i
        ## </d 'Simplify'>
        EqReplaceEq1
      ## </d 'Simplify'>
    ## </d 'Addition'>
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2interval17
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)

## <title> Prime Number Calculation </title>
thm (19prime () () (prime (+ (10) (9)))
  2notdivides19
  x notDividesSeti
  elSubseti
  3notdivides19
  x notDividesSeti
  elSubseti
  unSubset
  4notdivides19
  x notDividesSeti
  elSubseti
  unSubset
  5notdivides19
  x notDividesSeti
  elSubseti
  unSubset
  6notdivides19
  x notDividesSeti
  elSubseti
  unSubset
  7notdivides19
  x notDividesSeti
  elSubseti
  unSubset
  8notdivides19
  x notDividesSeti
  elSubseti
  unSubset
  9notdivides19
  x notDividesSeti
  elSubseti
  unSubset
  10notdivides19
  x notDividesSeti
  elSubseti
  unSubset
  11notdivides19
  x notDividesSeti
  elSubseti
  unSubset
  12notdivides19
  x notDividesSeti
  elSubseti
  unSubset
  13notdivides19
  x notDividesSeti
  elSubseti
  unSubset
  14notdivides19
  x notDividesSeti
  elSubseti
  unSubset
  15notdivides19
  x notDividesSeti
  elSubseti
  unSubset
  16notdivides19
  x notDividesSeti
  elSubseti
  unSubset
  17notdivides19
  x notDividesSeti
  elSubseti
  unSubset
  18notdivides19
  x notDividesSeti
  elSubseti
  unSubset
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  (1) (10) (8) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (1) (10)) (8)) (+ (1) (+ (10) (8))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
              ## <d 'Reorder Terms'>
                ## <d 'Commutative Property'>
                  (1) (10) addcom
                  (8) addeq1i
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Reorder Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (10) (1) (8) addass
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (+ (1) (8)) addeq1i
              ## </d 'Multiply By One'>
              EqReplaceEq1
            ## </d 'Multiply By One'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            1plus8
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
          ## <d 'Simplify'>
            ## <d 'Simplify'>
              ## <d 'Multiplicative Identity'>
                (10) mulidr
              ## </d 'Multiplicative Identity'>
              (9) addeq1i
            ## </d 'Simplify'>
            EqReplaceEq1
          ## </d 'Simplify'>
        ## </d 'Addition'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (+ (10) (8))) (+ (10) (9)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      addhalfminusi
      (2) intervaleq2i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      2interval18
      SeqReplaceSeq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  ## <d 'Commutative Property'>
    ({...} (2) (.- (+ (10) (9)) (1))) (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))) ({} (+ (10) (1)))) ({} (+ (10) (2)))) ({} (+ (10) (3)))) ({} (+ (10) (4)))) ({} (+ (10) (5)))) ({} (+ (10) (6)))) ({} (+ (10) (7)))) ({} (+ (10) (8)))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSs0
  1less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less9
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  provePrime2
)

## <title> Prime Number Calculation </title>
thm (20notprime () () (-. (prime (* (2) (10))))
  ## <d 'Has a Divisor'>
    (* (2) (10)) eqid
    proveDivides
  ## </d 'Has a Divisor'>
  1less2
  2less10
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      1less2
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    ## <d 'Evaluate'>
      (10) mulidr
      EqReplaceLt0
    ## </d 'Evaluate'>
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  pm3.2i
  notPrime
)



## <title> Divisibility </title>
thm (2notdivides23 () () (-. (| (2) (+ (* (2) (10)) (3))))
  (2) (+ (10) (1)) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Multiplication'>
        ## <d 'Distribute Digits'>
          ## <d 'Distributive Property'>
            (2) (10) (1) distr
          ## </d 'Distributive Property'>
        ## </d 'Distribute Digits'>
        ## <d 'Multiply Each Digit'>
          ## <d 'Multiply Two Individual Digits'>
            ## <d 'Multiply Base'>
              (2) mulid
            ## </d 'Multiply Base'>
            (* (2) (10)) addeq2i
          ## </d 'Multiply Two Individual Digits'>
          EqReplaceEq1
        ## </d 'Multiply Each Digit'>
      ## </d 'Multiplication'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (+ (10) (1))) (+ (* (2) (10)) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (10) (1) (1) addass
                ## </d 'Associative Property'>
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (+ (1) (1)) addeq1i
              ## </d 'Multiply By One'>
              EqReplaceEq1
            ## </d 'Multiply By One'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            1plus1
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
          ## <d 'Simplify'>
            ## <d 'Simplify'>
              ## <d 'Multiplicative Identity'>
                (10) mulidr
              ## </d 'Multiplicative Identity'>
              (2) addeq1i
            ## </d 'Simplify'>
            EqReplaceEq1
          ## </d 'Simplify'>
        ## </d 'Addition'>
        (2) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Multiplication'>
          ## <d 'Distribute Digits'>
            ## <d 'Distributive Property'>
              (2) (10) (2) distr
            ## </d 'Distributive Property'>
          ## </d 'Distribute Digits'>
          ## <d 'Multiply Each Digit'>
            ## <d 'Multiply Two Individual Digits'>
              ## <d 'Multiply Base'>
                2times2
              ## </d 'Multiply Base'>
              (* (2) (10)) addeq2i
            ## </d 'Multiply Two Individual Digits'>
            EqReplaceEq1
          ## </d 'Multiply Each Digit'>
        ## </d 'Multiplication'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (2) (+ (+ (10) (1)) (1))) (+ (* (2) (10)) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (3notdivides23 () () (-. (| (3) (+ (* (2) (10)) (3))))
  (3) (7) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      1less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      3times7
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (7)) (+ (* (2) (10)) (1)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        7plus1
        (3) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        3times8
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (3) (+ (7) (1))) (+ (* (2) (10)) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (4notdivides23 () () (-. (| (4) (+ (* (2) (10)) (3))))
  (4) (5) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (* (2) (10)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      4times5
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (5)) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        5plus1
        (4) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        4times6
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (4) (+ (5) (1))) (+ (* (2) (10)) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (5notdivides23 () () (-. (| (5) (+ (* (2) (10)) (3))))
  (5) (4) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (* (2) (10)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      5times4
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (4)) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less5
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        4plus1
        (5) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        5times5
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (5) (+ (4) (1))) (+ (* (2) (10)) (5)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (6notdivides23 () () (-. (| (6) (+ (* (2) (10)) (3))))
  (6) (3) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (8)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (8)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (8) (2) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (8) (2)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          8plus2
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      6times3
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (3)) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        3plus1
        (6) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        6times4
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (6) (+ (3) (1))) (+ (* (2) (10)) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (7notdivides23 () () (-. (| (7) (+ (* (2) (10)) (3))))
  (7) (3) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      1less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      7times3
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (3)) (+ (* (2) (10)) (1)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        3plus1
        (7) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        7times4
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (7) (+ (3) (1))) (+ (* (2) (10)) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (8notdivides23 () () (-. (| (8) (+ (* (2) (10)) (3))))
  (8) (2) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (6)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (6)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (6) (4) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (6) (4)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          6plus4
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      8times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (8) (2)) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (8) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        8times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (8) (+ (2) (1))) (+ (* (2) (10)) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (9notdivides23 () () (-. (| (9) (+ (* (2) (10)) (3))))
  (9) (2) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (8)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (8)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (8) (2) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (8) (2)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          8plus2
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      9times2
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (9) (2)) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (9) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        9times3
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (9) (+ (2) (1))) (+ (* (2) (10)) (7)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (10notdivides23 () () (-. (| (10) (+ (* (2) (10)) (3))))
  (10) (2) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (* (2) (10)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Commutative Property'>
        (10) (2) mulcom
      ## </d 'Commutative Property'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (10) (2)) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (* (2) (10)) (3)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (* (2) (10)) (3)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (2) (10)) (3) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (2) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (2) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          2plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (10) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Commutative Property'>
          (10) (3) mulcom
        ## </d 'Commutative Property'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (10) (+ (2) (1))) (* (3) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (11notdivides23 () () (-. (| (+ (10) (1)) (+ (* (2) (10)) (3))))
  (+ (10) (1)) (2) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'One-Digit times Multiple-Digits'>
        ## <d 'Rearrange Digits'>
          ## <d 'Distributive Property'>
            (10) (1) (2) distl
          ## </d 'Distributive Property'>
        ## </d 'Rearrange Digits'>
        ## <d 'Multiply Two Digits'>
          ## <d 'Evaluate'>
            (2) mulidr
          ## </d 'Evaluate'>
          EqReplaceEq1Add1
        ## </d 'Multiply Two Digits'>
        ## <d 'Multiply Two Digits'>
          ## <d 'Evaluate'>
            ## <d 'Commutative Property'>
              (10) (2) mulcom
            ## </d 'Commutative Property'>
          ## </d 'Evaluate'>
          EqReplaceEq1Add0
        ## </d 'Multiply Two Digits'>
      ## </d 'One-Digit times Multiple-Digits'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (1)) (2)) (+ (* (2) (10)) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (* (2) (10)) (3)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (* (2) (10)) (3)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (2) (10)) (3) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (2) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (2) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          2plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (3) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (3) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        (+ (10) (1)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (1) (3) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              (3) mulidr
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (3) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (1)) (+ (2) (1))) (+ (* (3) (10)) (3)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (12notdivides23 () () (-. (| (+ (10) (2)) (+ (* (2) (10)) (3))))
  (+ (10) (2)) (1) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (2)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (2)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (2) (8) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (2) (8)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          2plus8
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (2)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (2)) (1)) (+ (10) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (2)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (2) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              2times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (2)) (+ (1) (1))) (+ (* (2) (10)) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (13notdivides23 () () (-. (| (+ (10) (3)) (+ (* (2) (10)) (3))))
  (+ (10) (3)) (1) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (3)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (3)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (3) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (3) (7)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (3)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (3)) (1)) (+ (10) (3)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less6
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (3)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (3) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              3times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (3)) (+ (1) (1))) (+ (* (2) (10)) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (14notdivides23 () () (-. (| (+ (10) (4)) (+ (* (2) (10)) (3))))
  (+ (10) (4)) (1) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less6
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (4)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (4)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (4) (6) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (4) (6)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          4plus6
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (4)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (4)) (1)) (+ (10) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      3less8
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (4)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (4) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              4times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (4)) (+ (1) (1))) (+ (* (2) (10)) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (15notdivides23 () () (-. (| (+ (10) (5)) (+ (* (2) (10)) (3))))
  (+ (10) (5)) (1) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less5
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (5)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (5)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (5) (5) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (5) (5)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          5plus5
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (5)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (5)) (1)) (+ (10) (5)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (* (2) (10)) (3)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (* (2) (10)) (3)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (2) (10)) (3) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (2) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (2) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          2plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (5)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (5) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              5times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
          ## <d 'Evaluate'>
            ## <d 'Addition'>
              ## <d 'Group Common Digits'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (10) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (10)) (10) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    (* (2) (10)) addeq2i
                  ## </d 'Multiply By One'>
                ## </d 'Multiply By One'>
                ## <d 'Distributive Property'>
                  (2) (1) (10) distl
                  ## <d 'Commutative Property'>
                    (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1
                ## </d 'Distributive Property'>
              ## </d 'Group Common Digits'>
              ## <d 'Single-digit Addition'>
                2plus1
                EqReplaceEq1Mul0
              ## </d 'Single-digit Addition'>
            ## </d 'Addition'>
            EqReplaceEq1
          ## </d 'Evaluate'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (5)) (+ (1) (1))) (* (3) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (16notdivides23 () () (-. (| (+ (10) (6)) (+ (* (2) (10)) (3))))
  (+ (10) (6)) (1) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less4
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (6)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (6)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (6) (4) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (6) (4)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          6plus4
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (6)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (6)) (1)) (+ (10) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (* (2) (10)) (3)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (* (2) (10)) (3)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (2) (10)) (3) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (2) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (2) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          2plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (3) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (3) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (6)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (6) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              6times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
          ## <d 'Evaluate'>
            ## <d 'Addition'>
              ## <d 'Group Common Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Associate All Left'>
                    ## <d 'Associative Property'>
                      (* (2) (10)) (10) (2) addass
                      ## <d 'Commutative Property'>
                        (+ (+ (* (2) (10)) (10)) (2)) (+ (* (2) (10)) (+ (10) (2))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Associative Property'>
                  ## </d 'Associate All Left'>
                ## </d 'Rearrange Terms'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Multiply By One'>
                      ## <d 'Evaluate'>
                        ## <d 'Evaluate'>
                          (10) mulidr
                        ## </d 'Evaluate'>
                        ## <d 'Commutative Property'>
                          (* (1) (10)) (10) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                      ## </d 'Evaluate'>
                      (* (2) (10)) addeq2i
                    ## </d 'Multiply By One'>
                    (2) addeq1i
                  ## </d 'Multiply By One'>
                  EqReplaceEq1
                ## </d 'Multiply By One'>
                ## <d 'Distributive Property'>
                  (2) (1) (10) distl
                  ## <d 'Commutative Property'>
                    (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0
                ## </d 'Distributive Property'>
              ## </d 'Group Common Digits'>
              ## <d 'Single-digit Addition'>
                2plus1
                EqReplaceEq1Add0Mul0
              ## </d 'Single-digit Addition'>
            ## </d 'Addition'>
            EqReplaceEq1
          ## </d 'Evaluate'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (6)) (+ (1) (1))) (+ (* (3) (10)) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (17notdivides23 () () (-. (| (+ (10) (7)) (+ (* (2) (10)) (3))))
  (+ (10) (7)) (1) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (7)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (7)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (7) (3) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (7) (3)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          7plus3
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (7)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (7)) (1)) (+ (10) (7)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (* (2) (10)) (3)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (* (2) (10)) (3)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (2) (10)) (3) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (2) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (2) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          2plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less4
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (3) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (3) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (7)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (7) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              7times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
          ## <d 'Evaluate'>
            ## <d 'Addition'>
              ## <d 'Group Common Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Associate All Left'>
                    ## <d 'Associative Property'>
                      (* (2) (10)) (10) (4) addass
                      ## <d 'Commutative Property'>
                        (+ (+ (* (2) (10)) (10)) (4)) (+ (* (2) (10)) (+ (10) (4))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Associative Property'>
                  ## </d 'Associate All Left'>
                ## </d 'Rearrange Terms'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Multiply By One'>
                      ## <d 'Evaluate'>
                        ## <d 'Evaluate'>
                          (10) mulidr
                        ## </d 'Evaluate'>
                        ## <d 'Commutative Property'>
                          (* (1) (10)) (10) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                      ## </d 'Evaluate'>
                      (* (2) (10)) addeq2i
                    ## </d 'Multiply By One'>
                    (4) addeq1i
                  ## </d 'Multiply By One'>
                  EqReplaceEq1
                ## </d 'Multiply By One'>
                ## <d 'Distributive Property'>
                  (2) (1) (10) distl
                  ## <d 'Commutative Property'>
                    (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0
                ## </d 'Distributive Property'>
              ## </d 'Group Common Digits'>
              ## <d 'Single-digit Addition'>
                2plus1
                EqReplaceEq1Add0Mul0
              ## </d 'Single-digit Addition'>
            ## </d 'Addition'>
            EqReplaceEq1
          ## </d 'Evaluate'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (7)) (+ (1) (1))) (+ (* (3) (10)) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (18notdivides23 () () (-. (| (+ (10) (8)) (+ (* (2) (10)) (3))))
  (+ (10) (8)) (1) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less2
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (8)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (8)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (8) (2) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (8) (2)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          8plus2
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (8)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (8)) (1)) (+ (10) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (* (2) (10)) (3)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (* (2) (10)) (3)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (2) (10)) (3) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (2) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (2) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          2plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less6
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (3) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (3) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (8)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (8) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              8times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
          ## <d 'Evaluate'>
            ## <d 'Addition'>
              ## <d 'Group Common Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Associate All Left'>
                    ## <d 'Associative Property'>
                      (* (2) (10)) (10) (6) addass
                      ## <d 'Commutative Property'>
                        (+ (+ (* (2) (10)) (10)) (6)) (+ (* (2) (10)) (+ (10) (6))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Associative Property'>
                  ## </d 'Associate All Left'>
                ## </d 'Rearrange Terms'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Multiply By One'>
                      ## <d 'Evaluate'>
                        ## <d 'Evaluate'>
                          (10) mulidr
                        ## </d 'Evaluate'>
                        ## <d 'Commutative Property'>
                          (* (1) (10)) (10) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                      ## </d 'Evaluate'>
                      (* (2) (10)) addeq2i
                    ## </d 'Multiply By One'>
                    (6) addeq1i
                  ## </d 'Multiply By One'>
                  EqReplaceEq1
                ## </d 'Multiply By One'>
                ## <d 'Distributive Property'>
                  (2) (1) (10) distl
                  ## <d 'Commutative Property'>
                    (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0
                ## </d 'Distributive Property'>
              ## </d 'Group Common Digits'>
              ## <d 'Single-digit Addition'>
                2plus1
                EqReplaceEq1Add0Mul0
              ## </d 'Single-digit Addition'>
            ## </d 'Addition'>
            EqReplaceEq1
          ## </d 'Evaluate'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (8)) (+ (1) (1))) (+ (* (3) (10)) (6)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (19notdivides23 () () (-. (| (+ (10) (9)) (+ (* (2) (10)) (3))))
  (+ (10) (9)) (1) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less1
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (10) (9)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (10) (9)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (10) (9)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (9)) (1)) (+ (10) (9)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (* (2) (10)) (3)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (* (2) (10)) (3)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (2) (10)) (3) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (2) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (2) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          2plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less8
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (3) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (3) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (10) (9)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (10) (9) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              9times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              ## <d 'Commutative Property'>
                (10) (2) mulcom
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
          ## <d 'Evaluate'>
            ## <d 'Addition'>
              ## <d 'Group Common Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Associate All Left'>
                    ## <d 'Associative Property'>
                      (* (2) (10)) (10) (8) addass
                      ## <d 'Commutative Property'>
                        (+ (+ (* (2) (10)) (10)) (8)) (+ (* (2) (10)) (+ (10) (8))) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Associative Property'>
                  ## </d 'Associate All Left'>
                ## </d 'Rearrange Terms'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Multiply By One'>
                      ## <d 'Evaluate'>
                        ## <d 'Evaluate'>
                          (10) mulidr
                        ## </d 'Evaluate'>
                        ## <d 'Commutative Property'>
                          (* (1) (10)) (10) eqcom
                          mpbi
                        ## </d 'Commutative Property'>
                      ## </d 'Evaluate'>
                      (* (2) (10)) addeq2i
                    ## </d 'Multiply By One'>
                    (8) addeq1i
                  ## </d 'Multiply By One'>
                  EqReplaceEq1
                ## </d 'Multiply By One'>
                ## <d 'Distributive Property'>
                  (2) (1) (10) distl
                  ## <d 'Commutative Property'>
                    (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1Add0
                ## </d 'Distributive Property'>
              ## </d 'Group Common Digits'>
              ## <d 'Single-digit Addition'>
                2plus1
                EqReplaceEq1Add0Mul0
              ## </d 'Single-digit Addition'>
            ## </d 'Addition'>
            EqReplaceEq1
          ## </d 'Evaluate'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (10) (9)) (+ (1) (1))) (+ (* (3) (10)) (8)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (20notdivides23 () () (-. (| (* (2) (10)) (+ (* (2) (10)) (3))))
  (* (2) (10)) (1) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      0less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (* (2) (10)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (* (2) (10)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (* (2) (10)) (1)) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (* (2) (10)) (3)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (* (2) (10)) (3)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (2) (10)) (3) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (2) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (2) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          2plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      3less4
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (* (2) (10)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Reorder Terms'>
                ## <d 'Associative Property'>
                  (2) (10) (2) mulass
                ## </d 'Associative Property'>
                ## <d 'Commutative Property'>
                  (10) (2) mulcom
                  EqReplaceEq1Mul1
                ## </d 'Commutative Property'>
                ## <d 'Associative Property'>
                  (2) (2) (10) mulass
                  ## <d 'Commutative Property'>
                    (* (* (2) (2)) (10)) (* (2) (* (2) (10))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1
                ## </d 'Associative Property'>
              ## </d 'Reorder Terms'>
            ## </d 'Rearrange Terms'>
            ## <d 'Evaluate'>
              2times2
              EqReplaceEq1Mul0
            ## </d 'Evaluate'>
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (* (2) (10)) (+ (1) (1))) (* (4) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (21notdivides23 () () (-. (| (+ (* (2) (10)) (1)) (+ (* (2) (10)) (3))))
  (+ (* (2) (10)) (1)) (1) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      1less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (* (2) (10)) (1)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (* (2) (10)) (1)) (1)) (+ (* (2) (10)) (1)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (* (2) (10)) (3)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (* (2) (10)) (3)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (2) (10)) (3) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (2) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (2) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          2plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      3less4
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less2
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (4) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (4) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (* (2) (10)) (1)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (* (2) (10)) (1) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              (2) mulidr
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Reorder Terms'>
                ## <d 'Associative Property'>
                  (2) (10) (2) mulass
                ## </d 'Associative Property'>
                ## <d 'Commutative Property'>
                  (10) (2) mulcom
                  EqReplaceEq1Mul1
                ## </d 'Commutative Property'>
                ## <d 'Associative Property'>
                  (2) (2) (10) mulass
                  ## <d 'Commutative Property'>
                    (* (* (2) (2)) (10)) (* (2) (* (2) (10))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1
                ## </d 'Associative Property'>
              ## </d 'Reorder Terms'>
            ## </d 'Rearrange Terms'>
            ## <d 'Evaluate'>
              2times2
              EqReplaceEq1Mul0
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (* (2) (10)) (1)) (+ (1) (1))) (+ (* (4) (10)) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Divisibility </title>
thm (22notdivides23 () () (-. (| (+ (* (2) (10)) (2)) (+ (* (2) (10)) (3))))
  (+ (* (2) (10)) (2)) (1) (+ (* (2) (10)) (3)) notDivides
  ## <d 'Compare Smaller Digits'>
    ## <d 'Derive Smaller Inequality'>
      2less3
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (* (2) (10)) ltadd2i
    ## </d 'Add To Both Sides'>
  ## </d 'Compare Smaller Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      (+ (* (2) (10)) (2)) mulid
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (* (2) (10)) (2)) (1)) (+ (* (2) (10)) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt0
  ## </d 'Evaluate'>
  ## <d 'Numbers Get Higher Rounding Up'>
    ## <d 'Derive Smaller Inequality'>
      0less7
    ## </d 'Derive Smaller Inequality'>
    ## <d 'Add To Both Sides'>
      (+ (* (2) (10)) (3)) ltadd2i
    ## </d 'Add To Both Sides'>
    ## <d 'Simplify Left Side'>
      (+ (* (2) (10)) (3)) pa_ax3
      EqReplaceLt0
    ## </d 'Simplify Left Side'>
    ## <d 'Simplify Right Side'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (2) (10)) (3) (7) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (2) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (2) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          2plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
      EqReplaceLt1
    ## </d 'Simplify Right Side'>
  ## </d 'Numbers Get Higher Rounding Up'>
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      3less4
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less4
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (4) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (4) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (+ (* (2) (10)) (2)) muleq2i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'One-Digit times Multiple-Digits'>
          ## <d 'Rearrange Digits'>
            ## <d 'Distributive Property'>
              (* (2) (10)) (2) (2) distl
            ## </d 'Distributive Property'>
          ## </d 'Rearrange Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Evaluate'>
              2times2
            ## </d 'Evaluate'>
            EqReplaceEq1Add1
          ## </d 'Multiply Two Digits'>
          ## <d 'Multiply Two Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Reorder Terms'>
                ## <d 'Associative Property'>
                  (2) (10) (2) mulass
                ## </d 'Associative Property'>
                ## <d 'Commutative Property'>
                  (10) (2) mulcom
                  EqReplaceEq1Mul1
                ## </d 'Commutative Property'>
                ## <d 'Associative Property'>
                  (2) (2) (10) mulass
                  ## <d 'Commutative Property'>
                    (* (* (2) (2)) (10)) (* (2) (* (2) (10))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                  EqReplaceEq1
                ## </d 'Associative Property'>
              ## </d 'Reorder Terms'>
            ## </d 'Rearrange Terms'>
            ## <d 'Evaluate'>
              2times2
              EqReplaceEq1Mul0
            ## </d 'Evaluate'>
            EqReplaceEq1Add0
          ## </d 'Multiply Two Digits'>
        ## </d 'One-Digit times Multiple-Digits'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (* (+ (* (2) (10)) (2)) (+ (1) (1))) (+ (* (4) (10)) (4)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    EqReplaceLt1
  ## </d 'Evaluate'>
  pm3.2i
  
  ax-mpRemove
)

## <title> Interval of Natural Numbers </title>
thm (2interval19 () () (=_ ({...} (2) (+ (10) (9))) (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))) ({} (+ (10) (1)))) ({} (+ (10) (2)))) ({} (+ (10) (3)))) ({} (+ (10) (4)))) ({} (+ (10) (5)))) ({} (+ (10) (6)))) ({} (+ (10) (7)))) ({} (+ (10) (8)))) ({} (+ (10) (9)))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (8) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (8) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          8plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (9) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (+ (10) (8)) (1)) (+ (10) (9)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  2less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less8
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Convert to ≤'>
    (2) (+ (10) (8)) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (+ (10) (8))) ({} (+ (+ (10) (8)) (1)))) ({...} (2) (+ (+ (10) (8)) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    ## <d 'Addition'>
      ## <d 'Group Common Digits'>
        ## <d 'Rearrange Terms'>
          ## <d 'Change Associations'>
            ## <d 'Associative Property'>
              (10) (8) (1) addass
            ## </d 'Associative Property'>
          ## </d 'Change Associations'>
        ## </d 'Rearrange Terms'>
        ## <d 'Multiply By One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (+ (8) (1)) addeq1i
          ## </d 'Multiply By One'>
          EqReplaceEq1
        ## </d 'Multiply By One'>
      ## </d 'Group Common Digits'>
      ## <d 'Single-digit Addition'>
        8plus1
        EqReplaceEq1Add1
      ## </d 'Single-digit Addition'>
      ## <d 'Simplify'>
        ## <d 'Simplify'>
          ## <d 'Multiplicative Identity'>
            (10) mulidr
          ## </d 'Multiplicative Identity'>
          (9) addeq1i
        ## </d 'Simplify'>
        EqReplaceEq1
      ## </d 'Simplify'>
    ## </d 'Addition'>
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2interval18
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)


## <title> Interval of Natural Numbers </title>
thm (2interval20 () () (=_ ({...} (2) (* (2) (10))) (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))) ({} (+ (10) (1)))) ({} (+ (10) (2)))) ({} (+ (10) (3)))) ({} (+ (10) (4)))) ({} (+ (10) (5)))) ({} (+ (10) (6)))) ({} (+ (10) (7)))) ({} (+ (10) (8)))) ({} (+ (10) (9)))) ({} (* (2) (10)))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (9) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (9) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (* (1) (10)) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (+ (10) (9)) (1)) (* (2) (10)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  2less10
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less9
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (10) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (10) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Convert to ≤'>
    (2) (+ (10) (9)) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (+ (10) (9))) ({} (+ (+ (10) (9)) (1)))) ({...} (2) (+ (+ (10) (9)) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    ## <d 'Addition'>
      ## <d 'Group Common Digits'>
        ## <d 'Rearrange Terms'>
          ## <d 'Change Associations'>
            ## <d 'Associative Property'>
              (10) (9) (1) addass
            ## </d 'Associative Property'>
          ## </d 'Change Associations'>
        ## </d 'Rearrange Terms'>
        ## <d 'Multiply By One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (+ (9) (1)) addeq1i
          ## </d 'Multiply By One'>
          EqReplaceEq1
        ## </d 'Multiply By One'>
      ## </d 'Group Common Digits'>
      ## <d 'Single-digit Addition'>
        9plus1
        EqReplaceEq1Add1
      ## </d 'Single-digit Addition'>
      ## <d 'Carry the One'>
        ## <d 'Multiply By One'>
          ## <d 'Evaluate'>
            ## <d 'Evaluate'>
              (10) mulidr
            ## </d 'Evaluate'>
            ## <d 'Commutative Property'>
              (* (1) (10)) (10) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Evaluate'>
          (* (1) (10)) addeq2i
        ## </d 'Multiply By One'>
        ## <d 'Distributive Property'>
          (1) (1) (10) distl
          ## <d 'Commutative Property'>
            (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
            mpbi
          ## </d 'Commutative Property'>
          EqReplaceEq1
        ## </d 'Distributive Property'>
        EqReplaceEq1
      ## </d 'Carry the One'>
      ## <d 'Single-digit Addition'>
        1plus1
        EqReplaceEq1Mul0
      ## </d 'Single-digit Addition'>
    ## </d 'Addition'>
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2interval19
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)


## <title> Interval of Natural Numbers </title>
thm (2interval21 () () (=_ ({...} (2) (+ (* (2) (10)) (1))) (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))) ({} (+ (10) (1)))) ({} (+ (10) (2)))) ({} (+ (10) (3)))) ({} (+ (10) (4)))) ({} (+ (10) (5)))) ({} (+ (10) (6)))) ({} (+ (10) (7)))) ({} (+ (10) (8)))) ({} (+ (10) (9)))) ({} (* (2) (10)))) ({} (+ (* (2) (10)) (1)))))
  2less10
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      1less2
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    ## <d 'Evaluate'>
      (10) mulidr
      EqReplaceLt0
    ## </d 'Evaluate'>
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Convert to ≤'>
    (2) (* (2) (10)) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (* (2) (10))) ({} (+ (* (2) (10)) (1)))) ({...} (2) (+ (* (2) (10)) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  ## <d 'Evaluate'>
    2interval20
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)


## <title> Interval of Natural Numbers </title>
thm (2interval22 () () (=_ ({...} (2) (+ (* (2) (10)) (2))) (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))) ({} (+ (10) (1)))) ({} (+ (10) (2)))) ({} (+ (10) (3)))) ({} (+ (10) (4)))) ({} (+ (10) (5)))) ({} (+ (10) (6)))) ({} (+ (10) (7)))) ({} (+ (10) (8)))) ({} (+ (10) (9)))) ({} (* (2) (10)))) ({} (+ (* (2) (10)) (1)))) ({} (+ (* (2) (10)) (2)))))
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (* (2) (10)) (1) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    ## <d 'Commutative Property'>
      (+ (+ (* (2) (10)) (1)) (1)) (+ (* (2) (10)) (2)) eqcom
      mpbi
    ## </d 'Commutative Property'>
    (2) intervaleq2i
  ## </d 'Evaluate'>
  2less10
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      1less2
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    ## <d 'Evaluate'>
      (10) mulidr
      EqReplaceLt0
    ## </d 'Evaluate'>
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less1
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  ## <d 'Convert to ≤'>
    (2) (+ (* (2) (10)) (1)) ltle
    ax-mp
  ## </d 'Convert to ≤'>
  intervalAttach
  ## <d 'Commutative Property'>
    (u. ({...} (2) (+ (* (2) (10)) (1))) ({} (+ (+ (* (2) (10)) (1)) (1)))) ({...} (2) (+ (+ (* (2) (10)) (1)) (1))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSeq1
  ## <d 'Evaluate'>
    ## <d 'Addition'>
      ## <d 'Group Common Digits'>
        ## <d 'Rearrange Terms'>
          ## <d 'Change Associations'>
            ## <d 'Associative Property'>
              (* (2) (10)) (1) (1) addass
            ## </d 'Associative Property'>
          ## </d 'Change Associations'>
        ## </d 'Rearrange Terms'>
      ## </d 'Group Common Digits'>
      ## <d 'Single-digit Addition'>
        1plus1
        EqReplaceEq1Add1
      ## </d 'Single-digit Addition'>
    ## </d 'Addition'>
    EqReplaceSeq1Un1Sn0
  ## </d 'Evaluate'>
  ## <d 'Evaluate'>
    2interval21
    SeqReplaceSeq1Un0
  ## </d 'Evaluate'>
)


## <title> Prime Number Calculation </title>
thm (23prime () () (prime (+ (* (2) (10)) (3)))
  2notdivides23
  x notDividesSeti
  elSubseti
  3notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  4notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  5notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  6notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  7notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  8notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  9notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  10notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  11notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  12notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  13notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  14notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  15notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  16notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  17notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  18notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  19notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  20notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  21notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  22notdivides23
  x notDividesSeti
  elSubseti
  unSubset
  ## <d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Associate All Left'>
                ## <d 'Associative Property'>
                  (1) (* (2) (10)) (2) addass
                  ## <d 'Commutative Property'>
                    (+ (+ (1) (* (2) (10))) (2)) (+ (1) (+ (* (2) (10)) (2))) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Associative Property'>
              ## </d 'Associate All Left'>
              ## <d 'Reorder Terms'>
                ## <d 'Commutative Property'>
                  (1) (* (2) (10)) addcom
                  (2) addeq1i
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Reorder Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (* (2) (10)) (1) (2) addass
                ## </d 'Associative Property'>
                EqReplaceEq1
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            1plus2
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
        ## </d 'Addition'>
      ## </d 'Evaluate'>
      ## <d 'Commutative Property'>
        (+ (1) (+ (* (2) (10)) (2))) (+ (* (2) (10)) (3)) eqcom
        mpbi
      ## </d 'Commutative Property'>
      addhalfminusi
      (2) intervaleq2i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      2interval22
      SeqReplaceSeq1
    ## </d 'Evaluate'>
  ## </d 'Evaluate'>
  ## <d 'Commutative Property'>
    ({...} (2) (.- (+ (* (2) (10)) (3)) (1))) (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. (u. ({} (2)) ({} (3))) ({} (4))) ({} (5))) ({} (6))) ({} (7))) ({} (8))) ({} (9))) ({} (10))) ({} (+ (10) (1)))) ({} (+ (10) (2)))) ({} (+ (10) (3)))) ({} (+ (10) (4)))) ({} (+ (10) (5)))) ({} (+ (10) (6)))) ({} (+ (10) (7)))) ({} (+ (10) (8)))) ({} (+ (10) (9)))) ({} (* (2) (10)))) ({} (+ (* (2) (10)) (1)))) ({} (+ (* (2) (10)) (2)))) seqcom
    mpbi
  ## </d 'Commutative Property'>
  SeqReplaceSs0
  1less10
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      1less2
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    ## <d 'Evaluate'>
      (10) mulidr
      EqReplaceLt0
    ## </d 'Evaluate'>
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less3
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  provePrime2
)


## <title> Divisibility </title>
thm (2divides24 () () (| (2) (+ (* (2) (10)) (4)))
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (2) (10) (2) distr
        ## </d 'Distributive Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            2times2
          ## </d 'Multiply Base'>
          (* (2) (10)) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
    ## </d 'Multiplication'>
  ## </d 'Evaluate'>
  proveDivides
)


## <title> Prime Number Calculation </title>
thm (24notprime () () (-. (prime (+ (* (2) (10)) (4))))
  ## <d 'Has a Divisor'>
    2divides24
  ## </d 'Has a Divisor'>
  1less2
  2less10
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      1less2
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    ## <d 'Evaluate'>
      (10) mulidr
      EqReplaceLt0
    ## </d 'Evaluate'>
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less4
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  pm3.2i
  notPrime
)

## <title> Divisibility </title>
thm (5divides25 () () (| (5) (+ (* (2) (10)) (5)))
  ## <d 'Evaluate'>
    5times5
  ## </d 'Evaluate'>
  proveDivides
)


## <title> Prime Number Calculation </title>
thm (25notprime () () (-. (prime (+ (* (2) (10)) (5))))
  ## <d 'Has a Divisor'>
    5divides25
  ## </d 'Has a Divisor'>
  1less5
  5less10
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      1less2
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    ## <d 'Evaluate'>
      (10) mulidr
      EqReplaceLt0
    ## </d 'Evaluate'>
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less5
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  pm3.2i
  notPrime
)

## <title> Divisibility </title>
thm (2divides26 () () (| (2) (+ (* (2) (10)) (6)))
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (2) (10) (3) distr
        ## </d 'Distributive Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            2times3
          ## </d 'Multiply Base'>
          (* (2) (10)) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
    ## </d 'Multiplication'>
  ## </d 'Evaluate'>
  proveDivides
)


## <title> Prime Number Calculation </title>
thm (26notprime () () (-. (prime (+ (* (2) (10)) (6))))
  ## <d 'Has a Divisor'>
    2divides26
  ## </d 'Has a Divisor'>
  1less2
  2less10
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      1less2
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    ## <d 'Evaluate'>
      (10) mulidr
      EqReplaceLt0
    ## </d 'Evaluate'>
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less6
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  pm3.2i
  notPrime
)

## <title> Divisibility </title>
thm (3divides27 () () (| (3) (+ (* (2) (10)) (7)))
  ## <d 'Evaluate'>
    3times9
  ## </d 'Evaluate'>
  proveDivides
)


## <title> Prime Number Calculation </title>
thm (27notprime () () (-. (prime (+ (* (2) (10)) (7))))
  ## <d 'Has a Divisor'>
    3divides27
  ## </d 'Has a Divisor'>
  1less3
  3less10
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      1less2
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    ## <d 'Evaluate'>
      (10) mulidr
      EqReplaceLt0
    ## </d 'Evaluate'>
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less7
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  pm3.2i
  notPrime
)

## <title> Divisibility </title>
thm (2divides28 () () (| (2) (+ (* (2) (10)) (8)))
  ## <d 'Evaluate'>
    ## <d 'Multiplication'>
      ## <d 'Distribute Digits'>
        ## <d 'Distributive Property'>
          (2) (10) (4) distr
        ## </d 'Distributive Property'>
      ## </d 'Distribute Digits'>
      ## <d 'Multiply Each Digit'>
        ## <d 'Multiply Two Individual Digits'>
          ## <d 'Multiply Base'>
            2times4
          ## </d 'Multiply Base'>
          (* (2) (10)) addeq2i
        ## </d 'Multiply Two Individual Digits'>
        EqReplaceEq1
      ## </d 'Multiply Each Digit'>
    ## </d 'Multiplication'>
  ## </d 'Evaluate'>
  proveDivides
)


## <title> Prime Number Calculation </title>
thm (28notprime () () (-. (prime (+ (* (2) (10)) (8))))
  ## <d 'Has a Divisor'>
    2divides28
  ## </d 'Has a Divisor'>
  1less2
  2less10
  ## <d 'Higher First Digit'>
    ## <d 'Compare First Digits'>
      1less2
    ## </d 'Compare First Digits'>
    0less10
    ltmul2i
    ## <d 'Evaluate'>
      (10) mulidr
      EqReplaceLt0
    ## </d 'Evaluate'>
    LtReplaceLt1
  ## </d 'Higher First Digit'>
  ## <d 'Higher Remaining Digits'>
    ## <d 'Compare Smaller Digits'>
      ## <d 'Derive Smaller Inequality'>
        0less8
      ## </d 'Derive Smaller Inequality'>
      ## <d 'Add To Both Sides'>
        (* (2) (10)) ltadd2i
      ## </d 'Add To Both Sides'>
      ## <d 'Simplify Left Side'>
        (* (2) (10)) pa_ax3
        EqReplaceLt0
      ## </d 'Simplify Left Side'>
    ## </d 'Compare Smaller Digits'>
    LtReplaceLt1
  ## </d 'Higher Remaining Digits'>
  pm3.2i
  notPrime
)


## <title> Substitution </title>
## <table>
##   (= (fibonacci  [ A ]   ]   ] ) C)
##   (=             [ A ]   [ B ] )
##   (= (fibonacci  [   [   [ B ] ) C)
## </table>
thm (EqReplaceEq0Fibonacci0 () (
     replacee (= (fibonacci A) C)
     substitution (= A B)) 
     (= (fibonacci B) C)
  replacee substitution
  fibonaccieqi
  EqReplaceEq0
)

## <title> Substitution </title>
## <table>
##   (= A (+ B (fibonacci  [ C ]   ]   ] )))
##   (=                    [ C ]   [ D ] )
##   (= A (+ B (fibonacci  [   [   [ D ] )))
## </table>
thm (EqReplaceEq1Add1Fibonacci0 () (
     replacee (= A (+ B (fibonacci C)))
     substitution (= C D)) 
     (= A (+ B (fibonacci D)))
  replacee substitution
  fibonaccieqi
  EqReplaceEq1Add1
)



## <title> Fibonacci </title>
thm (fibonacci2 () () (= (fibonacci (2)) (1))
  ## <d 'Add Indices'>
    (0) df-fibRecurse
    ## <d 'Evaluate'>
      (2) pa_ax3r
      EqReplaceEq0Fibonacci0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      (1) pa_ax3r
      EqReplaceEq1Add1Fibonacci0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      fibonacci0
      (fibonacci (1)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      fibonacci1
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Fibonacci Numbers'>
    ## <d 'Evaluate'>
      (1) pa_ax3r
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Fibonacci Numbers'>
)

## <title> Fibonacci </title>
thm (fibonacci3 () () (= (fibonacci (3)) (2))
  ## <d 'Add Indices'>
    (1) df-fibRecurse
    ## <d 'Evaluate'>
      1plus2
      EqReplaceEq0Fibonacci0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      1plus1
      EqReplaceEq1Add1Fibonacci0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      fibonacci1
      (fibonacci (2)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      fibonacci2
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Fibonacci Numbers'>
    ## <d 'Evaluate'>
      1plus1
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Fibonacci Numbers'>
)

## <title> Fibonacci </title>
thm (fibonacci4 () () (= (fibonacci (4)) (3))
  ## <d 'Add Indices'>
    (2) df-fibRecurse
    ## <d 'Evaluate'>
      2plus2
      EqReplaceEq0Fibonacci0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      2plus1
      EqReplaceEq1Add1Fibonacci0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      fibonacci2
      (fibonacci (3)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      fibonacci3
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Fibonacci Numbers'>
    ## <d 'Evaluate'>
      1plus2
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Fibonacci Numbers'>
)

## <title> Fibonacci </title>
thm (fibonacci5 () () (= (fibonacci (5)) (5))
  ## <d 'Add Indices'>
    (3) df-fibRecurse
    ## <d 'Evaluate'>
      3plus2
      EqReplaceEq0Fibonacci0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      3plus1
      EqReplaceEq1Add1Fibonacci0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      fibonacci3
      (fibonacci (4)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      fibonacci4
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Fibonacci Numbers'>
    ## <d 'Evaluate'>
      2plus3
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Fibonacci Numbers'>
)

## <title> Fibonacci </title>
thm (fibonacci6 () () (= (fibonacci (6)) (8))
  ## <d 'Add Indices'>
    (4) df-fibRecurse
    ## <d 'Evaluate'>
      4plus2
      EqReplaceEq0Fibonacci0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      4plus1
      EqReplaceEq1Add1Fibonacci0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      fibonacci4
      (fibonacci (5)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      fibonacci5
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Fibonacci Numbers'>
    ## <d 'Evaluate'>
      3plus5
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Fibonacci Numbers'>
)

## <title> Fibonacci </title>
thm (fibonacci7 () () (= (fibonacci (7)) (+ (10) (3)) )
  ## <d 'Add Indices'>
    (5) df-fibRecurse
    ## <d 'Evaluate'>
      5plus2
      EqReplaceEq0Fibonacci0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      5plus1
      EqReplaceEq1Add1Fibonacci0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      fibonacci5
      (fibonacci (6)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      fibonacci6
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Fibonacci Numbers'>
    ## <d 'Evaluate'>
      5plus8
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Fibonacci Numbers'>
)

## <title> Fibonacci </title>
thm (fibonacci8 () () (= (fibonacci (8)) (+ (* (2) (10)) (1)) )
  ## <d 'Add Indices'>
    (6) df-fibRecurse
    ## <d 'Evaluate'>
      6plus2
      EqReplaceEq0Fibonacci0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      6plus1
      EqReplaceEq1Add1Fibonacci0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      fibonacci6
      (fibonacci (7)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      fibonacci7
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Fibonacci Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (8) (10) (3) addass
                ## <d 'Commutative Property'>
                  (+ (+ (8) (10)) (3)) (+ (8) (+ (10) (3))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Commutative Property'>
                (8) (10) addcom
                (3) addeq1i
              ## </d 'Commutative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (8) (3) addass
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (8) (3)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          8plus3
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (1) (10)) (10) (1) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (1) (10)) (10)) (1)) (+ (* (1) (10)) (+ (10) (1))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Fibonacci Numbers'>
)

## <title> Fibonacci </title>
thm (fibonacci9 () () (= (fibonacci (9)) (+ (* (3) (10)) (4)) )
  ## <d 'Add Indices'>
    (7) df-fibRecurse
    ## <d 'Evaluate'>
      7plus2
      EqReplaceEq0Fibonacci0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      7plus1
      EqReplaceEq1Add1Fibonacci0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      fibonacci7
      (fibonacci (8)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      fibonacci8
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Fibonacci Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (10) (3)) (* (2) (10)) (1) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (10) (3)) (* (2) (10))) (1)) (+ (+ (10) (3)) (+ (* (2) (10)) (1))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (10) (3) (* (2) (10)) addass
                (1) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (3) (* (2) (10)) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (10) (* (2) (10)) (3) addass
                ## <d 'Commutative Property'>
                  (+ (+ (10) (* (2) (10))) (3)) (+ (10) (+ (* (2) (10)) (3))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (10) (* (2) (10))) (3) (1) addass
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (* (2) (10)) addeq1i
              ## </d 'Multiply By One'>
              (+ (3) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (2) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (2)) (10)) (+ (* (1) (10)) (* (2) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Single-digit Addition'>
          1plus2
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Fibonacci Numbers'>
)

## <title> Fibonacci </title>
thm (fibonacci10 () () (= (fibonacci (10)) (+ (* (5) (10)) (5)) )
  ## <d 'Add Indices'>
    (8) df-fibRecurse
    ## <d 'Evaluate'>
      8plus2
      EqReplaceEq0Fibonacci0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      8plus1
      EqReplaceEq1Add1Fibonacci0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      fibonacci8
      (fibonacci (9)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      fibonacci9
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Fibonacci Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (* (2) (10)) (1)) (* (3) (10)) (4) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (2) (10)) (1)) (* (3) (10))) (4)) (+ (+ (* (2) (10)) (1)) (+ (* (3) (10)) (4))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (* (2) (10)) (1) (* (3) (10)) addass
                (4) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (1) (* (3) (10)) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (* (2) (10)) (* (3) (10)) (1) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (2) (10)) (* (3) (10))) (1)) (+ (* (2) (10)) (+ (* (3) (10)) (1))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (* (2) (10)) (* (3) (10))) (1) (4) addass
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Distributive Property'>
            (2) (3) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (2) (3)) (10)) (+ (* (2) (10)) (* (3) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          1plus4
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Single-digit Addition'>
          2plus3
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Fibonacci Numbers'>
)

## <title> Fibonacci </title>
thm (fibonacci11 () () (= (fibonacci (+ (10) (1))) (+ (* (8) (10)) (9)) )
  ## <d 'Add Indices'>
    (9) df-fibRecurse
    ## <d 'Evaluate'>
      9plus2
      EqReplaceEq0Fibonacci0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      9plus1
      EqReplaceEq1Add1Fibonacci0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      fibonacci9
      (fibonacci (10)) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      fibonacci10
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Fibonacci Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (* (3) (10)) (4)) (* (5) (10)) (5) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (3) (10)) (4)) (* (5) (10))) (5)) (+ (+ (* (3) (10)) (4)) (+ (* (5) (10)) (5))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (* (3) (10)) (4) (* (5) (10)) addass
                (5) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (4) (* (5) (10)) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (* (3) (10)) (* (5) (10)) (4) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (3) (10)) (* (5) (10))) (4)) (+ (* (3) (10)) (+ (* (5) (10)) (4))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (* (3) (10)) (* (5) (10))) (4) (5) addass
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Distributive Property'>
            (3) (5) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (3) (5)) (10)) (+ (* (3) (10)) (* (5) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          4plus5
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Single-digit Addition'>
          3plus5
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Fibonacci Numbers'>
)


## <title> Fibonacci </title>
thm (fibonacci12 () () (= (fibonacci (+ (10) (2))) (+ (* (10) (10)) (+ (* (4) (10)) (4)) ) )
  ## <d 'Add Indices'>
    (10) df-fibRecurse
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      fibonacci10
      (fibonacci (+ (10) (1))) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      fibonacci11
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Fibonacci Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (* (5) (10)) (5)) (* (8) (10)) (9) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (5) (10)) (5)) (* (8) (10))) (9)) (+ (+ (* (5) (10)) (5)) (+ (* (8) (10)) (9))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (* (5) (10)) (5) (* (8) (10)) addass
                (9) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (5) (* (8) (10)) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (* (5) (10)) (* (8) (10)) (5) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (5) (10)) (* (8) (10))) (5)) (+ (* (5) (10)) (+ (* (8) (10)) (5))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (* (5) (10)) (* (8) (10))) (5) (9) addass
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Distributive Property'>
            (5) (8) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (5) (8)) (10)) (+ (* (5) (10)) (* (8) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          5plus9
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (* (+ (5) (8)) (10)) (10) (4) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (+ (5) (8)) (10)) (10)) (4)) (+ (* (+ (5) (8)) (10)) (+ (10) (4))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (+ (5) (8)) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (+ (5) (8)) (1)) (10)) (+ (* (+ (5) (8)) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          ## <d 'Evaluate'>
            5plus8
            (1) addeq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Addition'>
              ## <d 'Group Common Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Change Associations'>
                    ## <d 'Associative Property'>
                      (10) (3) (1) addass
                    ## </d 'Associative Property'>
                  ## </d 'Change Associations'>
                ## </d 'Rearrange Terms'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (10) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (10)) (10) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    (+ (3) (1)) addeq1i
                  ## </d 'Multiply By One'>
                  EqReplaceEq1
                ## </d 'Multiply By One'>
              ## </d 'Group Common Digits'>
              ## <d 'Single-digit Addition'>
                3plus1
                EqReplaceEq1Add1
              ## </d 'Single-digit Addition'>
              ## <d 'Simplify'>
                ## <d 'Simplify'>
                  ## <d 'Multiplicative Identity'>
                    (10) mulidr
                  ## </d 'Multiplicative Identity'>
                  (4) addeq1i
                ## </d 'Simplify'>
                EqReplaceEq1
              ## </d 'Simplify'>
            ## </d 'Addition'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Distributive Property'>
            (10) (4) (10) distl
            (4) addeq1i
          ## </d 'Distributive Property'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (* (10) (10)) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (* (10) (10))) (* (10) (10)) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (* (4) (10)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1Add0
          ## </d 'Multiply By One'>
          ## <d 'Associative Property'>
            (* (1) (* (10) (10))) (* (4) (10)) (4) addass
            EqReplaceEq1
          ## </d 'Associative Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (* (10) (10)) mulidr
            ## </d 'Multiplicative Identity'>
            (+ (* (4) (10)) (4)) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Fibonacci Numbers'>
)

## <title> Fibonacci </title>
thm (fibonacci13 () () (= (fibonacci (+ (10) (3))) (+ (* (2) (* (10) (10))) (+ (* (3) (10)) (3)) ) )
  ## <d 'Add Indices'>
    (+ (10) (1)) df-fibRecurse
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (1) (2) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (1) (2)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          1plus2
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (3) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
      EqReplaceEq0Fibonacci0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (1) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (1) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (2) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
      EqReplaceEq1Add1Fibonacci0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      fibonacci11
      (fibonacci (+ (10) (2))) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      fibonacci12
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Fibonacci Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (* (8) (10)) (9)) (* (10) (10)) (+ (* (4) (10)) (4)) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (8) (10)) (9)) (* (10) (10))) (+ (* (4) (10)) (4))) (+ (+ (* (8) (10)) (9)) (+ (* (10) (10)) (+ (* (4) (10)) (4)))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (+ (+ (* (8) (10)) (9)) (* (10) (10))) (* (4) (10)) (4) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (+ (* (8) (10)) (9)) (* (10) (10))) (* (4) (10))) (4)) (+ (+ (+ (* (8) (10)) (9)) (* (10) (10))) (+ (* (4) (10)) (4))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (* (8) (10)) (9) (* (10) (10)) addass
                (* (4) (10)) addeq1i
                (4) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (9) (* (10) (10)) addcom
                EqReplaceEq1Add0Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (* (8) (10)) (* (10) (10)) (9) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (8) (10)) (* (10) (10))) (9)) (+ (* (8) (10)) (+ (* (10) (10)) (9))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0Add0
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (+ (* (8) (10)) (* (10) (10))) (9) (* (4) (10)) addass
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (9) (* (4) (10)) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (+ (* (8) (10)) (* (10) (10))) (* (4) (10)) (9) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (8) (10)) (* (10) (10))) (* (4) (10))) (9)) (+ (+ (* (8) (10)) (* (10) (10))) (+ (* (4) (10)) (9))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (* (8) (10)) (* (10) (10)) addcom
                EqReplaceEq1Add0Add0Add0
              ## </d 'Commutative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (+ (* (10) (10)) (* (8) (10))) (* (4) (10))) (9) (4) addass
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (* (10) (10)) (* (8) (10)) (* (4) (10)) addass
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (* (10) (10)) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (* (10) (10))) (* (10) (10)) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (+ (* (8) (10)) (* (4) (10))) addeq1i
              ## </d 'Multiply By One'>
              (+ (9) (4)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (8) (4) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (8) (4)) (10)) (+ (* (8) (10)) (* (4) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0Add1
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          9plus4
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Associative Property'>
            (+ (* (1) (* (10) (10))) (* (+ (8) (4)) (10))) (10) (3) addass
            ## <d 'Commutative Property'>
              (+ (+ (+ (* (1) (* (10) (10))) (* (+ (8) (4)) (10))) (10)) (3)) (+ (+ (* (1) (* (10) (10))) (* (+ (8) (4)) (10))) (+ (10) (3))) eqcom
              mpbi
            ## </d 'Commutative Property'>
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Associative Property'>
            (* (1) (* (10) (10))) (* (+ (8) (4)) (10)) (* (1) (10)) addass
            EqReplaceEq1Add0
          ## </d 'Associative Property'>
          ## <d 'Distributive Property'>
            (+ (8) (4)) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (+ (8) (4)) (1)) (10)) (+ (* (+ (8) (4)) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0Add1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          ## <d 'Evaluate'>
            8plus4
            (1) addeq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            ## <d 'Addition'>
              ## <d 'Group Common Digits'>
                ## <d 'Rearrange Terms'>
                  ## <d 'Change Associations'>
                    ## <d 'Associative Property'>
                      (10) (2) (1) addass
                    ## </d 'Associative Property'>
                  ## </d 'Change Associations'>
                ## </d 'Rearrange Terms'>
                ## <d 'Multiply By One'>
                  ## <d 'Multiply By One'>
                    ## <d 'Evaluate'>
                      ## <d 'Evaluate'>
                        (10) mulidr
                      ## </d 'Evaluate'>
                      ## <d 'Commutative Property'>
                        (* (1) (10)) (10) eqcom
                        mpbi
                      ## </d 'Commutative Property'>
                    ## </d 'Evaluate'>
                    (+ (2) (1)) addeq1i
                  ## </d 'Multiply By One'>
                  EqReplaceEq1
                ## </d 'Multiply By One'>
              ## </d 'Group Common Digits'>
              ## <d 'Single-digit Addition'>
                2plus1
                EqReplaceEq1Add1
              ## </d 'Single-digit Addition'>
              ## <d 'Simplify'>
                ## <d 'Simplify'>
                  ## <d 'Multiplicative Identity'>
                    (10) mulidr
                  ## </d 'Multiplicative Identity'>
                  (3) addeq1i
                ## </d 'Simplify'>
                EqReplaceEq1
              ## </d 'Simplify'>
            ## </d 'Addition'>
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add0Add1Mul0
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Distributive Property'>
            (10) (3) (10) distl
            (* (1) (* (10) (10))) addeq2i
          ## </d 'Distributive Property'>
          ## <d 'Associative Property'>
            (* (1) (* (10) (10))) (* (10) (10)) (* (3) (10)) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (1) (* (10) (10))) (* (10) (10))) (* (3) (10))) (+ (* (1) (* (10) (10))) (+ (* (10) (10)) (* (3) (10)))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (* (10) (10)) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (* (10) (10))) (* (10) (10)) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (1) (* (10) (10)) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (1)) (* (10) (10))) (+ (* (1) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1Add0
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          1plus1
          EqReplaceEq1Add0Add0Mul0
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Associative Property'>
            (* (2) (* (10) (10))) (* (3) (10)) (3) addass
          ## </d 'Associative Property'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Fibonacci Numbers'>
)

## <title> Fibonacci </title>
thm (fibonacci14 () () (= (fibonacci (+ (10) (4))) (+ (* (3) (* (10) (10))) (+ (* (7) (10)) (7)) ) )
  ## <d 'Add Indices'>
    (+ (10) (2)) df-fibRecurse
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (2) (2) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (2) (2)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          2plus2
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (4) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
      EqReplaceEq0Fibonacci0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (2) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (2) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          2plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (3) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
      EqReplaceEq1Add1Fibonacci0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      fibonacci12
      (fibonacci (+ (10) (3))) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      fibonacci13
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Fibonacci Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (* (10) (10)) (+ (* (4) (10)) (4))) (* (2) (* (10) (10))) (+ (* (3) (10)) (3)) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (10) (10)) (+ (* (4) (10)) (4))) (* (2) (* (10) (10)))) (+ (* (3) (10)) (3))) (+ (+ (* (10) (10)) (+ (* (4) (10)) (4))) (+ (* (2) (* (10) (10))) (+ (* (3) (10)) (3)))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (+ (+ (* (10) (10)) (+ (* (4) (10)) (4))) (* (2) (* (10) (10)))) (* (3) (10)) (3) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (+ (* (10) (10)) (+ (* (4) (10)) (4))) (* (2) (* (10) (10)))) (* (3) (10))) (3)) (+ (+ (+ (* (10) (10)) (+ (* (4) (10)) (4))) (* (2) (* (10) (10)))) (+ (* (3) (10)) (3))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (* (10) (10)) (* (4) (10)) (4) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (10) (10)) (* (4) (10))) (4)) (+ (* (10) (10)) (+ (* (4) (10)) (4))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0Add0Add0
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (+ (* (10) (10)) (* (4) (10))) (4) (* (2) (* (10) (10))) addass
                (* (3) (10)) addeq1i
                (3) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (4) (* (2) (* (10) (10))) addcom
                EqReplaceEq1Add0Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (+ (* (10) (10)) (* (4) (10))) (* (2) (* (10) (10))) (4) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (10) (10)) (* (4) (10))) (* (2) (* (10) (10)))) (4)) (+ (+ (* (10) (10)) (* (4) (10))) (+ (* (2) (* (10) (10))) (4))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0Add0
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (+ (+ (* (10) (10)) (* (4) (10))) (* (2) (* (10) (10)))) (4) (* (3) (10)) addass
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (4) (* (3) (10)) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (+ (+ (* (10) (10)) (* (4) (10))) (* (2) (* (10) (10)))) (* (3) (10)) (4) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (+ (* (10) (10)) (* (4) (10))) (* (2) (* (10) (10)))) (* (3) (10))) (4)) (+ (+ (+ (* (10) (10)) (* (4) (10))) (* (2) (* (10) (10)))) (+ (* (3) (10)) (4))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (* (10) (10)) (* (4) (10)) (* (2) (* (10) (10))) addass
                EqReplaceEq1Add0Add0Add0
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (* (4) (10)) (* (2) (* (10) (10))) addcom
                EqReplaceEq1Add0Add0Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (* (10) (10)) (* (2) (* (10) (10))) (* (4) (10)) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (10) (10)) (* (2) (* (10) (10)))) (* (4) (10))) (+ (* (10) (10)) (+ (* (2) (* (10) (10))) (* (4) (10)))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0Add0Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (+ (+ (* (10) (10)) (* (2) (* (10) (10)))) (* (4) (10))) (* (3) (10))) (4) (3) addass
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (+ (* (10) (10)) (* (2) (* (10) (10)))) (* (4) (10)) (* (3) (10)) addass
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Multiply By One'>
                  ## <d 'Evaluate'>
                    ## <d 'Evaluate'>
                      (* (10) (10)) mulidr
                    ## </d 'Evaluate'>
                    ## <d 'Commutative Property'>
                      (* (1) (* (10) (10))) (* (10) (10)) eqcom
                      mpbi
                    ## </d 'Commutative Property'>
                  ## </d 'Evaluate'>
                  (* (2) (* (10) (10))) addeq1i
                ## </d 'Multiply By One'>
                (+ (* (4) (10)) (* (3) (10))) addeq1i
              ## </d 'Multiply By One'>
              (+ (4) (3)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (1) (2) (* (10) (10)) distl
            ## <d 'Commutative Property'>
              (* (+ (1) (2)) (* (10) (10))) (+ (* (1) (* (10) (10))) (* (2) (* (10) (10)))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0Add0
          ## </d 'Distributive Property'>
          ## <d 'Distributive Property'>
            (4) (3) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (4) (3)) (10)) (+ (* (4) (10)) (* (3) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0Add1
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          4plus3
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Single-digit Addition'>
          4plus3
          EqReplaceEq1Add0Add1Mul0
        ## </d 'Single-digit Addition'>
        ## <d 'Single-digit Addition'>
          1plus2
          EqReplaceEq1Add0Add0Mul0
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Associative Property'>
            (* (3) (* (10) (10))) (* (7) (10)) (7) addass
          ## </d 'Associative Property'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Fibonacci Numbers'>
)



## <title> Fibonacci </title>
thm (fibonacci15 () () (= (fibonacci (+ (10) (5))) (+ (* (6) (* (10) (10))) (10)) )
  ## <d 'Add Indices'>
    (+ (10) (3)) df-fibRecurse
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (3) (2) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (3) (2)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus2
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (5) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
      EqReplaceEq0Fibonacci0
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (3) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (3) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (4) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
      EqReplaceEq1Add1Fibonacci0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      fibonacci13
      (fibonacci (+ (10) (4))) addeq1i
    ## </d 'Evaluate'>
    ## <d 'Evaluate'>
      fibonacci14
      EqReplaceEq1Add1
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Fibonacci Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Associate All Left'>
              ## <d 'Associative Property'>
                (+ (* (2) (* (10) (10))) (+ (* (3) (10)) (3))) (* (3) (* (10) (10))) (+ (* (7) (10)) (7)) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (2) (* (10) (10))) (+ (* (3) (10)) (3))) (* (3) (* (10) (10)))) (+ (* (7) (10)) (7))) (+ (+ (* (2) (* (10) (10))) (+ (* (3) (10)) (3))) (+ (* (3) (* (10) (10))) (+ (* (7) (10)) (7)))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (+ (+ (* (2) (* (10) (10))) (+ (* (3) (10)) (3))) (* (3) (* (10) (10)))) (* (7) (10)) (7) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (+ (* (2) (* (10) (10))) (+ (* (3) (10)) (3))) (* (3) (* (10) (10)))) (* (7) (10))) (7)) (+ (+ (+ (* (2) (* (10) (10))) (+ (* (3) (10)) (3))) (* (3) (* (10) (10)))) (+ (* (7) (10)) (7))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (* (2) (* (10) (10))) (* (3) (10)) (3) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (3)) (+ (* (2) (* (10) (10))) (+ (* (3) (10)) (3))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0Add0Add0
              ## </d 'Associative Property'>
            ## </d 'Associate All Left'>
            ## <d 'Reorder Terms'>
              ## <d 'Associative Property'>
                (+ (* (2) (* (10) (10))) (* (3) (10))) (3) (* (3) (* (10) (10))) addass
                (* (7) (10)) addeq1i
                (7) addeq1i
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (3) (* (3) (* (10) (10))) addcom
                EqReplaceEq1Add0Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (+ (* (2) (* (10) (10))) (* (3) (10))) (* (3) (* (10) (10))) (3) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (* (3) (* (10) (10)))) (3)) (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (+ (* (3) (* (10) (10))) (3))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0Add0
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (* (3) (* (10) (10)))) (3) (* (7) (10)) addass
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (3) (* (7) (10)) addcom
                EqReplaceEq1Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (* (3) (* (10) (10)))) (* (7) (10)) (3) addass
                ## <d 'Commutative Property'>
                  (+ (+ (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (* (3) (* (10) (10)))) (* (7) (10))) (3)) (+ (+ (+ (* (2) (* (10) (10))) (* (3) (10))) (* (3) (* (10) (10)))) (+ (* (7) (10)) (3))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (* (2) (* (10) (10))) (* (3) (10)) (* (3) (* (10) (10))) addass
                EqReplaceEq1Add0Add0Add0
              ## </d 'Associative Property'>
              ## <d 'Commutative Property'>
                (* (3) (10)) (* (3) (* (10) (10))) addcom
                EqReplaceEq1Add0Add0Add0Add1
              ## </d 'Commutative Property'>
              ## <d 'Associative Property'>
                (* (2) (* (10) (10))) (* (3) (* (10) (10))) (* (3) (10)) addass
                ## <d 'Commutative Property'>
                  (+ (+ (* (2) (* (10) (10))) (* (3) (* (10) (10)))) (* (3) (10))) (+ (* (2) (* (10) (10))) (+ (* (3) (* (10) (10))) (* (3) (10)))) eqcom
                  mpbi
                ## </d 'Commutative Property'>
                EqReplaceEq1Add0Add0Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Reorder Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (+ (+ (+ (* (2) (* (10) (10))) (* (3) (* (10) (10)))) (* (3) (10))) (* (7) (10))) (3) (7) addass
              ## </d 'Associative Property'>
              ## <d 'Associative Property'>
                (+ (* (2) (* (10) (10))) (* (3) (* (10) (10)))) (* (3) (10)) (* (7) (10)) addass
                EqReplaceEq1Add0
              ## </d 'Associative Property'>
              EqReplaceEq1
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Distributive Property'>
            (2) (3) (* (10) (10)) distl
            ## <d 'Commutative Property'>
              (* (+ (2) (3)) (* (10) (10))) (+ (* (2) (* (10) (10))) (* (3) (* (10) (10)))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0Add0
          ## </d 'Distributive Property'>
          ## <d 'Distributive Property'>
            (3) (7) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (3) (7)) (10)) (+ (* (3) (10)) (* (7) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0Add1
          ## </d 'Distributive Property'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          3plus7
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (10) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (10)) (10) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            (+ (* (+ (2) (3)) (* (10) (10))) (* (+ (3) (7)) (10))) addeq2i
          ## </d 'Multiply By One'>
          ## <d 'Associative Property'>
            (* (+ (2) (3)) (* (10) (10))) (* (+ (3) (7)) (10)) (* (1) (10)) addass
            EqReplaceEq1
          ## </d 'Associative Property'>
          ## <d 'Distributive Property'>
            (+ (3) (7)) (1) (10) distl
            ## <d 'Commutative Property'>
              (* (+ (+ (3) (7)) (1)) (10)) (+ (* (+ (3) (7)) (10)) (* (1) (10))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add1
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          ## <d 'Evaluate'>
            3plus7
            (1) addeq1i
          ## </d 'Evaluate'>
          EqReplaceEq1Add1Mul0
        ## </d 'Single-digit Addition'>
        ## <d 'Carry the One'>
          ## <d 'Distributive Property'>
            (10) (1) (10) distl
            (* (+ (2) (3)) (* (10) (10))) addeq2i
          ## </d 'Distributive Property'>
          ## <d 'Associative Property'>
            (* (+ (2) (3)) (* (10) (10))) (* (10) (10)) (* (1) (10)) addass
            ## <d 'Commutative Property'>
              (+ (+ (* (+ (2) (3)) (* (10) (10))) (* (10) (10))) (* (1) (10))) (+ (* (+ (2) (3)) (* (10) (10))) (+ (* (10) (10)) (* (1) (10)))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1
          ## </d 'Associative Property'>
          ## <d 'Multiply By One'>
            ## <d 'Evaluate'>
              ## <d 'Evaluate'>
                (* (10) (10)) mulidr
              ## </d 'Evaluate'>
              ## <d 'Commutative Property'>
                (* (1) (* (10) (10))) (* (10) (10)) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Evaluate'>
            EqReplaceEq1Add0Add1
          ## </d 'Multiply By One'>
          ## <d 'Distributive Property'>
            (+ (2) (3)) (1) (* (10) (10)) distl
            ## <d 'Commutative Property'>
              (* (+ (+ (2) (3)) (1)) (* (10) (10))) (+ (* (+ (2) (3)) (* (10) (10))) (* (1) (* (10) (10)))) eqcom
              mpbi
            ## </d 'Commutative Property'>
            EqReplaceEq1Add0
          ## </d 'Distributive Property'>
          EqReplaceEq1
        ## </d 'Carry the One'>
        ## <d 'Single-digit Addition'>
          ## <d 'Evaluate'>
            2plus3
            (1) addeq1i
          ## </d 'Evaluate'>
          ## <d 'Evaluate'>
            5plus1
            EqReplaceEq1
          ## </d 'Evaluate'>
          EqReplaceEq1Add0Mul0
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (* (6) (* (10) (10))) addeq2i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Fibonacci Numbers'>
)



## <title> Substitution </title>
## <table>
##   (= (tri  [ A ]   ]   ] ) C)
##   (=       [ A ]   [ B ] )
##   (= (tri  [   [   [ B ] ) C)
## </table>
thm (EqReplaceEq0Tri0 () (
     replacee (= (tri A) C)
     substitution (= A B)) 
     (= (tri B) C)
  replacee substitution
  trieqi
  EqReplaceEq0
)

## <title> Triangle </title>
thm (triangle1 () () (= (tri (1)) (1))
  ## <d 'Add Indices'>
    (0) trianglePlus1r
    ## <d 'Evaluate'>
      (1) pa_ax3r
      EqReplaceEq0Tri0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      triangle0
      (0) addeq1i
      (1) addeq1i
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        (0) pa_ax3r
        (1) addeq1i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        (1) pa_ax3r
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Numbers'>
)


## <title> Triangle </title>
thm (triangle2 () () (= (tri (2)) (3))
  ## <d 'Add Indices'>
    (1) trianglePlus1r
    ## <d 'Evaluate'>
      1plus1
      EqReplaceEq0Tri0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      triangle1
      (1) addeq1i
      (1) addeq1i
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        1plus1
        (1) addeq1i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        2plus1
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Numbers'>
)


## <title> Triangle </title>
thm (triangle3 () () (= (tri (3)) (6))
  ## <d 'Add Indices'>
    (2) trianglePlus1r
    ## <d 'Evaluate'>
      2plus1
      EqReplaceEq0Tri0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      triangle2
      (2) addeq1i
      (1) addeq1i
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        3plus2
        (1) addeq1i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        5plus1
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Numbers'>
)


## <title> Triangle </title>
thm (triangle4 () () (= (tri (4)) (10))
  ## <d 'Add Indices'>
    (3) trianglePlus1r
    ## <d 'Evaluate'>
      3plus1
      EqReplaceEq0Tri0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      triangle3
      (3) addeq1i
      (1) addeq1i
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        6plus3
        (1) addeq1i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        9plus1
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Numbers'>
)



## <title> Triangle </title>
thm (triangle5 () () (= (tri (5)) (+ (10) (5)) )
  ## <d 'Add Indices'>
    (4) trianglePlus1r
    ## <d 'Evaluate'>
      4plus1
      EqReplaceEq0Tri0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      triangle4
      (4) addeq1i
      (1) addeq1i
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Addition'>
        ## <d 'Group Common Digits'>
          ## <d 'Rearrange Terms'>
            ## <d 'Change Associations'>
              ## <d 'Associative Property'>
                (10) (4) (1) addass
              ## </d 'Associative Property'>
            ## </d 'Change Associations'>
          ## </d 'Rearrange Terms'>
          ## <d 'Multiply By One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (+ (4) (1)) addeq1i
            ## </d 'Multiply By One'>
            EqReplaceEq1
          ## </d 'Multiply By One'>
        ## </d 'Group Common Digits'>
        ## <d 'Single-digit Addition'>
          4plus1
          EqReplaceEq1Add1
        ## </d 'Single-digit Addition'>
        ## <d 'Simplify'>
          ## <d 'Simplify'>
            ## <d 'Multiplicative Identity'>
              (10) mulidr
            ## </d 'Multiplicative Identity'>
            (5) addeq1i
          ## </d 'Simplify'>
          EqReplaceEq1
        ## </d 'Simplify'>
      ## </d 'Addition'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Numbers'>
)

## <title> Triangle </title>
thm (triangle6 () () (= (tri (6)) (+ (* (2) (10)) (1)) )
  ## <d 'Add Indices'>
    (5) trianglePlus1r
    ## <d 'Evaluate'>
      5plus1
      EqReplaceEq0Tri0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      triangle5
      (5) addeq1i
      (1) addeq1i
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (10) (5) (5) addass
                ## </d 'Associative Property'>
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
            ## <d 'Multiply By One'>
              ## <d 'Multiply By One'>
                ## <d 'Evaluate'>
                  ## <d 'Evaluate'>
                    (10) mulidr
                  ## </d 'Evaluate'>
                  ## <d 'Commutative Property'>
                    (* (1) (10)) (10) eqcom
                    mpbi
                  ## </d 'Commutative Property'>
                ## </d 'Evaluate'>
                (+ (5) (5)) addeq1i
              ## </d 'Multiply By One'>
              EqReplaceEq1
            ## </d 'Multiply By One'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            5plus5
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
          ## <d 'Carry the One'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              (* (1) (10)) addeq2i
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (1) (1) (10) distl
              ## <d 'Commutative Property'>
                (* (+ (1) (1)) (10)) (+ (* (1) (10)) (* (1) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1
            ## </d 'Distributive Property'>
            EqReplaceEq1
          ## </d 'Carry the One'>
          ## <d 'Single-digit Addition'>
            1plus1
            EqReplaceEq1Mul0
          ## </d 'Single-digit Addition'>
        ## </d 'Addition'>
        (1) addeq1i
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Numbers'>
)

## <title> Triangle </title>
thm (triangle7 () () (= (tri (7)) (+ (* (2) (10)) (8)) )
  ## <d 'Add Indices'>
    (6) trianglePlus1r
    ## <d 'Evaluate'>
      6plus1
      EqReplaceEq0Tri0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      triangle6
      (6) addeq1i
      (1) addeq1i
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (* (2) (10)) (1) (6) addass
                ## </d 'Associative Property'>
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            1plus6
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
        ## </d 'Addition'>
        (1) addeq1i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (* (2) (10)) (7) (1) addass
                ## </d 'Associative Property'>
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            7plus1
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Numbers'>
)


## <title> Triangle </title>
thm (triangle8 () () (= (tri (8)) (+ (* (3) (10)) (6)) )
  ## <d 'Add Indices'>
    (7) trianglePlus1r
    ## <d 'Evaluate'>
      7plus1
      EqReplaceEq0Tri0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      triangle7
      (7) addeq1i
      (1) addeq1i
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (* (2) (10)) (8) (7) addass
                ## </d 'Associative Property'>
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            8plus7
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
          ## <d 'Carry the One'>
            ## <d 'Associative Property'>
              (* (2) (10)) (10) (5) addass
              ## <d 'Commutative Property'>
                (+ (+ (* (2) (10)) (10)) (5)) (+ (* (2) (10)) (+ (10) (5))) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Associative Property'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              EqReplaceEq1Add0Add1
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (2) (1) (10) distl
              ## <d 'Commutative Property'>
                (* (+ (2) (1)) (10)) (+ (* (2) (10)) (* (1) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0
            ## </d 'Distributive Property'>
            EqReplaceEq1
          ## </d 'Carry the One'>
          ## <d 'Single-digit Addition'>
            2plus1
            EqReplaceEq1Add0Mul0
          ## </d 'Single-digit Addition'>
        ## </d 'Addition'>
        (1) addeq1i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (* (3) (10)) (5) (1) addass
                ## </d 'Associative Property'>
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            5plus1
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Numbers'>
)


## <title> Triangle </title>
thm (triangle9 () () (= (tri (9)) (+ (* (4) (10)) (5)) )
  ## <d 'Add Indices'>
    (8) trianglePlus1r
    ## <d 'Evaluate'>
      8plus1
      EqReplaceEq0Tri0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      triangle8
      (8) addeq1i
      (1) addeq1i
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (* (3) (10)) (6) (8) addass
                ## </d 'Associative Property'>
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            6plus8
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
          ## <d 'Carry the One'>
            ## <d 'Associative Property'>
              (* (3) (10)) (10) (4) addass
              ## <d 'Commutative Property'>
                (+ (+ (* (3) (10)) (10)) (4)) (+ (* (3) (10)) (+ (10) (4))) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Associative Property'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              EqReplaceEq1Add0Add1
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (3) (1) (10) distl
              ## <d 'Commutative Property'>
                (* (+ (3) (1)) (10)) (+ (* (3) (10)) (* (1) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0
            ## </d 'Distributive Property'>
            EqReplaceEq1
          ## </d 'Carry the One'>
          ## <d 'Single-digit Addition'>
            3plus1
            EqReplaceEq1Add0Mul0
          ## </d 'Single-digit Addition'>
        ## </d 'Addition'>
        (1) addeq1i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (* (4) (10)) (4) (1) addass
                ## </d 'Associative Property'>
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            4plus1
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Numbers'>
)


## <title> Triangle </title>
thm (triangle10 () () (= (tri (10)) (+ (* (5) (10)) (5)) )
  ## <d 'Add Indices'>
    (9) trianglePlus1r
    ## <d 'Evaluate'>
      9plus1
      EqReplaceEq0Tri0
    ## </d 'Evaluate'>
  ## </d 'Add Indices'>
  ## <d 'Insert Previous Numbers'>
    ## <d 'Evaluate'>
      triangle9
      (9) addeq1i
      (1) addeq1i
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Insert Previous Numbers'>
  ## <d 'Sum Numbers'>
    ## <d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (* (4) (10)) (5) (9) addass
                ## </d 'Associative Property'>
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            5plus9
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
          ## <d 'Carry the One'>
            ## <d 'Associative Property'>
              (* (4) (10)) (10) (4) addass
              ## <d 'Commutative Property'>
                (+ (+ (* (4) (10)) (10)) (4)) (+ (* (4) (10)) (+ (10) (4))) eqcom
                mpbi
              ## </d 'Commutative Property'>
            ## </d 'Associative Property'>
            ## <d 'Multiply By One'>
              ## <d 'Evaluate'>
                ## <d 'Evaluate'>
                  (10) mulidr
                ## </d 'Evaluate'>
                ## <d 'Commutative Property'>
                  (* (1) (10)) (10) eqcom
                  mpbi
                ## </d 'Commutative Property'>
              ## </d 'Evaluate'>
              EqReplaceEq1Add0Add1
            ## </d 'Multiply By One'>
            ## <d 'Distributive Property'>
              (4) (1) (10) distl
              ## <d 'Commutative Property'>
                (* (+ (4) (1)) (10)) (+ (* (4) (10)) (* (1) (10))) eqcom
                mpbi
              ## </d 'Commutative Property'>
              EqReplaceEq1Add0
            ## </d 'Distributive Property'>
            EqReplaceEq1
          ## </d 'Carry the One'>
          ## <d 'Single-digit Addition'>
            4plus1
            EqReplaceEq1Add0Mul0
          ## </d 'Single-digit Addition'>
        ## </d 'Addition'>
        (1) addeq1i
      ## </d 'Evaluate'>
      ## <d 'Evaluate'>
        ## <d 'Addition'>
          ## <d 'Group Common Digits'>
            ## <d 'Rearrange Terms'>
              ## <d 'Change Associations'>
                ## <d 'Associative Property'>
                  (* (5) (10)) (4) (1) addass
                ## </d 'Associative Property'>
              ## </d 'Change Associations'>
            ## </d 'Rearrange Terms'>
          ## </d 'Group Common Digits'>
          ## <d 'Single-digit Addition'>
            4plus1
            EqReplaceEq1Add1
          ## </d 'Single-digit Addition'>
        ## </d 'Addition'>
        EqReplaceEq1
      ## </d 'Evaluate'>
    ## </d 'Evaluate'>
    EqReplaceEq1
  ## </d 'Sum Numbers'>
)

## <summary>
##   This gives an example of the variable A being substituted into an expression
##   in place of the variable x. Substitutions can be performed automatically using
##   the evaluate button.
## </summary>
thm (substitutionExample ((A x)) () (<-> ([/] A x (< (* (2) x) (exp (+ x y) (3)))) (< (* (2) A) (exp (+ A y) (3))))  
  (= x A) id
  (2) muleq2d
  (= x A) id
  y addeq1d
  (3) expeq1d
  lteq12d
  sbcie
)

## <summary> This is used just for convenience to get an empty theorem. </summary>
thm (emptyThm() () (T)
 tru
)
