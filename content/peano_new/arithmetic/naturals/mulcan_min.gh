import (PROP               /peano_new/prop.ghi () "")
import (PREDICATE          /peano_new/predicate/all.ghi (PROP) "")
import (ADD_MULTIPLY_MIN   /peano_new/arithmetic/common/add_multiply_min.ghi (PROP PREDICATE) "")
import (ADD_MULTIPLY       /peano_new/arithmetic/common/add_multiply.ghi (PROP PREDICATE ADD_MULTIPLY_MIN) "")
import (INEQUALITY_MIN     /peano_new/arithmetic/common/inequality_min.ghi (PROP PREDICATE ADD_MULTIPLY_MIN) "")
import (INEQUALITY_NAT_MIN /peano_new/arithmetic/naturals/inequality_nat_min.ghi (PROP PREDICATE ADD_MULTIPLY_MIN INEQUALITY_MIN) "")

tvar (wff ph ps ch th ta)
tvar (nat A B C D)
var (nat v w x y z)


## <context>
##   This theorem is part of a series of theorems demonstrating that it is possible
##   to cancel an nonzero number from both sides of an equation. It is assumed that
##   every number in this theorem is a natural number.
## </context>

## <title> Substitution </title>
## <table>
##   (-> ph (E. x  [ ps ]   ]    ] ))
##   (<->          [ ps ]   [ ch ] )
##   (-> ph (E. x  [    [   [ ch ] ))
## </table>
thm (BiReplaceImp1Ex1 () (
     replacee (-> ph (E. x ps))
     substitution (<-> ps ch)) 
     (-> ph (E. x ch))
  replacee substitution
  x exbii
  sylib
)

## <summary> Multiplication cancellation with nonzero multiplicand </summary>
thm (sucmulcan () () (<-> (= (* A (+ C (1))) (* B (+ C (1)))) (= A B))
  (* A (+ C (1))) (* B (+ C (1))) lesym
    A C B lemul5
      B C A lemul5
    anbi12i
  bitri
    A B lesym
  bitr4i
)


## <title> Substitution </title>
## <table>
##   (-> ph (E. x (=  [ A ]   ]   ]  C)))
##   (=               [ A ]   [ B ] )
##   (-> ph (E. x (=  [   [   [ B ]  C)))
## </table>
thm (EqReplaceImp1Ex1Eq0 () (
     replacee (-> ph (E. x (= A C)))
     substitution (= A B)) 
     (-> ph (E. x (= B C)))
  replacee substitution
  C eqeq1i
  BiReplaceImp1Ex1
)

## <title> Cancel Multiplication </title>
thm (mulcan () () (-> (-. (= C (0))) (<-> (= (* A C) (* B C)) (= A B)))
  C x lefoo ori (1) x addcom EqReplaceImp1Ex1Eq0
    (+ x (1)) C A muleq2 (+ x (1)) C B muleq2 eqeq12d
    A x B sucmulcan syl5rbbr x 19.23ai
  syl
)

export (MULCAN_MIN ../common/mulcan_min.ghi (PROP PREDICATE ADD_MULTIPLY_MIN) "")
