== Biconditional ↔ ==

The biconditional is a basic operation in [/wiki/peano/logic | propositional logic]. The statment φ ↔ ψ
means that φ is true if and only if ψ is true. It means that φ implies ψ and that ψ implies φ.


=== Truth Table ===

* #(<-> (<-> (T) (T)) (T)) /edit/peano_new/prop.gh/biTT#
* #(<-> (<-> (T) (F)) (F)) /edit/peano_new/prop.gh/biTF#
* #(<-> (<-> (F) (T)) (F)) /edit/peano_new/prop.gh/biFT#
* #(<-> (<-> (F) (F)) (T)) /edit/peano_new/prop.gh/biFF#


=== Definition ===

The biconditional is the first operation in Ghilbert to be defined. The conditional → and negation ¬ are included
in the axioms, but the biconditional is not. The initial [/edit/peano/prop.gh/def-bi | definition of the biconditional]
is quite complicated and difficult to follow. This is because the definition cannot use the biconditional or any
operator other than → and ¬. From this definition, we can derive simpler expressions that define the bicondition 
(see [/edit/peano/prop.gh/dfbi1 | dfbi1], [/edit/peano/prop.gh/dfbi3 | dfbi3], and [/edit/peano/prop.gh/dfbi | dfbi]).
Once conjunction is introduced this definition can be rewritten in a simple form as #(<-> (<-> ph ps) (/\ (-> ph ps) (-> ps ph))) /edit/peano/prop.gh/dfbi2#.

=== Properties ===

* Commutation: #(<-> (<-> ph ps) (<-> ps ph)) /edit/peano_new/prop.gh/bicom#
* Association: #(<-> (<-> (<-> ph ps) ch) (<-> ph (<-> ps ch))) /edit/peano_new/prop.gh/biass#
* [/edit/peano_new/prop.gh/bitr | Transitive ]
* Reflexive: #(<-> ph ph) /edit/peano_new/prop.gh/biid#

[/wiki/peano/logic | Propositional Logic]