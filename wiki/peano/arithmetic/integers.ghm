== Construction of the Integers ==

The integers can be constructed from the natural numbers using natural arithmetic
operations. An integer is constructed using an [/wiki/peano/tuple/ordered-pair | ordered pair]
of natural numbers. The first number ([/wiki/peano/tuple/head | the head]) in the pair
represents the positive part of the integer.  The second number
([/wiki/peano/tuple/tail | the tail]) in the pair represents the negative part of the integer.

Two integers A and B are equal if subtracting the negative part from the positive part results
in the same number Ah - At = Bh - Bt, but we cannot rely on subtraction here because
subtraction is only defined after the integers have been constructed. But we can use the following
equivalent equation [/edit/peano/integers.gh/df-zeq | Ah + Bh = Bh + At ] to define integer
equality.

The additive inverse is found by reversing the
[/edit/peano/integers.gh/df-neg | order of the negative and positive parts]. For example,
the integer 2 is represented by (2,0). Its additive inverse, the integer -2 is represented by (0,2).

Multiple ordered pairs correspond to the same integer. The integer 0 can be represented as 0 = (0,0)
or 0 = (1,1) or 0 = (2,2), [/edit/peano/integers.gh/zequivalence0 | etc]. Each integer represents a
class of [/edit/peano/integers.gh/zequivalence | equivalent ordered pairs].

The difficult part of constructing the integers is to shown that the arithmetic operations are
properly defined over these equivalence classes. Integer addition is defined by adding the
positive and negative parts [/edit/peano/integers.gh/df-zadd | A + B = (Ah + Bh, At + Bt)]. Integer 
multiplication is defined by the formula
[/edit/peano/integers.gh/df-zmul | A ∙ B = (Ah ∙ Bh + At ∙ Bt, Ah ∙ Bt + At ∙ Bh)]. We can prove all
the important properties of addition and multiplication with the equivalence classes:

* Commutivity:   [/edit/peano/integers.gh/zaddcom | add] [/edit/peano/integers.gh/zmulcom | multiply]
* Associativity: [/edit/peano/integers.gh/zaddass | add] [/edit/peano/integers.gh/zmulass | multiply]
* Identities:    [/edit/peano/integers.gh/zaddid | add] [/edit/peano/integers.gh/zmulid | multiply]
* [/edit/peano/integers.gh/zaddcan | Additive Inverse]
* [/edit/peano/integers.gh/zdistr | Distributive Property]

[/wiki/peano/arithmetic | Arithmetic Overview]