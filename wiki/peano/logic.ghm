== Propositional logic ==

Propositional logic is concerned with true and false statements and rules of inference. Propositional logic serves
as a foundation for high-level mathematics. The logic operators work on [edit/peano/peano_thms.gh/df-tru | true] or
[edit/peano/peano_thms.gh/df-fal | false] statements, also call well-formed formulas ([/wiki/peano/logic/wff | wffs]). The basic logic
operations are 

* [/wiki/peano/logic/not | Negation], NOT, ¬
* [/wiki/peano/logic/if | Conditional], IF, →
* [/wiki/peano/logic/iff | Biconditional], IFF, ↔
* [/wiki/peano/logic/and | Conjunction], AND, ∧
* [/wiki/peano/logic/or | Disjunction], OR, ∨

== Axioms ==

Propositional logic is based upon three axioms and the rule of Modus Ponens:

* [/edit/peano/prop_min.ghi/ax-1 | Axiom 1: Simplification]
* [/edit/peano/prop_min.ghi/ax-2 | Axiom 2: Frege]
* [/edit/peano/prop_min.ghi/ax-3 | Axiom 3: Contraposition]
* [/edit/peano/prop_min.ghi/ax-mp | Rule of Modus Ponens]

Propositional calculus was first formalized by 
[http://en.wikipedia.org/wiki/Gottlob_Frege | Frege] in 1879,
using as his axioms [/edit/peano/prop_min.ghi/ax-1 | Axiom 1],
[/edit/peano/prop_min.ghi/ax-2 | Axiom 2], [/edit/peano/prop_min.ghi/ax-mp | Modus Ponens],
[/edit/peano/prop.gh/pm2.04 | pm2.04], [/edit/peano/prop.gh/con3 | con3], and
the double negative theorems [/edit/peano/prop.gh/notnot2 | notnot2] and
[/edit/peano/prop.gh/notnot1 | notnot1]. Around 1930,
[http://en.wikipedia.org/wiki/Jan_%C5%81ukasiewicz | Lukasiewicz] simplified
the system by eliminating [/edit/peano/prop.gh/pm2.04 | pm2.04] which follows
from Axioms 1 and 2 as you can see [/edit/peano/prop.gh/pm2.04 | here].
Lukasiewicz also replaced the axioms [/edit/peano/prop.gh/con3 | con3],
[/edit/peano/prop.gh/notnot1 | notnot1], [/edit/peano/prop.gh/notnot2 | notnot2]
with our [/edit/peano/prop_min.ghi/ax-3 | Axiom 3].

=== The Semantic and Syntactic Approach ===

The theorems of propositional calculus are also called tautologies.
Tautologies can be proved very simply using truth tables, based on the
true/false interpretation of propositional calculus.  To do this, we
assign all possible combinations of [edit/peano/peano_thms.gh/df-tru | true]
and [edit/peano/peano_thms.gh/df-fal | false] to the
[/wiki/peano/logic/wff | wff] variables and verify that the result
always evaluates to true.  This is called the semantic approach.  Our
approach is called the syntactic approach, in which everything is
derived from axioms.  A metatheorem called the Completeness Theorem for
Propositional Calculus shows that the two approaches are equivalent and
even provides an algorithm for automatically generating syntactic proofs
from a truth table.  Those proofs, however, tend to be long, and the
much shorter proofs that we show here were found manually.  Truth tables
grow exponentially with the number of variables, but it is unknown if the
same is true of proofs - an answer to this would resolve the P=NP
conjecture in complexity theory.

[/wiki/peano/overview | Overview of Topics]